
==================== FINAL INTERFACE ====================
2016-06-12 19:22:41.589195 UTC

interface main@main:Main 7103
  interface hash: c58aea37f4e2f05d4ab0068ced202c9e
  ABI hash: 917b3272400c3e0034551ee72ccf61fc
  export-list hash: baed8c67ad00d4b6ca6fa5221683ba50
  orphan hash: c03076f5e006f4da326f5d1d17f8d44c
  flag hash: 54ffdf05091d9fbd93fe04dece5148f5
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.connStr
  Main.main
module dependencies: Foundation Handlers Rotas
package dependencies: aeson-compat-0.3.2.0@aeson_9wJdCBL4bH5K4w9XiaFHb3
                      aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG
                      auto-update-0.1.3@autou_19qtEoqMgV6FQlA1CkY9Cg base-4.8.2.0
                      base64-bytestring-1.0.0.1@base6_AkCk8zInckjJsyQ4AIFHPN
                      base-compat-0.9.1@basec_3Zy8UsyHmBEEwbReR8x1KT
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-builder-0.4.0.1@blaze_4KI2nf4lf9oHEgXiILyTYj
                      blaze-markup-0.7.0.3@blaze_C7imNkL0ufD2cjmU64FP9k
                      blaze-html-0.8.1.1@blaze_Iq6GES6DAMS0745KzFL7i6
                      byteable-0.1.1@bytea_38yjJsjDRm9KusCn8Yo4aB
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.6@casei_05l5iiwk2FiGu4DeOqOIxC
                      cereal-0.5.1.0@cerea_843xOxvPj94HAJ9SD4EJuq
                      cipher-aes-0.2.11@ciphe_8XNwNKI71EdCLNQ4WGdMQq
                      clientsession-0.9.1.1@clien_LuobzRZeZj55iOint27HgG
                      conduit-1.2.6.4@condu_1EneW8yRsjj18l2EfcgLyu
                      conduit-extra-1.1.13.1@condu_JrYHSonW303HUe4R7rhE0T
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      cookie-0.4.1.6@cooki_2Eb4iZo39x3Ihl7jVKbtZO
                      cprng-aes-0.6.1@cprng_FqpwhJtWO8g27pB5PJZtIq
                      crypto-random-0.0.9@crypt_7BiCOK9v78J36YeClUc9KE
                      crypto-cipher-types-0.0.9@crypt_AkbdiYWeXYI5D4jAOMIXve
                      crypto-api-0.13.2@crypt_Kp4uvZbywBzKttuHrlYBAx
                      css-text-0.1.2.1@csste_BKK1KtEb1sJ9s7LwxLpwLq
                      data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe
                      data-default-0.5.3@datad_DLQPsKM7BNMFfKH45X8LEe
                      data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk
                      data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      easy-file-0.2.1@easyf_IjQ6MMskJyDEpOwcfCdF0G
                      email-validate-2.2.0@email_CQXkJx3ILx16knsHT8WvIg
                      entropy-0.3.7@entro_7gYJ61Ci0NNBp8LB4CGmrG
                      exceptions-0.8.2.1@excep_6lgwjdgwblY7rzh5s6SLd8
                      fast-logger-2.4.3@fastl_5D9PYpdXmW6J1zw1AtN1OL
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I
                      http2-1.4.5@http2_DiIK6FZsEORCMOaqj3QSEe
                      http-api-data-0.2.2@httpa_3kiLcpdXTUe4CYRpIoinpP
                      http-date-0.0.6.1@httpd_K48ICbZdR7j4Lbow4Laii0
                      http-types-0.9@httpt_1qktWOgbYARKyaY9syDTns integer-gmp-1.0.0.0
                      iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT
                      lifted-base-0.2.3.6@lifte_DoOvgrTvmEtENHs0ypaZTR
                      memory-0.11@memor_0EiEBIg44i8KGjAeoKnPDs
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monad-logger-0.3.18@monad_5Adv9Hf1fONCeS01xDfKe7
                      monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ
                      network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      old-time-1.1.0.3@oldti_JVjJvknZJ0JKghfag2Jw2L
                      parsec-3.1.9@parse_7aUabKPjr5W6Al5Ge35AQl
                      path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO
                      persistent-template-2.1.6@persi_1951GfcGAw414vdjFbcV5g
                      persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL
                      persistent-postgresql-2.2.2@persi_EzrtUBM22f5BF3Kdnm31Oz
                      postgresql-libpq-0.9.1.1@postg_6f9D1As2FCe0fjZpXXvHvS
                      postgresql-simple-0.5.1.2@postg_9k9Uw6R9foNDbRYAVYjlMk
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      psqueues-0.2.2.0@psque_Eu4cvucK9D300LguHeaq9c
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ
                      resource-pool-0.2.3.2@resou_BPzNUl5kJsI1qo7V284Tgq
                      safe-0.3.9@safe_Eus5OohxO2XHvdWxKAmhFS
                      scientific-0.3.4.6@scien_5s26qRhE5w04kI4pP1Rtwm
                      securemem-0.1.9@secur_ArobkR9k7uwJiSXmFUrDYT
                      semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO
                      shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet
                      silently-1.2.5@silen_5nVdOe0bUXfLPEbxHJT4m4
                      simple-sendfile-0.2.21@simpl_1s4YZSsjn6TCbK7MVn1EXz
                      skein-1.0.9.4@skein_Gu4ZCUdyHoJKdYGOgDHOva
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      stm-chans-3.0.0.4@stmch_4ac5OLG4E0w1rpuIDCribD
                      streaming-commons-0.1.15.2@strea_0Pv1kz8leJoAmtjyRTUWHG
                      stringsearch-0.3.6.6@strin_CAOAc0sCfAC9gi7YClo2KY
                      tagged-0.8.3@tagge_5cptKNCoGdxJM6eqqNERxD
                      tagsoup-0.13.9@tagso_3I5x83DoCVBIz4INMBLU3R
                      template-haskell-2.10.0.0 text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      time-locale-compat-0.1.1.1@timel_Ciz7M1U3da73rRwCjRF3Np
                      transformers-base-0.4.4@trans_74WedXVmfaHHDJItmBRTVp
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unix-compat-0.4.1.4@unixc_Km8uiabmElX5mrb8D4Fywe
                      unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx
                      unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
                      uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr
                      vault-0.3.0.6@vault_8aId1RjvIBs9AcRd6Dlytd
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      wai-3.2.1@wai_9edbdKSIJ67EotPYC07Pm5
                      wai-extra-3.0.15@waiex_AN9r60wRxlQ1G94yF9jctQ
                      wai-logger-2.2.5@wailo_BCoAaxCAAhP8C9VccJCupp
                      warp-3.2.2@warp_BT83wEXGJqwEvMr1lKbIjl
                      word8-0.1.2@word8_6yKBsGbmsbLB2UCORShr75
                      xss-sanitize-0.3.5.6@xsssa_JdGY8fSYBM7LAdXrSOFQKS
                      yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88
                      yesod-form-1.4.7@yesod_CXBt2wmt7ex0o9Pu0X8jby
                      yesod-1.4.3@yesod_G3l0IvftpcQLS1fhy6ci93
                      yesod-persistent-1.4.0.4@yesod_KDWGSyKXKmE2mrTGkSySls
                      zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu
orphans: aeson-compat-0.3.2.0@aeson_9wJdCBL4bH5K4w9XiaFHb3:Data.Aeson.Compat
         aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak:Data.Aeson.Types.Generic
         aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak:Data.Aeson.Types.Instances
         attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.Text.Internal
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         crypto-api-0.13.2@crypt_Kp4uvZbywBzKttuHrlYBAx:Crypto.Classes
         data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe:Data.Default.Instances.Base
         data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk:Data.Default.Instances.DList
         data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY:Data.Default.Instances.Containers
         data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ:Data.Default.Instances.OldLocale
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         main@main:Handlers
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket.Types
         persistent-template-2.1.6@persi_1951GfcGAw414vdjFbcV5g:Database.Persist.TH
         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistUnique
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx:Data.UnixTime.Diff
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         email-validate-2.2.0@email_CQXkJx3ILx16knsHT8WvIg:Text.Email.Parser
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Addr
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Range
                         main@main:Foundation
                         monad-logger-0.3.18@monad_5Adv9Hf1fONCeS01xDfKe7:Control.Monad.Logger
                         monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS:Control.Monad.Trans.Control
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67:Network.URI
                         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Class.PersistConfig
                         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistStore
                         persistent-postgresql-2.2.2@persi_EzrtUBM22f5BF3Kdnm31Oz:Database.Persist.Postgresql
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ:Control.Monad.Trans.Resource.Internal
                         semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO:Data.List.NonEmpty
                         semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO:Data.Semigroup
                         shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Css
                         shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Shakespeare
                         tagged-0.8.3@tagge_5cptKNCoGdxJM6eqqNERxD:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashSet
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
                         yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Class.Handler
                         yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Types
                         zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu:Codec.Compression.Zlib.Stream
import  -/  base-4.8.2.0:Control.Applicative a8ebf5ad4932b411ad7725da68be9801
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  Foundation 7ddbaf6fb9294ec7dfbfa4352df2e881
  exports: 732d38fc4ff099c803f1a9abd442e125
  Balada e7fe00bb26b77801bf421db01df11e3f
  migrateAll eac326fb2306f61e0159496677df1bee
import  -/  Handlers 58a837c580603258cc072dcfb7d56634
  exports: bce22a3939d36d0e6c67b25d7941adfa
import  -/  Rotas cce1d9857f21ad1dabb2df2426bec80d
  exports: 8be7a049d94b1767de4b5f80575e032b
import  -/  monad-logger-0.3.18@monad_5Adv9Hf1fONCeS01xDfKe7:Control.Monad.Logger 81fdae6370cfcba4c707991affdd9335
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Migration dc77339bb5b8231045cddad4838b345d
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Run 3708c4f5c3251e8e836185dcf62bab38
import  -/  persistent-postgresql-2.2.2@persi_EzrtUBM22f5BF3Kdnm31Oz:Database.Persist.Postgresql e3cee4494ec0b41d091dfbfa53647399
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text 677c532e2dd56476a11a0a8a53880ce7
import  -/  transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.IO.Class 37487179a2f5eb2ea7922b911abcae56
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Dispatch 596e758efcbd6ad043fa509bd19253e0
import  -/  yesod-1.4.3@yesod_G3l0IvftpcQLS1fhy6ci93:Yesod 5be136ed9273569748acb63f2bd39620
addDependentFile "/home/ubuntu/.stack/programs/x86_64-linux/ghc-7.10.3/lib/ghc-7.10.3/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.22.5.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
859930d29e93768045646670daa1cfde
  $s$fApplicativeLoggingT ::
    GHC.Base.Applicative (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fApplicativeLoggingT1
                  Main.$s$fApplicativeLoggingT_$s$fApplicativeLoggingT_$cpure
                  (Control.Monad.Logger.$fApplicativeLoggingT_$c<*>
                     @ GHC.Types.IO
                     Main.$s$fApplicativeLoggingT1
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Logger.$fApplicativeLoggingT_$c*>
                     @ GHC.Types.IO
                     Main.$s$fApplicativeLoggingT1
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Logger.$fApplicativeLoggingT_$c<*
                     @ GHC.Types.IO
                     Main.$s$fApplicativeLoggingT1
                     GHC.Base.$fMonadIO) -}
d469c940725044f953124e79af5ecef8
  $s$fApplicativeLoggingT1 ::
    GHC.Base.Functor (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeLoggingT_$s$fFunctorLoggingT -}
cbae956730334628adb5b981e076008c
  $s$fApplicativeLoggingT_$s$fApplicativeLoggingT_$cpure ::
    a -> Control.Monad.Logger.LoggingT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a17
                   eta :: a17
                   eta1 :: Language.Haskell.TH.Syntax.Loc
                           -> Control.Monad.Logger.LogSource
                           -> Control.Monad.Logger.LogLevel
                           -> System.Log.FastLogger.LogStr.LogStr
                           -> GHC.Types.IO ()
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.returnIO @ a17 eta) `cast` (GHC.Types.NTCo:IO[0] <a17>_R)
                   eta2)
                  `cast`
                (forall a17.
                 <a17>_R
                 ->_R Trans
                          (<Language.Haskell.TH.Syntax.Loc
                            -> Control.Monad.Logger.LogSource
                            -> Control.Monad.Logger.LogLevel
                            -> System.Log.FastLogger.LogStr.LogStr
                            -> GHC.Types.IO ()>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <a17>_R))
                          (Sym (Control.Monad.Logger.NTCo:LoggingT[0]
                                    <GHC.Types.IO>_R <a17>_N))) -}
31713ba1fe8f03c0044923d3e97e1373
  $s$fApplicativeLoggingT_$s$fFunctorLoggingT ::
    GHC.Base.Functor (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  (Control.Monad.Logger.$fFunctorLoggingT_$cfmap
                     @ GHC.Types.IO
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Logger.$fFunctorLoggingT_$c<$
                     @ GHC.Types.IO
                     GHC.Base.$fMonadIO) -}
791875cd35a222f3c36dab55097c07e3
  $s$fApplicativeNoLoggingT ::
    GHC.Base.Applicative
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  Main.$s$fApplicativeNoLoggingT2
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$cpure
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT2
                     Main.$s$fApplicativeNoLoggingT1)
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$c<*>
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT2
                     Main.$s$fApplicativeNoLoggingT1)
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$c*>
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT2
                     Main.$s$fApplicativeNoLoggingT1)
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$c<*
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT2
                     Main.$s$fApplicativeNoLoggingT1) -}
fad471a36b703f90394e7b3d8cfeba1c
  $s$fApplicativeNoLoggingT1 ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Network.Wai.Parse.$s$fMonadBasebResourceT_$s$fMonadResourceT -}
d5c96b87437cabe98ca56be58eb63aa2
  $s$fApplicativeNoLoggingT2 ::
    GHC.Base.Functor
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT -}
5e8c600156bb3d3c834f4c7dab004a18
  $s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT ::
    GHC.Base.Functor
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  (Control.Monad.Logger.$fFunctorNoLoggingT_$cfmap
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT1)
                  (Control.Monad.Logger.$fFunctorNoLoggingT_$c<$
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT1) -}
c88dc074c1df2be6285b755b03d87018
  $s$fMonadBaseControlbLoggingT ::
    Control.Monad.Trans.Control.MonadBaseControl
      GHC.Types.IO (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fMonadBaseControlbLoggingT_$dMonadBase
                  (Control.Monad.Logger.$fMonadBaseControlbLoggingT_$cliftBaseWith
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     Main.$s$fMonadBaseControlbLoggingT_$dMonadBase
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO)
                  (Control.Monad.Logger.$fMonadBaseControlbLoggingT_$crestoreM
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     Main.$s$fMonadBaseControlbLoggingT_$dMonadBase
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO) -}
dcf9434e01469a6a9ca094d997d2aabb
  $s$fMonadBaseControlbLoggingT1 ::
    GHC.Base.Monad (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadBaseControlbLoggingT_$s$fMonadLoggingT -}
5736b55e7f129ea6d1a07e30fc02d252
  $s$fMonadBaseControlbLoggingT2 ::
    GHC.Base.String -> Control.Monad.Logger.LoggingT GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a17 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Control.Monad.Logger.LoggingT GHC.Types.IO a17)
                   eta) -}
6e4300ad339745cf3f2e79b68971da1a
  $s$fMonadBaseControlbLoggingT3 ::
    GHC.Base.Applicative (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeLoggingT -}
2f0c5099206ed36158b24e129ba88dbd
  $s$fMonadBaseControlbLoggingT_$dMonadBase ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT -}
a907d5981ccad1afe96d6d35ca4ee8c7
  $s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  Main.$s$fMonadBaseControlbLoggingT3
                  GHC.Base.$fMonadIO
                  Main.$s$fMonadBaseControlbLoggingT1
                  Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT_$cliftBase -}
8941233d1218d7ae46076da6f5cf8fa6
  $s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT_$cliftBase ::
    GHC.Types.IO α -> Control.Monad.Logger.LoggingT GHC.Types.IO α
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ α eta :: GHC.Types.IO α ->
                 let {
                   eta1 :: GHC.Types.IO α = GHC.Base.id @ (GHC.Types.IO α) eta
                 } in
                 (\ ds :: Language.Haskell.TH.Syntax.Loc
                          -> Control.Monad.Logger.LogSource
                          -> Control.Monad.Logger.LogLevel
                          -> System.Log.FastLogger.LogStr.LogStr
                          -> GHC.Types.IO () ->
                  eta1)
                   `cast`
                 (Sym (Control.Monad.Logger.NTCo:LoggingT[0]
                           <GHC.Types.IO>_R <α>_N))) -}
b5f96d79769ab8315bfab979b8272ada
  $s$fMonadBaseControlbLoggingT_$s$fMonadLoggingT ::
    GHC.Base.Monad (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fMonadBaseControlbLoggingT3
                  (Control.Monad.Logger.$fMonadLoggingT_$c>>=
                     @ GHC.Types.IO
                     Main.$s$fMonadBaseControlbLoggingT3
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Logger.$fMonadLoggingT_$c>>
                     @ GHC.Types.IO
                     Main.$s$fMonadBaseControlbLoggingT3
                     GHC.Base.$fMonadIO)
                  Main.$s$fApplicativeLoggingT_$s$fApplicativeLoggingT_$cpure
                  Main.$s$fMonadBaseControlbLoggingT2 -}
a16fcf2beea8270f0b207f99ce2abc7f
  $s$fMonadIOLoggingT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fMonadBaseControlbLoggingT1
                  Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT_$cliftBase -}
00e2bcc2dd0ffd6897f26c4c5fc6d7d9
  $s$fMonadIONoLoggingT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  Main.$s$fMonadIONoLoggingT2
                  (Control.Monad.Logger.$fMonadIONoLoggingT_$cliftIO
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fMonadIONoLoggingT2
                     Main.$s$fMonadIONoLoggingT1) -}
4df04e986cff408b583cdb755b804f6d
  $s$fMonadIONoLoggingT1 ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Network.Wai.Parse.$s$fMonadIOResourceT -}
aee667e923aea3fffbdbf481eefbf811
  $s$fMonadIONoLoggingT2 ::
    GHC.Base.Monad
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT -}
f169e4db216d8ddb23c0ddddf0405765
  $s$fMonadIONoLoggingT3 ::
    GHC.Base.String
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a17 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Control.Monad.Logger.NoLoggingT
                        (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a17)
                   eta) -}
ca9060e8056946c535cced14e82e496f
  $s$fMonadIONoLoggingT4 ::
    GHC.Base.Applicative
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT -}
8cb70959e29112965b239589191166fa
  $s$fMonadIONoLoggingT_$s$fMonadNoLoggingT ::
    GHC.Base.Monad
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  Main.$s$fMonadIONoLoggingT4
                  (Control.Monad.Logger.$fMonadNoLoggingT_$c>>=
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fMonadIONoLoggingT4
                     Main.$s$fApplicativeNoLoggingT1)
                  Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT_$c>>
                  (Control.Monad.Logger.$fMonadNoLoggingT_$creturn
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fMonadIONoLoggingT4
                     Main.$s$fApplicativeNoLoggingT1)
                  Main.$s$fMonadIONoLoggingT3 -}
f4084d07124355af8253cde2258760d9
  $s$fMonadIONoLoggingT_$s$fMonadNoLoggingT_$c>> ::
    Control.Monad.Logger.NoLoggingT
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a17
                   @ b
                   m1 :: Control.Monad.Logger.NoLoggingT
                           (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a17
                   k :: Control.Monad.Logger.NoLoggingT
                          (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b ->
                 Control.Monad.Logger.$fMonadNoLoggingT_$c>>=
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   Main.$s$fMonadIONoLoggingT4
                   Main.$s$fApplicativeNoLoggingT1
                   @ a17
                   @ b
                   m1
                   (\ ds :: a17 -> k)) -}
1dc0f9bfb9558f4381390dd36054568e
  $s$fMonadLoggerLoggingT ::
    Control.Monad.Logger.MonadLogger
      (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fMonadBaseControlbLoggingT1
                  Main.$s$fMonadLoggerLoggingT_$s$fMonadLoggerLoggingT_$cmonadLoggerLog -}
eaa68c3ff3ecb368491dfdfb5a3b739d
  $s$fMonadLoggerLoggingT_$s$fMonadLoggerLoggingT_$cmonadLoggerLog ::
    System.Log.FastLogger.LogStr.ToLogStr msg =>
    Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> msg
    -> Control.Monad.Logger.LoggingT GHC.Types.IO ()
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,1*C1(U(U,U))><L,U><L,U><L,U><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ msg
                   $dToLogStr :: System.Log.FastLogger.LogStr.ToLogStr msg
                   a17 :: Language.Haskell.TH.Syntax.Loc
                   b :: Control.Monad.Logger.LogSource
                   c :: Control.Monad.Logger.LogLevel
                   d :: msg ->
                 let {
                   lvl31 :: System.Log.FastLogger.LogStr.LogStr
                   = $dToLogStr
                       `cast`
                     (System.Log.FastLogger.LogStr.NTCo:ToLogStr[0] <msg>_N)
                       d
                 } in
                 (\ f :: Language.Haskell.TH.Syntax.Loc
                         -> Control.Monad.Logger.LogSource
                         -> Control.Monad.Logger.LogLevel
                         -> System.Log.FastLogger.LogStr.LogStr
                         -> GHC.Types.IO () ->
                  GHC.Base.id @ (GHC.Types.IO ()) (f a17 b c lvl31))
                   `cast`
                 (Sym (Control.Monad.Logger.NTCo:LoggingT[0]
                           <GHC.Types.IO>_R <()>_N))) -}
e5de794cda37bc7110492bcea25b6fbd
  connStr :: Data.String.IsString a => a
  {- Arity: 1, Strictness: <C(S),1*C1(U)>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a17 $dIsString :: Data.String.IsString a17 ->
                 $dIsString `cast` (Data.String.NTCo:IsString[0] <a17>_N)
                   Main.connStr1) -}
34bad6c00f52167bacd58f30c3d6e190
  connStr1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "dbname=d5ll0n50qdhk3a host=ec2-50-19-252-72.compute-1.amazonaws.com user=cdgruoqzghdfzj password=hKNYcy4w2v5mvzA0Q9jhgxAhc6 port=5432"#) -}
7d787a6873d451fa302ebcd8743a7fd6
  main :: GHC.Types.IO ()
  {- Unfolding: ((Main.main6
                    Main.main5
                    Main.main1
                      `cast`
                    (<Database.Persist.Sql.Types.ConnectionPool>_R
                     ->_R Trans
                              (<Language.Haskell.TH.Syntax.Loc
                                -> Control.Monad.Logger.LogSource
                                -> Control.Monad.Logger.LogLevel
                                -> System.Log.FastLogger.LogStr.LogStr
                                -> GHC.Types.IO ()>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                              (Sym (Control.Monad.Logger.NTCo:LoggingT[0]
                                        <GHC.Types.IO>_R <()>_N))))
                   `cast`
                 (Control.Monad.Logger.NTCo:LoggingT[0] <GHC.Types.IO>_R <()>_N)
                   Control.Monad.Logger.runStdoutLoggingT1
                     `cast`
                   (<Language.Haskell.TH.Syntax.Loc>_R
                    ->_R <Control.Monad.Logger.LogSource>_R
                    ->_R <Control.Monad.Logger.LogLevel>_R
                    ->_R <System.Log.FastLogger.LogStr.LogStr>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
bcf8dd2e455b380d4cd3fd92ff279b4d
  main1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> (Language.Haskell.TH.Syntax.Loc
        -> Control.Monad.Logger.LogSource
        -> Control.Monad.Logger.LogLevel
        -> System.Log.FastLogger.LogStr.LogStr
        -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ pool :: Database.Persist.Sql.Types.ConnectionPool
                   eta :: Language.Haskell.TH.Syntax.Loc
                          -> Control.Monad.Logger.LogSource
                          -> Control.Monad.Logger.LogLevel
                          -> System.Log.FastLogger.LogStr.LogStr
                          -> GHC.Types.IO ()
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Control.Monad.Trans.Resource.runResourceT
                         @ GHC.Types.IO
                         @ ()
                         Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                         (Database.Persist.Sql.Run.$swithResource1
                            @ Database.Persist.Sql.Types.SqlBackend
                            @ ()
                            pool
                            Main.main3)
                           `cast`
                         (Trans
                              (<GHC.IORef.IORef
                                  Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                              (Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                                        <GHC.Types.IO>_R <()>_N))))
                        `cast`
                      (GHC.Types.NTCo:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 Yesod.Core.Dispatch.warp1
                   @ Foundation.Balada
                   Handlers.$fYesodDispatchBalada
                   Main.main2
                   (Foundation.Balada pool)
                   ipv }) -}
00fde0c9dd045d16140bf6fe327cb707
  main2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8080) -}
fc166be3fd8e9fc50b978b56e914c2fd
  main3 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) ()
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.liftSqlPersistMPool_$srunSqlConn
                   @ ()
                   Main.main4
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Control.Monad.Logger.NoLoggingT
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)>_R
                             <()>_N))) -}
dd674c0571f8632c6151e398ed637ea5
  main4 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   a17 :: Control.Monad.Logger.NoLoggingT
                            (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                            [Data.Text.Internal.Text]
                   = Database.Persist.Sql.Migration.runMigration1
                       @ (Control.Monad.Logger.NoLoggingT
                            (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                       Main.$s$fMonadIONoLoggingT
                       Foundation.migrateAll1
                         `cast`
                       (Trans
                            (<Database.Persist.Sql.Types.SqlBackend>_R
                             ->_R Sym (GHC.Types.NTCo:IO[0]
                                           <(((), [Data.Text.Internal.Text]),
                                             [(GHC.Types.Bool,
                                               Database.Persist.Sql.Types.Sql)])>_R))
                            (Trans
                                 (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                           <Database.Persist.Sql.Types.SqlBackend>_R
                                           <GHC.Types.IO>_R
                                           <(((), [Data.Text.Internal.Text]),
                                             [(GHC.Types.Bool,
                                               Database.Persist.Sql.Types.Sql)])>_N))
                                 (Trans
                                      (Sym (Control.Monad.Trans.Writer.Lazy.NTCo:WriterT[0]
                                                <[(GHC.Types.Bool,
                                                   Database.Persist.Sql.Types.Sql)]>_N
                                                <Control.Monad.Trans.Reader.ReaderT
                                                   Database.Persist.Sql.Types.SqlBackend
                                                   GHC.Types.IO>_R
                                                <((), [Data.Text.Internal.Text])>_N))
                                      (Sym (Control.Monad.Trans.Writer.Lazy.NTCo:WriterT[0]
                                                <[Data.Text.Internal.Text]>_N
                                                <Control.Monad.Trans.Writer.Lazy.WriterT
                                                   Database.Persist.Sql.Types.CautiousMigration
                                                   (Control.Monad.Trans.Reader.ReaderT
                                                      Database.Persist.Sql.Types.SqlBackend
                                                      GHC.Types.IO)>_R
                                                <()>_N)))))
                       GHC.Types.False
                       eta
                 } in
                 (\ r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (a17
                          `cast`
                        (Trans
                             (Control.Monad.Logger.NTCo:NoLoggingT[0]
                                  <Control.Monad.Trans.Resource.Internal.ResourceT
                                     GHC.Types.IO>_R <[Data.Text.Internal.Text]>_N)
                             (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                                  <GHC.Types.IO>_R <[Data.Text.Internal.Text]>_N))
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0] <[Data.Text.Internal.Text]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv, GHC.Tuple.() #) })
                   `cast`
                 (Trans
                      (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                      (Trans
                           (Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                                     <GHC.Types.IO>_R <()>_N))
                           (Sym (Control.Monad.Logger.NTCo:NoLoggingT[0]
                                     <Control.Monad.Trans.Resource.Internal.ResourceT
                                        GHC.Types.IO>_R) <()>_N)))) -}
fca21c5a96fe200c73fc77e48c7f8b8e
  main5 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 10) -}
881d8b1637aeec1929b7ac4c393e1ded
  main6 ::
    GHC.Types.Int
    -> (Database.Persist.Sql.Types.ConnectionPool
        -> Control.Monad.Logger.LoggingT GHC.Types.IO ())
    -> Control.Monad.Logger.LoggingT GHC.Types.IO ()
  {- Unfolding: (Database.Persist.Postgresql.withPostgresqlPool
                   @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                   @ ()
                   Main.$s$fMonadBaseControlbLoggingT
                   Main.$s$fMonadLoggerLoggingT
                   Main.$s$fMonadIOLoggingT
                   Main.main7) -}
9d851ac728d9bff5cf73db3f9c651b6e
  main7 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.ByteString.Internal.unsafePackLenChars
                   (case GHC.List.$wlenAcc
                           @ GHC.Types.Char
                           Main.connStr1
                           0 of ww2 { DEFAULT ->
                    GHC.Types.I# ww2 })
                   Main.connStr1) -}
f697a900c862b6ac5565d6dcaa16be29
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1 @ () Main.main) -}
"SPEC/Main $fApplicativeLoggingT @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                      (Control.Monad.Logger.LoggingT
                                                                         GHC.Types.IO)
                                                       $dMonad :: GHC.Base.Monad GHC.Types.IO
  Control.Monad.Logger.$fApplicativeLoggingT @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Main.$s$fApplicativeLoggingT
"SPEC/Main $fApplicativeLoggingT_$cpure @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                             (Control.Monad.Logger.LoggingT
                                                                                GHC.Types.IO)
                                                              $dMonad :: GHC.Base.Monad GHC.Types.IO
  Control.Monad.Logger.$fApplicativeLoggingT_$cpure @ GHC.Types.IO
                                                    $dFunctor
                                                    $dMonad
  = Main.$s$fApplicativeLoggingT_$s$fApplicativeLoggingT_$cpure
"SPEC/Main $fApplicativeNoLoggingT @ (ResourceT IO)" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                    (Control.Monad.Logger.NoLoggingT
                                                                                       (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                          GHC.Types.IO))
                                                                     $dMonad :: GHC.Base.Monad
                                                                                  (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                     GHC.Types.IO)
  Control.Monad.Logger.$fApplicativeNoLoggingT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                    GHC.Types.IO)
                                               $dFunctor
                                               $dMonad
  = Main.$s$fApplicativeNoLoggingT
"SPEC/Main $fFunctorLoggingT @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                GHC.Types.IO
  Control.Monad.Logger.$fFunctorLoggingT @ GHC.Types.IO $dMonad
  = Main.$s$fApplicativeLoggingT_$s$fFunctorLoggingT
"SPEC/Main $fFunctorNoLoggingT @ (ResourceT IO)" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                              (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                 GHC.Types.IO)
  Control.Monad.Logger.$fFunctorNoLoggingT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                GHC.Types.IO)
                                           $dMonad
  = Main.$s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT
"SPEC/Main $fMonadBaseControlbLoggingT @ IO @ IO" [ALWAYS] forall $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                   GHC.Types.IO
                                                                                   (Control.Monad.Logger.LoggingT
                                                                                      GHC.Types.IO)
                                                                  $dMonadBaseControl :: Control.Monad.Trans.Control.MonadBaseControl
                                                                                          GHC.Types.IO
                                                                                          GHC.Types.IO
  Control.Monad.Logger.$fMonadBaseControlbLoggingT @ GHC.Types.IO
                                                   @ GHC.Types.IO
                                                   $dMonadBase
                                                   $dMonadBaseControl
  = Main.$s$fMonadBaseControlbLoggingT
"SPEC/Main $fMonadBasebLoggingT @ IO @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                              GHC.Types.IO
                                                           $dApplicative1 :: GHC.Base.Applicative
                                                                               (Control.Monad.Logger.LoggingT
                                                                                  GHC.Types.IO)
                                                           $dMonad :: GHC.Base.Monad GHC.Types.IO
                                                           $dMonad1 :: GHC.Base.Monad
                                                                         (Control.Monad.Logger.LoggingT
                                                                            GHC.Types.IO)
                                                           $dMonadBase :: Control.Monad.Base.MonadBase
                                                                            GHC.Types.IO
                                                                            GHC.Types.IO
  Control.Monad.Logger.$fMonadBasebLoggingT @ GHC.Types.IO
                                            @ GHC.Types.IO
                                            $dApplicative
                                            $dApplicative1
                                            $dMonad
                                            $dMonad1
                                            $dMonadBase
  = Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT
"SPEC/Main $fMonadBasebLoggingT_$cliftBase @ IO @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                         GHC.Types.IO
                                                                      $dApplicative1 :: GHC.Base.Applicative
                                                                                          (Control.Monad.Logger.LoggingT
                                                                                             GHC.Types.IO)
                                                                      $dMonad :: GHC.Base.Monad
                                                                                   GHC.Types.IO
                                                                      $dMonad1 :: GHC.Base.Monad
                                                                                    (Control.Monad.Logger.LoggingT
                                                                                       GHC.Types.IO)
                                                                      $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                       GHC.Types.IO
                                                                                       GHC.Types.IO
  Control.Monad.Logger.$fMonadBasebLoggingT_$cliftBase @ GHC.Types.IO
                                                       @ GHC.Types.IO
                                                       $dApplicative
                                                       $dApplicative1
                                                       $dMonad
                                                       $dMonad1
                                                       $dMonadBase
  = Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT_$cliftBase
"SPEC/Main $fMonadIOLoggingT @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                (Control.Monad.Logger.LoggingT
                                                                   GHC.Types.IO)
                                                   $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                  GHC.Types.IO
  Control.Monad.Logger.$fMonadIOLoggingT @ GHC.Types.IO
                                         $dMonad
                                         $dMonadIO
  = Main.$s$fMonadIOLoggingT
"SPEC/Main $fMonadIONoLoggingT @ (ResourceT IO)" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                              (Control.Monad.Logger.NoLoggingT
                                                                                 (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                    GHC.Types.IO))
                                                                 $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                   GHC.Types.IO)
  Control.Monad.Logger.$fMonadIONoLoggingT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                GHC.Types.IO)
                                           $dMonad
                                           $dMonadIO
  = Main.$s$fMonadIONoLoggingT
"SPEC/Main $fMonadLoggerLoggingT @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                    (Control.Monad.Logger.LoggingT
                                                                       GHC.Types.IO)
                                                       $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                      GHC.Types.IO
  Control.Monad.Logger.$fMonadLoggerLoggingT @ GHC.Types.IO
                                             $dMonad
                                             $dMonadIO
  = Main.$s$fMonadLoggerLoggingT
"SPEC/Main $fMonadLoggerLoggingT_$cmonadLoggerLog @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                                     (Control.Monad.Logger.LoggingT
                                                                                        GHC.Types.IO)
                                                                        $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                       GHC.Types.IO
  Control.Monad.Logger.$fMonadLoggerLoggingT_$cmonadLoggerLog @ GHC.Types.IO
                                                              $dMonad
                                                              $dMonadIO
  = Main.$s$fMonadLoggerLoggingT_$s$fMonadLoggerLoggingT_$cmonadLoggerLog
"SPEC/Main $fMonadLoggingT @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                    (Control.Monad.Logger.LoggingT
                                                                       GHC.Types.IO)
                                                 $dMonad :: GHC.Base.Monad GHC.Types.IO
  Control.Monad.Logger.$fMonadLoggingT @ GHC.Types.IO
                                       $dApplicative
                                       $dMonad
  = Main.$s$fMonadBaseControlbLoggingT_$s$fMonadLoggingT
"SPEC/Main $fMonadNoLoggingT @ (ResourceT IO)" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                  (Control.Monad.Logger.NoLoggingT
                                                                                     (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                        GHC.Types.IO))
                                                               $dMonad :: GHC.Base.Monad
                                                                            (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                               GHC.Types.IO)
  Control.Monad.Logger.$fMonadNoLoggingT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                              GHC.Types.IO)
                                         $dApplicative
                                         $dMonad
  = Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT
"SPEC/Main $fMonadNoLoggingT_$c>> @ (ResourceT IO)" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                       (Control.Monad.Logger.NoLoggingT
                                                                                          (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                             GHC.Types.IO))
                                                                    $dMonad :: GHC.Base.Monad
                                                                                 (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                    GHC.Types.IO)
  Control.Monad.Logger.$fMonadNoLoggingT_$c>> @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                   GHC.Types.IO)
                                              $dApplicative
                                              $dMonad
  = Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT_$c>>
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

