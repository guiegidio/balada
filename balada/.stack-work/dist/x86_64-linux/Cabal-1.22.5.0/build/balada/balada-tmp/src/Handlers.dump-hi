
==================== FINAL INTERFACE ====================
2016-06-14 10:18:34.951381 UTC

interface main@main:Handlers [orphan module] 7103
  interface hash: 07f97c8340d7e865927559e3be5c68c3
  ABI hash: a7f025757ef48f9ae390ab1f4e4633bb
  export-list hash: d996ba03eb9ac485404957f301a07476
  orphan hash: b24a985b1e3c690023cd6c1c5c4bae20
  flag hash: eff5e623cf316ffe3f39252fffb87620
  sig of: Nothing
  used TH splices: True
  where
exports:
  Handlers.categs
  Handlers.estabs
  Handlers.formCategoria
  Handlers.formDia
  Handlers.formEstabelecimento
  Handlers.formFaixapreco
  Handlers.formLogin
  Handlers.formPessoa
  Handlers.formSubcategoria
  Handlers.getAboutR
  Handlers.getAdminR
  Handlers.getCadcategoriaR
  Handlers.getCaddiaR
  Handlers.getCadestabR
  Handlers.getCadfaixaprecoR
  Handlers.getCadpessoaR
  Handlers.getCadsubcategR
  Handlers.getErroR
  Handlers.getHomeR
  Handlers.getListaestabsR
  Handlers.getLoginR
  Handlers.getLogoutR
  Handlers.getPerfilR
  Handlers.listaClassificacao
  Handlers.listaDia
  Handlers.listaFaixapreco
  Handlers.listaSubcategoria
  Handlers.postCadcategoriaR
  Handlers.postCaddiaR
  Handlers.postCadestabR
  Handlers.postCadfaixaprecoR
  Handlers.postCadpessoaR
  Handlers.postCadsubcategR
  Handlers.postLoginR
module dependencies: Foundation Rotas
package dependencies: aeson-compat-0.3.2.0@aeson_9wJdCBL4bH5K4w9XiaFHb3
                      aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG
                      auto-update-0.1.3@autou_19qtEoqMgV6FQlA1CkY9Cg base-4.8.2.0
                      base64-bytestring-1.0.0.1@base6_AkCk8zInckjJsyQ4AIFHPN
                      base-compat-0.9.1@basec_3Zy8UsyHmBEEwbReR8x1KT
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-builder-0.4.0.1@blaze_4KI2nf4lf9oHEgXiILyTYj
                      blaze-markup-0.7.0.3@blaze_C7imNkL0ufD2cjmU64FP9k
                      blaze-html-0.8.1.1@blaze_Iq6GES6DAMS0745KzFL7i6
                      byteable-0.1.1@bytea_38yjJsjDRm9KusCn8Yo4aB
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.6@casei_05l5iiwk2FiGu4DeOqOIxC
                      cereal-0.5.1.0@cerea_843xOxvPj94HAJ9SD4EJuq
                      cipher-aes-0.2.11@ciphe_8XNwNKI71EdCLNQ4WGdMQq
                      clientsession-0.9.1.1@clien_LuobzRZeZj55iOint27HgG
                      conduit-1.2.6.4@condu_1EneW8yRsjj18l2EfcgLyu
                      conduit-extra-1.1.13.1@condu_JrYHSonW303HUe4R7rhE0T
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      cookie-0.4.1.6@cooki_2Eb4iZo39x3Ihl7jVKbtZO
                      cprng-aes-0.6.1@cprng_FqpwhJtWO8g27pB5PJZtIq
                      cryptohash-0.11.6@crypt_3Cwvwq9ssRY1dmVI1qI6C2
                      crypto-random-0.0.9@crypt_7BiCOK9v78J36YeClUc9KE
                      cryptonite-0.10@crypt_9z0j8QI27Av2VIWw0mEkTO
                      crypto-cipher-types-0.0.9@crypt_AkbdiYWeXYI5D4jAOMIXve
                      cryptohash-conduit-0.1.1@crypt_BAJu9mKzLnyBUqveoUT0Xl
                      crypto-api-0.13.2@crypt_Kp4uvZbywBzKttuHrlYBAx
                      css-text-0.1.2.1@csste_BKK1KtEb1sJ9s7LwxLpwLq
                      data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe
                      data-default-0.5.3@datad_DLQPsKM7BNMFfKH45X8LEe
                      data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk
                      data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      easy-file-0.2.1@easyf_IjQ6MMskJyDEpOwcfCdF0G
                      email-validate-2.2.0@email_CQXkJx3ILx16knsHT8WvIg
                      entropy-0.3.7@entro_7gYJ61Ci0NNBp8LB4CGmrG
                      exceptions-0.8.2.1@excep_6lgwjdgwblY7rzh5s6SLd8
                      fast-logger-2.4.3@fastl_5D9PYpdXmW6J1zw1AtN1OL
                      file-embed-0.0.9.1@filee_ID0BQq7SkFm2s7BTdE1urr
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I
                      http2-1.4.5@http2_DiIK6FZsEORCMOaqj3QSEe
                      http-api-data-0.2.2@httpa_3kiLcpdXTUe4CYRpIoinpP
                      http-date-0.0.6.1@httpd_K48ICbZdR7j4Lbow4Laii0
                      http-types-0.9@httpt_1qktWOgbYARKyaY9syDTns integer-gmp-1.0.0.0
                      iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT
                      lifted-base-0.2.3.6@lifte_DoOvgrTvmEtENHs0ypaZTR
                      memory-0.11@memor_0EiEBIg44i8KGjAeoKnPDs
                      mime-types-0.1.0.6@mimet_9JBMcwv2Xiq5zZQuEgPby5
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monad-logger-0.3.18@monad_5Adv9Hf1fONCeS01xDfKe7
                      monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ
                      network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      old-time-1.1.0.3@oldti_JVjJvknZJ0JKghfag2Jw2L
                      parsec-3.1.9@parse_7aUabKPjr5W6Al5Ge35AQl
                      path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO
                      persistent-template-2.1.6@persi_1951GfcGAw414vdjFbcV5g
                      persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL
                      persistent-postgresql-2.2.2@persi_EzrtUBM22f5BF3Kdnm31Oz
                      postgresql-libpq-0.9.1.1@postg_6f9D1As2FCe0fjZpXXvHvS
                      postgresql-simple-0.5.1.2@postg_9k9Uw6R9foNDbRYAVYjlMk
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      psqueues-0.2.2.0@psque_Eu4cvucK9D300LguHeaq9c
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ
                      resource-pool-0.2.3.2@resou_BPzNUl5kJsI1qo7V284Tgq
                      safe-0.3.9@safe_Eus5OohxO2XHvdWxKAmhFS
                      scientific-0.3.4.6@scien_5s26qRhE5w04kI4pP1Rtwm
                      securemem-0.1.9@secur_ArobkR9k7uwJiSXmFUrDYT
                      semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO
                      shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet
                      silently-1.2.5@silen_5nVdOe0bUXfLPEbxHJT4m4
                      simple-sendfile-0.2.21@simpl_1s4YZSsjn6TCbK7MVn1EXz
                      skein-1.0.9.4@skein_Gu4ZCUdyHoJKdYGOgDHOva
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      stm-chans-3.0.0.4@stmch_4ac5OLG4E0w1rpuIDCribD
                      streaming-commons-0.1.15.2@strea_0Pv1kz8leJoAmtjyRTUWHG
                      stringsearch-0.3.6.6@strin_CAOAc0sCfAC9gi7YClo2KY
                      tagged-0.8.3@tagge_5cptKNCoGdxJM6eqqNERxD
                      tagsoup-0.13.9@tagso_3I5x83DoCVBIz4INMBLU3R
                      template-haskell-2.10.0.0 text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      time-locale-compat-0.1.1.1@timel_Ciz7M1U3da73rRwCjRF3Np
                      transformers-base-0.4.4@trans_74WedXVmfaHHDJItmBRTVp
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unix-compat-0.4.1.4@unixc_Km8uiabmElX5mrb8D4Fywe
                      unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx
                      unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
                      uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr
                      vault-0.3.0.6@vault_8aId1RjvIBs9AcRd6Dlytd
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      wai-3.2.1@wai_9edbdKSIJ67EotPYC07Pm5
                      wai-app-static-3.1.5@waiap_CgbYPrxsBGcBgu3idO05MB
                      wai-extra-3.0.15@waiex_AN9r60wRxlQ1G94yF9jctQ
                      wai-logger-2.2.5@wailo_BCoAaxCAAhP8C9VccJCupp
                      warp-3.2.2@warp_BT83wEXGJqwEvMr1lKbIjl
                      word8-0.1.2@word8_6yKBsGbmsbLB2UCORShr75
                      xss-sanitize-0.3.5.6@xsssa_JdGY8fSYBM7LAdXrSOFQKS
                      yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88
                      yesod-form-1.4.7@yesod_CXBt2wmt7ex0o9Pu0X8jby
                      yesod-1.4.3@yesod_G3l0IvftpcQLS1fhy6ci93
                      yesod-persistent-1.4.0.4@yesod_KDWGSyKXKmE2mrTGkSySls
                      yesod-static-1.5.0.3@yesod_Kslr80RVazD2vTcBFRhOjU
                      zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu
orphans: aeson-compat-0.3.2.0@aeson_9wJdCBL4bH5K4w9XiaFHb3:Data.Aeson.Compat
         aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak:Data.Aeson.Types.Generic
         aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak:Data.Aeson.Types.Instances
         attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.Text.Internal
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         crypto-api-0.13.2@crypt_Kp4uvZbywBzKttuHrlYBAx:Crypto.Classes
         data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe:Data.Default.Instances.Base
         data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk:Data.Default.Instances.DList
         data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY:Data.Default.Instances.Containers
         data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ:Data.Default.Instances.OldLocale
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket.Types
         persistent-template-2.1.6@persi_1951GfcGAw414vdjFbcV5g:Database.Persist.TH
         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistUnique
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx:Data.UnixTime.Diff
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         email-validate-2.2.0@email_CQXkJx3ILx16knsHT8WvIg:Text.Email.Parser
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Addr
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Range
                         main@main:Foundation
                         monad-logger-0.3.18@monad_5Adv9Hf1fONCeS01xDfKe7:Control.Monad.Logger
                         monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS:Control.Monad.Trans.Control
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67:Network.URI
                         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Class.PersistConfig
                         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistStore
                         persistent-postgresql-2.2.2@persi_EzrtUBM22f5BF3Kdnm31Oz:Database.Persist.Postgresql
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ:Control.Monad.Trans.Resource.Internal
                         semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO:Data.List.NonEmpty
                         semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO:Data.Semigroup
                         shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Css
                         shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Shakespeare
                         tagged-0.8.3@tagge_5cptKNCoGdxJM6eqqNERxD:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashSet
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
                         yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Class.Handler
                         yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Types
                         yesod-static-1.5.0.3@yesod_Kslr80RVazD2vTcBFRhOjU:Yesod.Static
                         zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu:Codec.Compression.Zlib.Stream
import  -/  base-4.8.2.0:Control.Applicative a8ebf5ad4932b411ad7725da68be9801
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  blaze-markup-0.7.0.3@blaze_C7imNkL0ufD2cjmU64FP9k:Text.Blaze.Internal 2898da33690d2db163df0dc76596091c
import  -/  blaze-html-0.8.1.1@blaze_Iq6GES6DAMS0745KzFL7i6:Text.Blaze.Html 75b0386c9ee854906d7c6830574b4617
import  -/  Foundation 5747c81f115ce9661ec7f723393801f1
  exports: b11be3b9bbb83731e47530688054883c
  AboutR c2e80853a4c0c333f783ba4c537687d1
  AdminR 0920e2784423ab2e713714be2a276a78
  Balada 9685d518a1578a8ea6b7b975177de73b
  CadcategoriaR 168c889ef77cf8cacb20798959f63f51
  CaddiaR 49b02d392fffd4919ec2275a9457d554
  CadestabR 57d96fdc29de22e47c322f5b6b781714
  CadfaixaprecoR 4464b26213145fa600dee6ada9911e71
  CadpessoaR 150f25e1365f2bd7a7ef703248b6ca03
  CadsubcategR b944cb70aa78b2d9aa94f41c80859191
  Categoria_estab c50cb350f9abeee44fdafd2b0e771fdf
  Categoria_estab d39600347c8cf449dd44b3616b9b151b
  Categoria_estabNome_categoria 1715f0005be49fd9cb4852aba369ef3e
  Classificacao_estabNome_classificacao 382b6aefaf65407c1fc722a98a79d910
  Dia_evento d07a0eb5c93f5f24ed4ab1f930afe298
  Dia_evento 1c7dbc4b739672f46abc6d48f80aa749
  Dia_eventoDc_dia 3b0096fe3f65eb029134e88562f37211
  ErroR aa1fddc2f1f10cc78c57ba07a29319e5
  Estabelecimento c1c9f66397f408f58aefc7e6f62c9b8e
  Estabelecimento 949f6bae50937b8abbc74e3f67ba6239
  EstabelecimentoNome_estab fd396b71e35c9a6a3b1dbb1a21da95a1
  Faixa_preco d93fc5b047262bb77904eb9bb3d667d9
  Faixa_preco cbd48233fbdf6db51606215ae431156c
  Faixa_precoNome_faixa_preco e1f98e7b960bb87aba06fe3f8b4d8ff4
  Form 91d00ba29bc12b68ea0f2e711f36efd7
  Handler 2de1b0b1ebeedee7ebb9e2ecbc3a1d99
  HomeR 1fa8f4bc2994d9c7792f255f8b5faa4c
  ListaestabsR 67575c24f1f3f682b7e1a46dde3165ba
  LoginR dafc57e01a67b407c9233f7440e122cb
  LogoutR a9530f9c903715538c13a3e1bad926c6
  PerfilR 4df1a3b098e0746fed84c78fcb4055c5
  Pessoas dacef15a07c0c6809a74a99cad3b6577
  Pessoas a76db50578ac8fef20d0adddf32ed566
  PessoasEmail 98b617fe424aa422aa679a9ab571c35a
  PessoasId b1d316a640966d02beac1c53109013aa
  PessoasSenha c97625643a5378684dbf7652efd6cf41
  StaticR b9de80c350bf76fcc4e07ee71103d4a2
  Sub_categ_estab ab74adece3546c1b63f859137511bbfc
  Sub_categ_estab 69e1eef95eb7227cb2d1892b2dc4273d
  Sub_categ_estabNome_sub_categ ba0bc730fb4f504d87a60ad8d35c2b6d
  categoria_estabNome_categoria 6c7e1d86d40db783b4e013ec9b193ffa
  classificacao_estabNome_classificacao 7d97b5f1935bd88c37d121935d222f72
  dia_eventoDc_dia bc821187dcc3598f991e62e5b115113f
  estabelecimentoCidade_estab b4ee1c5d4d68d361ebd90c8441648be5
  estabelecimentoNome_estab cd9049a1727e56d59a4531bdfb8995cb
  faixa_precoNome_faixa_preco 0d98c0c720a9b3dcd1432452a6d064af
  getStatic f5e2b5695774d561d4725b34aed425c4
  pessoasLogin 8ce2ecc01b5b2c535c247c7b4b78e787
  pessoasNome 30ab85ca2d1ebd917b8b352e29bb6aa6
  style_css 35774451406c3c33fa7a7ef651c994e9
  sub_categ_estabNome_sub_categ 409f47ebaf82bd997badd4dc5291d711
import  -/  Rotas 3afec9a78f26d1f75b985ca9a4659a18
  exports: 9e75376dfaae94121967e2261d8299b0
  pRoutes c397c0725a9f5e21b25c67adbc66efd8
import  -/  monad-logger-0.3.18@monad_5Adv9Hf1fONCeS01xDfKe7:Control.Monad.Logger 81fdae6370cfcba4c707991affdd9335
import  -/  path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO:Web.PathPieces e7a246921fcfef213af85b6de92fc54c
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist 180e79e34f196720918955b2b484cd93
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Class.PersistEntity 5eb8f78ed08e3d1cc2eb03a542ee8ef5
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Class.PersistQuery 2b12376c014d739fb931ca682ace638c
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Class.PersistStore 19578d4a470dc95e7c983b258734668b
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistStore 0a06b59de39b78fb9c25f28885d3b285
import  -/  persistent-postgresql-2.2.2@persi_EzrtUBM22f5BF3Kdnm31Oz:Database.Persist.Postgresql e3cee4494ec0b41d091dfbfa53647399
import  -/  shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Cassius aa613b98fc667e8306c50662f383651f
import  -/  shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Lucius 6a7d45a36131f7c945150a1a68fb957a
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text 677c532e2dd56476a11a0a8a53880ce7
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Internal d9b6b9a9dd535595b612aea5738b7466
import  -/  wai-3.2.1@wai_9edbdKSIJ67EotPYC07Pm5:Network.Wai.Internal c94cac656eee982fa1e36c81ceaa3aaf
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Class.Dispatch 9efa014da7db9ea2643ef9b6013368bc
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Class.Yesod e0b32da768aac32a5b908402d95fa4b4
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Handler faf894fb8d5127174e21c5e5ba5d9c37
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Internal.Run bed196a7849a8cb603b99143837e8073
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Internal.TH 7f968c8685f147b669e9c01e96081c03
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Types b87a23cf340ec09847f602f8054b5de4
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Widget 34a12ed3ff9183516ec7108dc8a5f8fa
import  -/  yesod-form-1.4.7@yesod_CXBt2wmt7ex0o9Pu0X8jby:Yesod.Form.Fields 4207f45e7d180fd1d9653dc5888247fc
import  -/  yesod-form-1.4.7@yesod_CXBt2wmt7ex0o9Pu0X8jby:Yesod.Form.Functions b0a2f4186f9d70893c256ce5bcdb5ca6
import  -/  yesod-form-1.4.7@yesod_CXBt2wmt7ex0o9Pu0X8jby:Yesod.Form.Types ad7a892cf89b163d999574176db9d126
import  -/  yesod-1.4.3@yesod_G3l0IvftpcQLS1fhy6ci93:Yesod 5be136ed9273569748acb63f2bd39620
import  -/  yesod-persistent-1.4.0.4@yesod_KDWGSyKXKmE2mrTGkSySls:Yesod.Persist.Core 96ff1ce14becc4a26d0b20a36400367f
import  -/  yesod-static-1.5.0.3@yesod_Kslr80RVazD2vTcBFRhOjU:Yesod.Static 6232c965ad70ab1f773f8c649b0ff405
addDependentFile "/home/ubuntu/.stack/programs/x86_64-linux/ghc-7.10.3/lib/ghc-7.10.3/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.22.5.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
addDependentFile "Hamlets/listaestab.hamlet"
addDependentFile "Hamlets/estabelecimento.hamlet"
addDependentFile "Hamlets/home.hamlet"
7416914dac9e5c5b0335e02c68e3d865
  $fYesodDispatchBalada ::
    Yesod.Core.Class.Dispatch.YesodDispatch Foundation.Balada
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Balada
                  Foundation.$fYesodBalada
                  Handlers.$fYesodDispatchBalada_$cyesodDispatch -}
43663c645dcff07b23c0e6ccc2ca5609
  $fYesodDispatchBalada_$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv Foundation.Balada
    -> Network.Wai.Application
  {- Arity: 2,
     Strictness: <L,U(U,U(U(U,U,U,U,U,U,U,U,U,U),U),U,U,C(U(U,1*U(U,U,U))))><S(LLLLLLLSLLLLLLLL),1*U(U(U,U,U,U),U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Yesod.Core.Types.YesodRunnerEnv Foundation.Balada
                   w1 :: Network.Wai.Internal.Request ->
                 case w1 of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 Handlers.$w$cyesodDispatch
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16 }) -}
7c4b5d9f47e87f0bc8f79c9942b1f288
  $s$fApplicativeWidgetT ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fApplicativeWidgetT1
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$cpure
                  (Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fApplicativeWidgetT1
                     GHC.Base.$fMonadIO)
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* -}
2c8be1e47a36facd2c1a54262de8ef05
  $s$fApplicativeWidgetT1 ::
    GHC.Base.Functor
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Yesod.Core.Class.Yesod.$s$fFunctorWidgetT @ Foundation.Balada) -}
97d4a165bc617528a480a87f42981e4a
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*> ::
    Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO b
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a88
                   @ b
                   eta :: Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a88
                   eta2 :: Yesod.Core.Types.WidgetT
                             Foundation.Balada GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   Handlers.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ b
                   (Yesod.Core.Class.Yesod.$s$fFunctorWidgetT_$s$fFunctorWidgetT_$c<$
                      @ Foundation.Balada
                      @ (b -> b)
                      @ a88
                      (GHC.Base.id @ b)
                      eta)
                   eta2) -}
70651bca88bdf59f70f67828cc6cd69b
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* ::
    Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a88
                   @ b
                   eta :: Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a88
                   eta2 :: Yesod.Core.Types.WidgetT
                             Foundation.Balada GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   Handlers.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ a88
                   (Yesod.Core.Types.$fFunctorWidgetT_$cfmap
                      @ Foundation.Balada
                      @ GHC.Types.IO
                      GHC.Base.$fMonadIO
                      @ a88
                      @ (b -> a88)
                      (GHC.Base.const @ a88 @ b)
                      eta)
                   eta2) -}
a4881382e9046376d0659c2342b6f3b5
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$cpure ::
    a -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a88
                   a89 :: a88
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.returnIO
                    @ (a88,
                       Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route Foundation.Balada))
                    (a89,
                     Yesod.Core.Types.$fApplicativeWidgetT_$cmempty
                       @ (Yesod.Routes.Class.Route Foundation.Balada)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <(a88,
                        Yesod.Core.Types.GWData
                          (Yesod.Routes.Class.Route Foundation.Balada))>_R)
                   eta2)
                  `cast`
                (forall a88.
                 <a88>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(a88,
                                           Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route Foundation.Balada))>_R))
                          (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                    <Foundation.Balada>_N <GHC.Types.IO>_N <a88>_N))) -}
54eae92b6a17ce9b90de91687b20266f
  $s$fMonadBasebWidgetT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  Handlers.$s$fMonadBasebWidgetT3
                  GHC.Base.$fMonadIO
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadBasebWidgetT_$cliftBase
                     @ GHC.Types.IO
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.Base.$fMonadBaseIOIO) -}
2571c3dfba1f19d12ceb7ab53fe8f841
  $s$fMonadBasebWidgetT1 ::
    GHC.Base.Monad
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadBasebWidgetT_$s$fMonadWidgetT -}
665353fc3f742ea58e4ad382344c4714
  $s$fMonadBasebWidgetT2 ::
    GHC.Base.String
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a88 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a88)
                   eta) -}
b4eb2f0e6183a58b8c3c9370dd71e286
  $s$fMonadBasebWidgetT3 ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fApplicativeWidgetT -}
52bf9942c9dcff56be73ce68e35db9eb
  $s$fMonadBasebWidgetT_$s$fMonadWidgetT ::
    GHC.Base.Monad
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT3
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>=
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$cpure
                  Handlers.$s$fMonadBasebWidgetT2 -}
2fb5e82caf237782a51dc6a5a158cd73
  $s$fMonadHandlerWidgetT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadHandlerWidgetT2
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cliftHandlerT
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadHandlerWidgetT2
                     Handlers.$s$fMonadHandlerWidgetT1) -}
6db210b16fde3311bea5dcc3b512b7ec
  $s$fMonadHandlerWidgetT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO,
                  GHC.Base.$fApplicativeIO)) -}
6284686eff455173c96870d4eff2ea60
  $s$fMonadHandlerWidgetT2 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT -}
59b7d74948148e847c8c0cf20239a49a
  $s$fMonadHandlerWidgetT3 ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadBasebWidgetT -}
25dd30d43d930ef136a6b689deeb2657
  $s$fMonadHandlerWidgetT4 ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT -}
74d427236efc85846053bb7dc6b8d102
  $s$fMonadHandlerWidgetT5 ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT -}
3b55963badda16076f559da40a38f6bf
  $s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadIOWidgetT_$cliftIO
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.IO.Class.$fMonadIOIO) -}
bf3a71677b8e3a4ee72b672d9a295764
  $s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadHandlerWidgetT5
                  Handlers.$s$fMonadHandlerWidgetT4
                  Handlers.$s$fMonadBasebWidgetT3
                  Handlers.$s$fMonadHandlerWidgetT3
                  (Yesod.Core.Types.$fMonadResourceWidgetT_$cliftResourceT
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadHandlerWidgetT5
                     Handlers.$s$fMonadHandlerWidgetT4
                     Handlers.$s$fMonadBasebWidgetT3
                     Handlers.$s$fMonadHandlerWidgetT3
                     GHC.Base.$fApplicativeIO
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
ea8fcb87b58b2037ad8ff86e9f9d425b
  $s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadThrowWidgetT_$cthrowM
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.Catch.$fMonadThrowIO) -}
bcc008cb5b66f339f97afe6e31ce518f
  $w$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv Foundation.Balada
    -> Network.HTTP.Types.Method.Method
    -> Network.HTTP.Types.Version.HttpVersion
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Network.HTTP.Types.Header.RequestHeaders
    -> GHC.Types.Bool
    -> Network.Socket.Types.SockAddr
    -> [Data.Text.Internal.Text]
    -> Network.HTTP.Types.URI.Query
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> Data.Vault.Lazy.Vault
    -> Network.Wai.Internal.RequestBodyLength
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Types.IO Network.Wai.Internal.ResponseReceived
  {- Arity: 17,
     Strictness: <L,U(U,U(U(U,U,U,U,U,U,U,U,U,U),U),U,U,C(U(U,1*U(U,U,U))))><L,U(U,U,U,U)><L,U><L,U(U,U,U,U)><L,U><L,U><L,U><L,U><S,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
36dfbc8d9454c1ff540e0239ff39c2aa
  categs ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Categoria_estab))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Categoria_estab]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Categoria_estab]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.categs17 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Categoria_estab]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Categoria_estab]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Categoria_estab]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Categoria_estab)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs9 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Categoria_estab)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key
                              Foundation.Categoria_estab)
                         Handlers.categs2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Categoria_estab)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Categoria_estab)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Categoria_estab)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Categoria_estab)>_N)))) -}
1eda028cf7719bd9e95728c64724bfc3
  categs10 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: (\ @ site ->
                 (Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO,
                  GHC.Base.$fApplicativeIO)) -}
c755503d95b8d07e5574294867a6dce5
  categs11 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadResourceHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs16 @ site)
                   (Handlers.categs15 @ site)
                   (Handlers.categs14 @ site)
                   (Handlers.categs12 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO
                   Control.Monad.Base.$fMonadBaseIOIO
                   Control.Monad.Catch.$fMonadThrowIO) -}
baa9b8270302b88aa07d8921db1cacdb
  categs12 ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadBasebHandlerT
                   @ GHC.Types.IO
                   @ site
                   @ GHC.Types.IO
                   GHC.Base.$fApplicativeIO
                   (Handlers.categs14 @ site)
                   GHC.Base.$fMonadIO
                   (Handlers.categs13 @ site)
                   Control.Monad.Base.$fMonadBaseIOIO) -}
134650f35b7c388b7b19cdbacd3d4a45
  categs13 ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs14 @ site)
                   GHC.Base.$fMonadIO) -}
bc6b7629a3b6d82f476a51bc5ed62d9b
  categs14 ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fApplicativeHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Yesod.Core.Handler.$s$fFunctorHandlerT @ site)
                   GHC.Base.$fMonadIO) -}
c723f0b427a1b701cc6be3333f14c646
  categs15 ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadIOHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs13 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
15b9d6d696f213f073ac86c24b9fc1f4
  categs16 ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadThrowHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs13 @ site)
                   Control.Monad.Catch.$fMonadThrowIO) -}
23544d28bff217aee18231d695eee2bb
  categs17 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Categoria_estab]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Categoria_estab)))
                   = (Handlers.categs_m2 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Categoria_estab))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Categoria_estab))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Categoria_estab))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Categoria_estab))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Categoria_estab]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Categoria_estab)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Categoria_estab)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Categoria_estab]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Categoria_estab]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Categoria_estab]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Categoria_estab]>_N)))) -}
966efd5d526e97597a97d0cad44d0e76
  categs18 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Categoria_estab]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Categoria_estab]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Categoria_estab)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Categoria_estab
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityCategoria_estab
                   (Handlers.categs15 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
68c38cf3841db3e94f002e3815d28086
  categs2 ::
    Database.Persist.Class.PersistEntity.Entity
      Foundation.Categoria_estab
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key
          Foundation.Categoria_estab)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Categoria_estab ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Categoria_estab ds4 -> ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Categoria_estab
                    ent)) -}
b0b722a041a3883e6ae7d52554208851
  categs5 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Categoria_estab]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Categoria_estab)
                   Handlers.categs6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Categoria_estab))) -}
05a81fd52d44989dd1081281097ef75c
  categs6 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Categoria_estab
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Categoria_estab
                   @ Data.Text.Internal.Text
                   Handlers.categs7
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldCategoria_estabtyp[0])) <Data.Text.Internal.Text>_N)) -}
b28420d1963d0b16dea3954dc434809b
  categs7 ::
    Foundation.R:EntityFieldCategoria_estabtyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Categoria_estabNome_categoria
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
bcb2e39064d223071309dd1b89ee464a
  categs9 ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Class.Handler.$fMonadHandlerHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs11 @ site)
                   (Handlers.categs10 @ site)) -}
cbb33265ce60da76692f6afd27baa928
  categs_m2 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Categoria_estab)))
  {- Unfolding: (\ @ site ->
                 Handlers.categs18
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Categoria_estab))
                   Handlers.categs5) -}
309bd36323434c72700430ffee76cfaf
  estabs ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Estabelecimento))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Estabelecimento]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Estabelecimento]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.estabs2 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Estabelecimento]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Estabelecimento]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Estabelecimento]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Estabelecimento)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs9 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Estabelecimento)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key
                              Foundation.Estabelecimento)
                         Handlers.estabs1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Estabelecimento)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Estabelecimento)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Estabelecimento)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Estabelecimento)>_N)))) -}
c6d22fd225d093e9390be2b66390ad80
  estabs1 ::
    Database.Persist.Class.PersistEntity.Entity
      Foundation.Estabelecimento
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key
          Foundation.Estabelecimento)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Estabelecimento ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Estabelecimento ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                  ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Estabelecimento
                    ent)) -}
2bc7cc8f97ee94cbe382c71b227de3b3
  estabs2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Estabelecimento]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Estabelecimento)))
                   = (Handlers.estabs_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Estabelecimento))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Estabelecimento))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Estabelecimento))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Estabelecimento))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Estabelecimento]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Estabelecimento)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Estabelecimento)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Estabelecimento]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Estabelecimento]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Estabelecimento]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Estabelecimento]>_N)))) -}
095badda3a638702304307983880a187
  estabs3 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Estabelecimento]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Estabelecimento)
                   Handlers.estabs4
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Estabelecimento))) -}
c6cbf73981c36bdf04fbf0fc31b93964
  estabs4 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Estabelecimento
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Estabelecimento
                   @ Data.Text.Internal.Text
                   Handlers.estabs5
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldEstabelecimentotyp[0])) <Data.Text.Internal.Text>_N)) -}
2383f09c7778b169726e812d7e4f3699
  estabs5 ::
    Foundation.R:EntityFieldEstabelecimentotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.EstabelecimentoNome_estab
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
db9765a086ada5680c28f6227d6cf43a
  estabs6 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Estabelecimento]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Estabelecimento]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Estabelecimento)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Estabelecimento
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityEstabelecimento
                   (Handlers.categs15 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
86ad78509e6f2f3049cf3fc29e93c244
  estabs_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Estabelecimento)))
  {- Unfolding: (\ @ site ->
                 Handlers.estabs6
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Estabelecimento))
                   Handlers.estabs3) -}
7ca823c6e93f710a36b91a168b4e99d9
  formCategoria :: Foundation.Form Foundation.Categoria_estab
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formCategoria1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Categoria_estab>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
508a057c162ff6efe0078009b4c3ef9f
  formCategoria1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Categoria_estab,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Categoria_estab
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formCategoria2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Categoria_estab>_N))
                   eta2
                   eta3
                   eta4) -}
052b30091f275b372430b1e5b16ee2a2
  formCategoria2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Categoria_estab,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formCategoria_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x13 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing @ Foundation.Categoria_estab
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure @ Foundation.Categoria_estab errs
                        Yesod.Form.Types.FormSuccess a88
                        -> Yesod.Form.Types.FormSuccess
                             @ Foundation.Categoria_estab
                             (case a88 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                              Foundation.Categoria_estab dt }) },
                      x13,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Categoria_estab,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Categoria_estab,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
d165c7dff4b796835e4c64e1a4a43703
  formCategoria3 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formCategoria4
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
b67799a679cfbd69375d191f904b143b
  formCategoria4 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formCategoria5) -}
252b33e554a810c27f5149d87785acfa
  formCategoria5 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formCategoria6) -}
a389f952cc611a69dd55e25a70d0f507
  formCategoria6 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formCategoria7
                   0
                   ipv }) -}
9acd3cb2687f0ebeb0fe82651419860a
  formCategoria7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Categoria: "#) -}
4a8750a6fd92cb388c52d9c9d4ed5c84
  formCategoria8 ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Handlers.formCategoria9
                   (Yesod.Form.Fields.textField1 @ Foundation.Handler)
                   Yesod.Form.Types.UrlEncoded) -}
ee927ecd86a39f85abc3a6fd3ed6f67b
  formCategoria9 ::
    [Data.Text.Internal.Text]
    -> [Yesod.Core.Types.FileInfo]
    -> Foundation.Handler
         (Data.Either.Either
            (Text.Shakespeare.I18N.SomeMessage
               (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler))
            (GHC.Base.Maybe Data.Text.Internal.Text))
  {- Arity: 2,
     Unfolding: (\ w3 :: [Data.Text.Internal.Text]
                   w4 :: [Yesod.Core.Types.FileInfo][OneShot] ->
                 Yesod.Form.Functions.$wparseHelperGen
                   @ Yesod.Form.Types.FormMessage
                   @ Data.Text.Internal.Text
                   @ Foundation.Handler
                   @ (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Data.Either.Right
                      @ Yesod.Form.Types.FormMessage
                      @ Data.Text.Internal.Text)
                   w3) -}
6e799459f916f0d5ba993130323bc9d7
  formCategoria_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formCategoria3
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
50052e71212698507bc324eae4cbbb77
  formDia :: Foundation.Form Foundation.Dia_evento
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formDia1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Dia_evento>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
68e840bb561886c9343df35212a26417
  formDia1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Dia_evento,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Dia_evento
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formDia2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Dia_evento>_N))
                   eta2
                   eta3
                   eta4) -}
9aa37005aabdddc5c1523ec891935d82
  formDia2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Dia_evento,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formDia_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x13 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing @ Foundation.Dia_evento
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure @ Foundation.Dia_evento errs
                        Yesod.Form.Types.FormSuccess a88
                        -> Yesod.Form.Types.FormSuccess
                             @ Foundation.Dia_evento
                             (case a88 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                              Foundation.Dia_evento dt }) },
                      x13,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Dia_evento,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Dia_evento,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
e909f64c7ee7f2571f829dd21567de0e
  formDia3 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formDia4
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
910712b6a1b5d200870c5d02fab9eb33
  formDia4 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formDia5) -}
cd7cc5964eb2f1de19b32ac0d4c12d54
  formDia5 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formDia6) -}
77a709ae928d5c3bb1f151214de7602f
  formDia6 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formDia7
                   0
                   ipv }) -}
4ad97b8fb40fdb9c73ca954594a8a233
  formDia7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Dia: "#) -}
fa592419dca35c2ba49e84ee78d8aa01
  formDia_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formDia3
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
957c4c232a94eafc878522ff960ff89d
  formEstabelecimento :: Foundation.Form Foundation.Estabelecimento
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formEstabelecimento1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Estabelecimento>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
e4c5c663d5e703b891d670665f5b16e5
  formEstabelecimento1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Estabelecimento,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Estabelecimento
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formEstabelecimento2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Estabelecimento>_N))
                   eta2
                   eta3
                   eta4) -}
4fa97e3efd0e35cc1efa7f29d213ab8f
  formEstabelecimento10 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Faixa_preco
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Faixa_preco ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Faixa_preco ds4 ds5 ds3 -> ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Faixa_preco
                    ent)) -}
935cef6e3a3b6bb04392c42876abd9b6
  formEstabelecimento11 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Faixa_preco]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity
                        Foundation.Faixa_preco]
                   Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                   (Handlers.formEstabelecimento12 @ Foundation.Balada)
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Faixa_preco]>_N))) -}
93c3a205d6f4fc5436f5caac9f7515f2
  formEstabelecimento12 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Faixa_preco]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Faixa_preco)))
                   = (Handlers.formEstabelecimento_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Faixa_preco))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Faixa_preco))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Faixa_preco))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Faixa_preco))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Faixa_preco]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Faixa_preco)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Faixa_preco)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Faixa_preco]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Faixa_preco]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Faixa_preco]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Faixa_preco]>_N)))) -}
87cbfc8cf2b5ec93f27daa46be1314c3
  formEstabelecimento13 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Faixa_preco]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Faixa_preco)
                   Handlers.formEstabelecimento14
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Faixa_preco))) -}
2548ed319ba6b5e5067708d59820ecdb
  formEstabelecimento14 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Faixa_preco
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Faixa_preco
                   @ Data.Text.Internal.Text
                   Handlers.formEstabelecimento15
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldFaixa_precotyp[0])) <Data.Text.Internal.Text>_N)) -}
e0272bfff6bad18c78b85b10aadd71cd
  formEstabelecimento15 ::
    Foundation.R:EntityFieldFaixa_precotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Faixa_precoNome_faixa_preco
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
7be078e001180f3ec0ae8e763f885324
  formEstabelecimento16 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Faixa_preco]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Faixa_preco]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Faixa_preco)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Faixa_preco
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityFaixa_preco
                   (Handlers.categs15 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
2d42c2bbb54ba848b84dbe528aca66a0
  formEstabelecimento17 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco))
    -> Yesod.Form.Types.Field
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
  {- Unfolding: (Yesod.Form.Fields.selectField
                   @ Foundation.Balada
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                   Foundation.$fEqKey3
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))) -}
d73a6015ae99776fc9e3e9652bf7dcc8
  formEstabelecimento18 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ (Database.Persist.Class.PersistEntity.Key
                        Foundation.Categoria_estab)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                      -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento27
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Database.Persist.Class.PersistEntity.Key
                                Foundation.Categoria_estab
                              -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento19
                   w4
                   w5
                   w6) -}
b6bd4e6c1b7dc1a49a03d2cb80a035d8
  formEstabelecimento19 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key
         Foundation.Categoria_estab)
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ (Database.Persist.Class.PersistEntity.Key
                        Foundation.Categoria_estab)
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formEstabelecimento23
                   Handlers.formEstabelecimento20
                   (GHC.Base.Nothing
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Categoria_estab))) -}
1106200c3f42c672f61a2a75370fab24
  formEstabelecimento2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Estabelecimento,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                   @ Foundation.Estabelecimento
                   Handlers.formEstabelecimento18
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento3
                   w4
                   w5
                   w6) -}
e05a42a787cd803a09fc12441231153c
  formEstabelecimento20 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento21
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
92da960de078f9a3fe54e6015e8d6563
  formEstabelecimento21 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento22) -}
2c015928555785cfad7772ed7b2ab115
  formEstabelecimento22 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formCategoria7
                      0
                      ipv })) -}
9ec393a1dee5c217f2ba68a4e37813c3
  formEstabelecimento23 ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key
         Foundation.Categoria_estab)
  {- Unfolding: (Handlers.formEstabelecimento26
                   Handlers.formEstabelecimento24
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       <Yesod.Form.Fields.OptionList
                                          (Database.Persist.Class.PersistEntity.Key
                                             Foundation.Categoria_estab)>_R))
                        (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                  <Foundation.Balada>_N
                                  <GHC.Types.IO>_N
                                  <Yesod.Form.Fields.OptionList
                                     (Database.Persist.Class.PersistEntity.Key
                                        Foundation.Categoria_estab)>_N)))) -}
2c5c3e2d0dd4a58f0851d51b44933638
  formEstabelecimento24 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key
               Foundation.Categoria_estab) #)
  {- Arity: 2,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistBalada3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistBalada2
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Categoria_estab]
                        (case ipv1 of wild { Foundation.Balada ds ds2 -> ds2 })
                        Handlers.formEstabelecimento25
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key
                          Foundation.Categoria_estab)
                     @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                     (Handlers.categs9 @ Foundation.Balada)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Balada)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                    <Foundation.Balada>_N <GHC.Types.IO>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Categoria_estab)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key
                             Foundation.Categoria_estab)
                        Handlers.categs2
                        ipv3))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Categoria_estab)>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key
                            Foundation.Categoria_estab)>_R)
                   ipv2 } }) -}
803eed7fa4500ffa2e84456746fa55ba
  formEstabelecimento25 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Categoria_estab]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity
                        Foundation.Categoria_estab]
                   Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                   (Handlers.categs17 @ Foundation.Balada)
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Categoria_estab]>_N))) -}
e95d479301cef6e84d8a315b94439f16
  formEstabelecimento26 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Categoria_estab))
    -> Yesod.Form.Types.Field
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Categoria_estab)
  {- Unfolding: (Yesod.Form.Fields.selectField
                   @ Foundation.Balada
                   @ (Database.Persist.Class.PersistEntity.Key
                        Foundation.Categoria_estab)
                   Foundation.$fEqKey5
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))) -}
e5b093d82c9c06f84ccc182dcf8e6309
  formEstabelecimento27 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Database.Persist.Class.PersistEntity.Key
               Foundation.Categoria_estab
             -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Database.Persist.Class.PersistEntity.Key
                        Foundation.Categoria_estab
                      -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                      -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento33
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Database.Persist.Class.PersistEntity.Key
                                   Foundation.Categoria_estab
                              -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento28
                   w4
                   w5
                   w6) -}
900754f0c4137d2f3816df9339827088
  formEstabelecimento28 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento29
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
a6b775049d8a4a41d8adad98b55279ed
  formEstabelecimento29 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento30
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
adf8391ce111c03c4b3006e0d0791d83
  formEstabelecimento3 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formEstabelecimento8
                   Handlers.formEstabelecimento4
                   (GHC.Base.Nothing
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Faixa_preco))) -}
9faa5b7d1f26125896ee8ce276d4d74e
  formEstabelecimento30 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento31) -}
af07f36ab4a380c90cd63fcd7cdde10a
  formEstabelecimento31 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento32
                      0
                      ipv })) -}
c45f62d59750b61a4f8c66cb91e878bc
  formEstabelecimento32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Telefone: "#) -}
4fef31afe41bf633e34d1943c75f0cf4
  formEstabelecimento33 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Database.Persist.Class.PersistEntity.Key
                  Foundation.Categoria_estab
             -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Database.Persist.Class.PersistEntity.Key
                           Foundation.Categoria_estab
                      -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                      -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento39
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Database.Persist.Class.PersistEntity.Key
                                   Foundation.Categoria_estab
                              -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento34
                   w4
                   w5
                   w6) -}
5679000ab3cd3208621f70be48fb22f0
  formEstabelecimento34 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento35
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
2d3bce528d634f38f0c9ffcbc45d0ef8
  formEstabelecimento35 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento36
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
220736523114f460797660b0eef337fc
  formEstabelecimento36 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento37) -}
4366ffa3776b4cb8bcd798798bdae8b7
  formEstabelecimento37 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento38
                      0
                      ipv })) -}
e60392280a745fb2a0b9168edad79a2e
  formEstabelecimento38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DDD: "#) -}
9f71b5feeaa07cf9bac3be4c654b0702
  formEstabelecimento39 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Database.Persist.Class.PersistEntity.Key
                  Foundation.Categoria_estab
             -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Database.Persist.Class.PersistEntity.Key
                           Foundation.Categoria_estab
                      -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                      -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento45
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Database.Persist.Class.PersistEntity.Key
                                   Foundation.Categoria_estab
                              -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento40
                   w4
                   w5
                   w6) -}
4e3bee8c03e668d9d92c10275a8c6e6c
  formEstabelecimento4 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
2ae633599230887322b3b7d3ac993bfa
  formEstabelecimento40 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento41
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
63a9fa1c6ba7bc1fc1cff54c6bbbe854
  formEstabelecimento41 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento42
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
dac36c7b3b983543a4b167330355828e
  formEstabelecimento42 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento43) -}
d452225859983011c83c838b69a9ae9b
  formEstabelecimento43 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento44
                      0
                      ipv })) -}
ef14aac71c5776bb7d3a94d2694e032f
  formEstabelecimento44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Email: "#) -}
324d9fe3862dd178a21fb08f595dc86c
  formEstabelecimento45 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Database.Persist.Class.PersistEntity.Key
                  Foundation.Categoria_estab
             -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Database.Persist.Class.PersistEntity.Key
                           Foundation.Categoria_estab
                      -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                      -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento51
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Database.Persist.Class.PersistEntity.Key
                                   Foundation.Categoria_estab
                              -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento46
                   w4
                   w5
                   w6) -}
a61bacf2c616e7facc70a9f38a7b5653
  formEstabelecimento46 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento47
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
049e95fdac4a7cac14e2280b50e448bf
  formEstabelecimento47 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento48
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
9050fc9d7f89be8ee17e2f97537c5e74
  formEstabelecimento48 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento49) -}
a9e1fdd2de4df8b7ec0bd05c8c282969
  formEstabelecimento49 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento50
                      0
                      ipv })) -}
efe728d1098edd92a6c7fbfee70c5500
  formEstabelecimento5 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento6) -}
653b70240f4bf8aa492a28c2e7535ec6
  formEstabelecimento50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Cidade: "#) -}
6a65a67f9482f3bc9dc34765000af5f1
  formEstabelecimento51 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Database.Persist.Class.PersistEntity.Key
                  Foundation.Categoria_estab
             -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formEstabelecimento_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x13 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Database.Persist.Class.PersistEntity.Key
                                     Foundation.Categoria_estab
                                -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                                -> Foundation.Estabelecimento)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Database.Persist.Class.PersistEntity.Key
                                     Foundation.Categoria_estab
                                -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                                -> Foundation.Estabelecimento)
                             errs
                        Yesod.Form.Types.FormSuccess a88
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Database.Persist.Class.PersistEntity.Key
                                     Foundation.Categoria_estab
                                -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                                -> Foundation.Estabelecimento)
                             (Foundation.$WEstabelecimento a88) },
                      x13,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Database.Persist.Class.PersistEntity.Key
                                               Foundation.Categoria_estab
                                          -> Database.Persist.Class.PersistEntity.Key
                                               Foundation.Faixa_preco
                                          -> Foundation.Estabelecimento),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Database.Persist.Class.PersistEntity.Key
                                          Foundation.Categoria_estab
                                     -> Database.Persist.Class.PersistEntity.Key
                                          Foundation.Faixa_preco
                                     -> Foundation.Estabelecimento),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
ef6ac97b24589a6848656f418b50c15e
  formEstabelecimento52 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento53
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
69ca391d7c8afea4b67e500eb975e307
  formEstabelecimento53 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento54) -}
bdcd4d1a55307424c6a0961e8ee6365b
  formEstabelecimento54 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formEstabelecimento55) -}
2a673c66b0a52de10261333143f149d2
  formEstabelecimento55 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formEstabelecimento56
                   0
                   ipv }) -}
0c6030ed05aff5727dde8966f3a15d8f
  formEstabelecimento56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Nome: "#) -}
997f07f69b0eca7c1663db676a664e94
  formEstabelecimento6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento7
                      0
                      ipv })) -}
75fc5540bfa9be84800cecc8c2f707fe
  formEstabelecimento7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "Pre\\195\\167o: "#) -}
f9e283b2e8767511f8980ed3b1de89ee
  formEstabelecimento8 ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
  {- Unfolding: (Handlers.formEstabelecimento17
                   Handlers.formEstabelecimento9
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       <Yesod.Form.Fields.OptionList
                                          (Database.Persist.Class.PersistEntity.Key
                                             Foundation.Faixa_preco)>_R))
                        (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                  <Foundation.Balada>_N
                                  <GHC.Types.IO>_N
                                  <Yesod.Form.Fields.OptionList
                                     (Database.Persist.Class.PersistEntity.Key
                                        Foundation.Faixa_preco)>_N)))) -}
d1739efd86d83dd92c4bbcbe90e14fde
  formEstabelecimento9 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key
               Foundation.Faixa_preco) #)
  {- Arity: 2,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistBalada3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistBalada2
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Faixa_preco]
                        (case ipv1 of wild { Foundation.Balada ds ds2 -> ds2 })
                        Handlers.formEstabelecimento11
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                     @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                     (Handlers.categs9 @ Foundation.Balada)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Balada)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                    <Foundation.Balada>_N <GHC.Types.IO>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Faixa_preco)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                        Handlers.formEstabelecimento10
                        ipv3))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Faixa_preco)>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key
                            Foundation.Faixa_preco)>_R)
                   ipv2 } }) -}
c62fc85406ecbf4fc2c7e687f190c780
  formEstabelecimento_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento52
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
d99086f44f39d1ea79853e8519431a20
  formEstabelecimento_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Faixa_preco)))
  {- Unfolding: (\ @ site ->
                 Handlers.formEstabelecimento16
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Faixa_preco))
                   Handlers.formEstabelecimento13) -}
9d3b25c68214741ba9bfd1df90cd7c61
  formFaixapreco :: Foundation.Form Foundation.Faixa_preco
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formFaixapreco1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Faixa_preco>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
1f9ac78ca62d74a26aaa367592294299
  formFaixapreco1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Faixa_preco,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Faixa_preco
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formFaixapreco2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Faixa_preco>_N))
                   eta2
                   eta3
                   eta4) -}
3a8a7d346c69738cbb5b9954a0036b8f
  formFaixapreco10 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formFaixapreco11
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
e5e9d7990afebc17bb5f29bb94c285d4
  formFaixapreco11 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formFaixapreco12) -}
eebd865d610c66442c09d6cf44ffba11
  formFaixapreco12 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formFaixapreco13
                      0
                      ipv })) -}
a77e057bafb74f932056a57718f1bd80
  formFaixapreco13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Valor Inicial: "#) -}
d026f9ed448bc5a5cb2ebd103dcc3f34
  formFaixapreco14 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text -> Foundation.Faixa_preco),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formEstabelecimento_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x13 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text -> Foundation.Faixa_preco)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text -> Foundation.Faixa_preco)
                             errs
                        Yesod.Form.Types.FormSuccess a88
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text -> Foundation.Faixa_preco)
                             (Foundation.$WFaixa_preco a88) },
                      x13,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text -> Foundation.Faixa_preco),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text -> Foundation.Faixa_preco),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
cb800598ef5839523cdd5acbd162ab66
  formFaixapreco2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Faixa_preco,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ Foundation.Faixa_preco
                   Handlers.formFaixapreco8
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text -> Foundation.Faixa_preco>_N))
                   Handlers.formFaixapreco3
                   w4
                   w5
                   w6) -}
31ab5df98f7fb9d7f50fecc4297ec278
  formFaixapreco3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formFaixapreco4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
7bf3f45096eb82115255d0c8c3a30539
  formFaixapreco4 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formFaixapreco5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
43942404e646e3a045c0fd738501eb6d
  formFaixapreco5 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formFaixapreco6) -}
d8f25f4e1f0249deb72ae90cfb635fb9
  formFaixapreco6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formFaixapreco7
                      0
                      ipv })) -}
5fead80e84b4d6086b06051c71798d1a
  formFaixapreco7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Valor Final: "#) -}
addc51bd73464b66b3acbc558d041255
  formFaixapreco8 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text -> Foundation.Faixa_preco),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text -> Foundation.Faixa_preco)
                   Handlers.formFaixapreco14
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text -> Foundation.Faixa_preco>_N))
                   Handlers.formFaixapreco9
                   w4
                   w5
                   w6) -}
eeff870d41863dc3032023a1adca14fb
  formFaixapreco9 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formFaixapreco10
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
5086cd53309925891e9ed36409a7b483
  formLogin ::
    Foundation.Form (Data.Text.Internal.Text, Data.Text.Internal.Text)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formLogin1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text, Data.Text.Internal.Text)>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
4e03016ef2516840638818794bbb5a90
  formLogin1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult
             (Data.Text.Internal.Text, Data.Text.Internal.Text),
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formLogin2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <(Data.Text.Internal.Text, Data.Text.Internal.Text)>_N))
                   eta2
                   eta3
                   eta4) -}
0b5051f016b96a5248c35092abcf1128
  formLogin10 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formLogin11
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
18b79f605ac7e6abf99fb1722cc376ee
  formLogin11 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formLogin12) -}
6bbb7957f21adfa2e7ffbf7a4b6aeda7
  formLogin12 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formLogin13) -}
c439d4d00abcccae3a1b5735c0768a22
  formLogin13 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formEstabelecimento44
                   0
                   ipv }) -}
fba345ab47dd97cc97235a95faeb1b9c
  formLogin2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text, Data.Text.Internal.Text),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   Handlers.formLogin9
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> (Data.Text.Internal.Text, Data.Text.Internal.Text)>_N))
                   Handlers.formLogin3
                   w4
                   w5
                   w6) -}
915aaf57be49246cec5ce0f69c832ce3
  formLogin3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formLogin8
                   Handlers.formLogin4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
cd7364bca3f5bfee08b7c507aeb66797
  formLogin4 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formLogin5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
9c42d4c7a7432a8e2459504298c5676c
  formLogin5 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formLogin6) -}
509a84825d411961f606255c39bc36d3
  formLogin6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formLogin7
                      0
                      ipv })) -}
68107aac455349f834adda82472dea8d
  formLogin7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Senha: "#) -}
86538e603bd543dbf60a6622a43cc4e2
  formLogin8 ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Handlers.formCategoria9
                   (Yesod.Form.Fields.passwordField1 @ Foundation.Handler)
                   Yesod.Form.Types.UrlEncoded) -}
30fbe730151991263b2b127117981968
  formLogin9 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> (Data.Text.Internal.Text, Data.Text.Internal.Text)),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formLogin_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x13 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> (Data.Text.Internal.Text, Data.Text.Internal.Text))
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> (Data.Text.Internal.Text, Data.Text.Internal.Text))
                             errs
                        Yesod.Form.Types.FormSuccess a88
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> (Data.Text.Internal.Text, Data.Text.Internal.Text))
                             (GHC.Tuple.(,)
                                @ Data.Text.Internal.Text
                                @ Data.Text.Internal.Text
                                a88) },
                      x13,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> (Data.Text.Internal.Text, Data.Text.Internal.Text)),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> (Data.Text.Internal.Text, Data.Text.Internal.Text)),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
6e3a0802dea2fa5715fdf2aa76698975
  formLogin_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formLogin10
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
254c7a9539519e5f2dd06796137fd854
  formPessoa :: Foundation.Form Foundation.Pessoas
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formPessoa1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Pessoas>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
34b78b60666ac6b73adec312120845a3
  formPessoa1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Pessoas,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Pessoas
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formPessoa2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Pessoas>_N))
                   eta2
                   eta3
                   eta4) -}
669db8b553a7a0aa47677f8e362837b2
  formPessoa10 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa11
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
902103fcc02a43b0fd7d494d503217a3
  formPessoa11 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa12
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
a7be686ff1076c0c74a4553f78a327a2
  formPessoa12 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa13) -}
f5c76993e92dadd3247576fbed869d8a
  formPessoa13 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formPessoa14
                      0
                      ipv })) -}
7afa2a5e161ec14c807a6443f35f4739
  formPessoa14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "E-mail: "#) -}
66c860f95f0e263bee23008ef2bb8341
  formPessoa15 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Pessoas)
                   Handlers.formPessoa16
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formEstabelecimento46
                   w4
                   w5
                   w6) -}
5c6a13faedb9f383f8c3d4831ce99740
  formPessoa16 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Pessoas)
                   Handlers.formPessoa17
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formLogin3
                   w4
                   w5
                   w6) -}
01cd5bb924e7bb136767d3185f87d275
  formPessoa17 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Pessoas)
                   Handlers.formPessoa23
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formPessoa18
                   w4
                   w5
                   w6) -}
bb2bf71548b1c7a04c9970412d2f368c
  formPessoa18 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa19
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
ecf0aeada32ba9203dce579c3c1e09e5
  formPessoa19 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa20
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
a8a543f615ba9c192eb24fbb673d7c96
  formPessoa2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Pessoas,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ Foundation.Pessoas
                   Handlers.formPessoa8
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text -> Foundation.Pessoas>_N))
                   Handlers.formPessoa3
                   w4
                   w5
                   w6) -}
8331a78d6128ca9b46b1d0e2b9085da8
  formPessoa20 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa21) -}
edf3288b2626f022270db9c960114e61
  formPessoa21 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formPessoa22
                      0
                      ipv })) -}
fa5d0c78949ccdab992ae881d1c0a43b
  formPessoa22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Login "#) -}
85cae38ce2b3065fada021f1042da126
  formPessoa23 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Pessoas)
                   Handlers.formPessoa28
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formPessoa24
                   w4
                   w5
                   w6) -}
22834a63c2a303d527d1a0fb3e4883cb
  formPessoa24 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa25
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
8b5a94d5ce6ba375908e0d8353eb8f92
  formPessoa25 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa26
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
1f8f569a059552a9d2a6d52d57e5d07c
  formPessoa26 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa27) -}
745a7b88b4da08f71c86de896a475288
  formPessoa27 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento56
                      0
                      ipv })) -}
26a48a4692fcb9f2037fb2f62019e6b9
  formPessoa28 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formPessoa_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x13 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Pessoas)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Pessoas)
                             errs
                        Yesod.Form.Types.FormSuccess a88
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Pessoas)
                             (Foundation.$WPessoas a88) },
                      x13,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Foundation.Pessoas),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Foundation.Pessoas),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
ad25ce6731ced2e8d016895e1f962718
  formPessoa29 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa36
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   Handlers.formPessoa34
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Handlers.formPessoa30) -}
c8e1bc81d0d099c37618e79c4fc249fb
  formPessoa3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
2aea6e3b5625a0f40203f12580d41f42
  formPessoa30 ::
    [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
  {- Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   Handlers.formPessoa31
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
3050cb48a5db4d788bc065db6d3c071f
  formPessoa31 :: (Data.Text.Internal.Text, Data.Text.Internal.Text)
  {- Unfolding: ((Handlers.formPessoa33, Handlers.formPessoa32)) -}
ec7aead3070a16ca190499ef6e63ca48
  formPessoa32 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "11"#) -}
ebe4f1f8124c3d3a3915868e5d2657c4
  formPessoa33 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "maxlength"#) -}
ecd2e4b9863a100af0a62fe8a6332d12
  formPessoa34 :: GHC.Base.Maybe Data.Text.Internal.Text
  {- Unfolding: (GHC.Base.Just
                   @ Data.Text.Internal.Text
                   Handlers.formPessoa35) -}
336d1339a8b548415249023e9c718d89
  formPessoa35 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "hident2"#) -}
8b7281501044b86d46e6d61b98ec0ef3
  formPessoa36 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa37) -}
d6ef75f660a262522e6d6f9eaea5b8c3
  formPessoa37 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formPessoa38) -}
a5e43f1c2a22e392191c022368c90b65
  formPessoa38 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formPessoa39
                   0
                   ipv }) -}
eb74e08d408d705d397da5b56d853eca
  formPessoa39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CPF"#) -}
ea674b3fa252c05104c4d12d5bdf79b1
  formPessoa4 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
7b6cb0f6cca655ab4bac9b2634a28da4
  formPessoa5 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa6) -}
99d269b423e3f590b3b9b112879fc8d0
  formPessoa6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formPessoa7
                      0
                      ipv })) -}
64ce460c4922399902477abca40181dc
  formPessoa7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Celular: "#) -}
c6bef275f4a25c8ec74d58777b017eed
  formPessoa8 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text -> Foundation.Pessoas)
                   Handlers.formPessoa9
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text -> Foundation.Pessoas>_N))
                   Handlers.formEstabelecimento34
                   w4
                   w5
                   w6) -}
07aa03a303bfca6fd5c59c71ef69b297
  formPessoa9 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text -> Foundation.Pessoas)
                   Handlers.formPessoa15
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formPessoa10
                   w4
                   w5
                   w6) -}
96e557b5c65e6df60e467d472084b3bf
  formPessoa_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa29
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
1db2c3a3c4d71633646f9f9587e6a70e
  formSubcategoria :: Foundation.Form Foundation.Sub_categ_estab
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formSubcategoria1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Sub_categ_estab>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
b125f221db92c3e8fe8fc720d46c9e7f
  formSubcategoria1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Sub_categ_estab
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formSubcategoria2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Sub_categ_estab>_N))
                   eta2
                   eta3
                   eta4) -}
7c4361aeb50f3588f04fe2cb7cf60a3e
  formSubcategoria10 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formSubcategoria11) -}
1d46eeca0a7c329d883b688ef71e3974
  formSubcategoria11 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formSubcategoria12) -}
3100cb228da7f263cae7a3347f4fdff5
  formSubcategoria12 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formSubcategoria13
                   0
                   ipv }) -}
4bb908e254e9cd18e8c5af83802e3329
  formSubcategoria13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Categoria"#) -}
972276ede19a35bd4ba07decc370adac
  formSubcategoria2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ Foundation.Sub_categ_estab
                   Handlers.formSubcategoria8
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text -> Foundation.Sub_categ_estab>_N))
                   Handlers.formSubcategoria3
                   w4
                   w5
                   w6) -}
211ae54156091345b1e5bb82d01ce973
  formSubcategoria3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formSubcategoria4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
676681121a1f6e6f736fc1c8c258d334
  formSubcategoria4 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formSubcategoria5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
c01bab60ecf5fd0db2e5174a5cf7e8e5
  formSubcategoria5 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formSubcategoria6) -}
39131ea8947cdaad0036a04f296c431b
  formSubcategoria6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formSubcategoria7
                      0
                      ipv })) -}
a35553aa7bcbec7b48500f3c617914c9
  formSubcategoria7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Subcategoria: "#) -}
f34b97c186db886b12eea67d0687a5db
  formSubcategoria8 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text -> Foundation.Sub_categ_estab),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formSubcategoria_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x13 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text -> Foundation.Sub_categ_estab)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text -> Foundation.Sub_categ_estab)
                             errs
                        Yesod.Form.Types.FormSuccess a88
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text -> Foundation.Sub_categ_estab)
                             (Foundation.$WSub_categ_estab a88) },
                      x13,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text -> Foundation.Sub_categ_estab),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text -> Foundation.Sub_categ_estab),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
d4bfbe497897914223c79cf241924997
  formSubcategoria9 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formSubcategoria10
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
e4375269f4c668a123128cb4b73fcfee
  formSubcategoria_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formSubcategoria9
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
7233dba5ae3dc11f5ce9b5f3725894a7
  getAboutR ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getAboutR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))) -}
02abb04ce478978eb71201170e481579
  getAboutR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAboutR13
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getAboutR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
6a1572487cc49c4a51b652e4330b2fe3
  getAboutR10 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getAboutR11
                   w4) -}
612845c9d169ddd2285fcfbcd64b5127
  getAboutR11 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.HomeR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
5f42460da030eb1004f6f849b4dce400
  getAboutR12 ::
    Yesod.Core.Types.WidgetT
      Foundation.Balada
      GHC.Types.IO
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))
       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
       -> Data.Text.Internal.Text)
  {- Unfolding: (Yesod.Core.Handler.getUrlRenderParams
                   @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                   Handlers.$s$fMonadHandlerWidgetT) -}
3c5c6f7879455c203c10c7a013200251
  getAboutR13 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getAboutR_x1)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
4f34cf9ef1ca0dc9dc309c094bfa0415
  getAboutR14 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getAboutR15) -}
af1ab0de8bd26276ff35966d10018a50
  getAboutR15 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getAboutR16) -}
7a620df5bf232048837a0b67d230e008
  getAboutR16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "Essa pagina foi criada para acelerar o processo de decidir roles!!!\n\
                   \<a href=\""#) -}
68c0e0ec51df2d80a5f5ccb6f62f8c53
  getAboutR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAboutR10
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getAboutR3
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Balada>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
742094b29ea1dbf86bc93dde9b2eafdf
  getAboutR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getAboutR4 #)) -}
301eb143ca940d3f72f370a8dd79d5d6
  getAboutR4 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getAboutR5
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
53dc757c72fda0c9b35bafbe4ce8305e
  getAboutR5 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getAboutR6
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
2a8fb7b74ebc8a424fc9888a11e4a2b7
  getAboutR6 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getAboutR_x) -}
264f72f9a42b0d30e98e823f8c1f5d1c
  getAboutR7 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getAboutR8) -}
c454ca21d6afe13f939126a8d1b92150
  getAboutR8 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getAboutR9) -}
94e369e1e33e3db808fc8a2e54ff6ce2
  getAboutR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\">Back Home</a>\n"#) -}
937f88c759e9a4d0c55a03aee11b63ba
  getAboutR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAboutR7) -}
7ddd34ce6fb445b980c0d123ea8c68a8
  getAboutR_x1 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAboutR14) -}
2b655060c9b627890d30779f58d7998c
  getAdminR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getAdminR1
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
e86a2b5a29b5e1d4c970d247f6c10e5b
  getAdminR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2,
     Unfolding: (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta, Handlers.getAdminR2 #)) -}
1ffcd5d1ab2cd7dcb7260f0e52259574
  getAdminR2 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getAdminR3
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
e55694ef5669377b205d9069c3ca8d9a
  getAdminR3 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getAdminR4
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
7fab05a50fc3490e2f06a23dfab8d469
  getAdminR4 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getAdminR_x) -}
ef0df4cb48f11528e32899a416c3526a
  getAdminR5 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getAdminR6) -}
714e10c40a6c54419396a54dea46cc07
  getAdminR6 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getAdminR7) -}
44cb371e720167d260ee7d7855dcc8ba
  getAdminR7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> Bem-vindo meu Rei!</h1>\n"#) -}
b67c09bfdeca6c8dd25522b5d96ada5a
  getAdminR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAdminR5) -}
54dc6cb16d1e6a722145e519e75a394d
  getCadcategoriaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadcategoriaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
d04fcd49cb43c7efe31473c02cac3ee0
  getCadcategoriaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getCadcategoriaR23
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodBalada_$cdefaultLayout
                     (let {
                        x13 :: Text.Blaze.Html.Html
                        = case enctype of wild1 {
                            Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                            Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                      } in
                      let {
                        a88 :: Yesod.Core.Types.RY Foundation.Balada
                               -> Text.Blaze.Html.Html
                          {- Arity: 1 -}
                        = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                      } in
                      let {
                        a89 :: Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route Foundation.Balada)
                        = Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Balada)
                            a88
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Balada))
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                      } in
                      let {
                        lvl173 :: ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.Balada GHC.Types.IO))))
                        = (GHC.Tuple.(),
                           a89
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                      } in
                      let {
                        a90 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Balada GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A><L,U>,
                             Unfolding: InlineRule (2, True, False)
                                        (\ eta :: Yesod.Core.Types.HandlerData
                                                    Foundation.Balada
                                                    (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                           eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                         (# eta2,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Balada)
                                                (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                                                 x13)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Balada))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N)))_R)_R) #)) -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          (# eta2, lvl173 #)
                      } in
                      let {
                        a91 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ eta2 :: Yesod.Core.Types.HandlerData
                                                     Foundation.Balada
                                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.NTCo:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N <GHC.Types.IO>_N)
                                                  (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((<()>_R,
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Balada>_N
                                                                    <GHC.Types.IO>_N))_R)_R))_R)_R))
                                           (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Balada
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Balada)
                                              dt1 })) -}
                        = \ eta2 :: Yesod.Core.Types.HandlerData
                                      Foundation.Balada
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.NTCo:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N)
                                   (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((<()>_R,
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.Balada>_N
                                                     <GHC.Types.IO>_N))_R)_R))_R)_R))
                            (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Balada
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Balada)
                               dt1 })
                      } in
                      let {
                        lvl174 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a91
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getCadcategoriaR16
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Balada
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                       <Foundation.Balada>_N
                                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            eta
                      } in
                      let {
                        lvl175 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl174
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl176 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR10
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            lvl175
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl177 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR6
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl176
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl178 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a90
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl177
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Balada
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getCadcategoriaR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0]
                                             ((<()>_R,
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                               <Foundation.Balada>_N
                                                               <GHC.Types.IO>_N)))_R)_R))_R))
                              (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                         lvl178
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
8258312f773cd964fc6c20658732201a
  getCadcategoriaR10 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getCadcategoriaR11
                   w4) -}
817b85825dac1f96aadb7727e77c7103
  getCadcategoriaR11 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadcategoriaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
91152d67bcec88a0906a845a0fcadaba
  getCadcategoriaR12 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getCadcategoriaR_x2)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
78b9353cbd6a067ae998e9c2da970ae7
  getCadcategoriaR13 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadcategoriaR14) -}
71ffd59a1ef8bd26a45a733a0e5384f4
  getCadcategoriaR14 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handlers.getCadcategoriaR15) -}
3245d2d5e3003cbf2fcb41badc4b71c0
  getCadcategoriaR15 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "></center>\n"#) -}
6be93321cb535f1b1a6e979d75dbbd51
  getCadcategoriaR16 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getCadcategoriaR17 #)) -}
a61d9bcc96018c5bc01f23c346660dff
  getCadcategoriaR17 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getCadcategoriaR18
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
1afa06538cef3562ce935f6b61c543d4
  getCadcategoriaR18 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getCadcategoriaR19
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
07ea4609b0e0bf18a14ed900b8460011
  getCadcategoriaR19 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getCadcategoriaR_x3) -}
8260d1024ae30df06746191529cf9f2f
  getCadcategoriaR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getCadcategoriaR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
a8ef1c5dbb5cfc6d0c3b1ed10fcb978c
  getCadcategoriaR20 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadcategoriaR21) -}
1c58332249ad28eaaca7b43027f4a667
  getCadcategoriaR21 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handlers.getCadcategoriaR22) -}
45ddea1aca37f71273a05bfabb326a58
  getCadcategoriaR22 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Enviar\">\n\
                   \<h1> Cadastro de categoria Completo</h1>\n"#) -}
595243ba7daeab8b4232a13f72921af1
  getCadcategoriaR23 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Categoria_estab
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Categoria_estab>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
196efbe4d9e7e58b502e15047588f219
  getCadcategoriaR3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadcategoriaR4) -}
50c5df5a37946431bdd090b4b1f34712
  getCadcategoriaR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getCadcategoriaR5) -}
0423329771683fd94a08e0604f9a7a12
  getCadcategoriaR5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<center> <form method=post enctype="#) -}
5c05b67ab1be66f8804dc15c2ea14829
  getCadcategoriaR6 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getCadcategoriaR_x1)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
8f554a8669a188a96a4cfd2f90f9e2b8
  getCadcategoriaR7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadcategoriaR8) -}
2d41ca4b85e50f8de5e46331d81f42a9
  getCadcategoriaR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getCadcategoriaR9) -}
cfd096ad1a6e9c9b199a6e34f3d952bc
  getCadcategoriaR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# " action="#) -}
d1e6a80d8a7cd8011b3e6a9dcc72ce87
  getCadcategoriaR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadcategoriaR3) -}
f0de3b8f97d9d99768e39c1b982eb651
  getCadcategoriaR_x1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadcategoriaR7) -}
27d639882a1cc4e6c878983b6268199a
  getCadcategoriaR_x2 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadcategoriaR13) -}
2029a3636567dc0c74a745f38dd81ae2
  getCadcategoriaR_x3 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadcategoriaR20) -}
e1ebf3593ea25e0c13b6019a29fa5b53
  getCaddiaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCaddiaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
fb5a0d269a2ab8f1242e8a4754eb5c21
  getCaddiaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getCaddiaR11
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodBalada_$cdefaultLayout
                     (let {
                        x13 :: Text.Blaze.Html.Html
                        = case enctype of wild1 {
                            Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                            Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                      } in
                      let {
                        a88 :: Yesod.Core.Types.RY Foundation.Balada
                               -> Text.Blaze.Html.Html
                          {- Arity: 1 -}
                        = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                      } in
                      let {
                        a89 :: Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route Foundation.Balada)
                        = Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Balada)
                            a88
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Balada))
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                      } in
                      let {
                        lvl173 :: ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.Balada GHC.Types.IO))))
                        = (GHC.Tuple.(),
                           a89
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                      } in
                      let {
                        a90 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Balada GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A><L,U>,
                             Unfolding: InlineRule (2, True, False)
                                        (\ eta :: Yesod.Core.Types.HandlerData
                                                    Foundation.Balada
                                                    (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                           eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                         (# eta2,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Balada)
                                                (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                                                 x13)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Balada))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N)))_R)_R) #)) -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          (# eta2, lvl173 #)
                      } in
                      let {
                        a91 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ eta2 :: Yesod.Core.Types.HandlerData
                                                     Foundation.Balada
                                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.NTCo:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N <GHC.Types.IO>_N)
                                                  (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((<()>_R,
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Balada>_N
                                                                    <GHC.Types.IO>_N))_R)_R))_R)_R))
                                           (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Balada
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Balada)
                                              dt1 })) -}
                        = \ eta2 :: Yesod.Core.Types.HandlerData
                                      Foundation.Balada
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.NTCo:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N)
                                   (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((<()>_R,
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.Balada>_N
                                                     <GHC.Types.IO>_N))_R)_R))_R)_R))
                            (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Balada
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Balada)
                               dt1 })
                      } in
                      let {
                        lvl174 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a91
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getCaddiaR4
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Balada
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                       <Foundation.Balada>_N
                                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            eta
                      } in
                      let {
                        lvl175 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl174
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl176 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCaddiaR2
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            lvl175
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl177 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR6
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl176
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl178 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a90
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl177
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Balada
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getCadcategoriaR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0]
                                             ((<()>_R,
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                               <Foundation.Balada>_N
                                                               <GHC.Types.IO>_N)))_R)_R))_R))
                              (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                         lvl178
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
cd13b0d1372b9fa00bcdc4c64350e78d
  getCaddiaR10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Enviar\">\n\
                   \<h1> Cadastro de dia evento Completo</h1>\n"#) -}
4439f817369a7287868756c36aeb588e
  getCaddiaR11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Dia_evento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formDia1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Dia_evento>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
7e9d883a67dd45004701fb4a2517a971
  getCaddiaR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getCaddiaR3
                   w4) -}
4937f4bbe556deb15d089ea5569a5b4a
  getCaddiaR3 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CaddiaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
75eea4a9e79b9a3eb097bcb3c7bb5be2
  getCaddiaR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getCaddiaR5 #)) -}
1c3eff0b9d7418e306324f4fe4ac9588
  getCaddiaR5 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getCaddiaR6
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
ee0dd04960722d1a240c812c46192b0d
  getCaddiaR6 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getCaddiaR7
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
7897a6a81589b17348637f543344d98b
  getCaddiaR7 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getCaddiaR_x) -}
9c6647966b7fd5dcc849d84ede3099df
  getCaddiaR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getCaddiaR9) -}
786c5a22b90143128a9e1eab8034cd84
  getCaddiaR9 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getCaddiaR10) -}
2aa08bdc0d1ddd03435b8a8242df24bb
  getCaddiaR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCaddiaR8) -}
7655082bcfb4156de7dfd47661e5d1fd
  getCadestabR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadestabR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
fa76978a543df982604af38596569445
  getCadestabR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U> -}
8afe2a1f4d0740e530a1789f55115a74
  getCadfaixaprecoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadfaixaprecoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
ff24c350ae23d1b071aa535e1443a374
  getCadfaixaprecoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getCadfaixaprecoR11
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodBalada_$cdefaultLayout
                     (let {
                        x13 :: Text.Blaze.Html.Html
                        = case enctype of wild1 {
                            Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                            Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                      } in
                      let {
                        a88 :: Yesod.Core.Types.RY Foundation.Balada
                               -> Text.Blaze.Html.Html
                          {- Arity: 1 -}
                        = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                      } in
                      let {
                        a89 :: Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route Foundation.Balada)
                        = Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Balada)
                            a88
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Balada))
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                      } in
                      let {
                        lvl173 :: ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.Balada GHC.Types.IO))))
                        = (GHC.Tuple.(),
                           a89
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                      } in
                      let {
                        a90 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Balada GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A><L,U>,
                             Unfolding: InlineRule (2, True, False)
                                        (\ eta :: Yesod.Core.Types.HandlerData
                                                    Foundation.Balada
                                                    (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                           eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                         (# eta2,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Balada)
                                                (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                                                 x13)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Balada))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N)))_R)_R) #)) -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          (# eta2, lvl173 #)
                      } in
                      let {
                        a91 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ eta2 :: Yesod.Core.Types.HandlerData
                                                     Foundation.Balada
                                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.NTCo:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N <GHC.Types.IO>_N)
                                                  (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((<()>_R,
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Balada>_N
                                                                    <GHC.Types.IO>_N))_R)_R))_R)_R))
                                           (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Balada
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Balada)
                                              dt1 })) -}
                        = \ eta2 :: Yesod.Core.Types.HandlerData
                                      Foundation.Balada
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.NTCo:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N)
                                   (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((<()>_R,
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.Balada>_N
                                                     <GHC.Types.IO>_N))_R)_R))_R)_R))
                            (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Balada
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Balada)
                               dt1 })
                      } in
                      let {
                        lvl174 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a91
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getCadfaixaprecoR4
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Balada
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                       <Foundation.Balada>_N
                                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            eta
                      } in
                      let {
                        lvl175 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl174
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl176 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadfaixaprecoR2
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            lvl175
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl177 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR6
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl176
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl178 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a90
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl177
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Balada
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getCadcategoriaR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0]
                                             ((<()>_R,
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                               <Foundation.Balada>_N
                                                               <GHC.Types.IO>_N)))_R)_R))_R))
                              (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                         lvl178
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
6f0dab61a744896c06803a826dd5968d
  getCadfaixaprecoR10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Enviar\">\n\
                   \<h1> Faixa de preco estabelecido</h1>\n"#) -}
53f9ee2b7aa49b4ce49b2b603ea547c3
  getCadfaixaprecoR11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Faixa_preco
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formFaixapreco1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Faixa_preco>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
6961fe0693605c5c2cfea959e4c98c41
  getCadfaixaprecoR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getCadfaixaprecoR3
                   w4) -}
32e14ceebc2b9b95790a163cc2fc48d0
  getCadfaixaprecoR3 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadfaixaprecoR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
514b0fc5dacc11fc5263b045b665729e
  getCadfaixaprecoR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getCadfaixaprecoR5 #)) -}
f07b8d6a0fb291a8a95213ba690bbf22
  getCadfaixaprecoR5 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getCadfaixaprecoR6
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
52d3ee6e6e9f0a782d2223523ccf5753
  getCadfaixaprecoR6 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getCadfaixaprecoR7
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
3285b950abf886f25c23e99671b8b13a
  getCadfaixaprecoR7 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getCadfaixaprecoR_x) -}
20d6d9f95e051f75ce86f04d5a9a8eda
  getCadfaixaprecoR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadfaixaprecoR9) -}
e075bec228e5a7724fed4b5843e213b6
  getCadfaixaprecoR9 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handlers.getCadfaixaprecoR10) -}
3e28a17c8a0e60a34c899115a19bd62e
  getCadfaixaprecoR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadfaixaprecoR8) -}
e30db42e04533571d82c6e73e44507ad
  getCadpessoaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadpessoaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
c1eafe7b89fac6ad1f815afdde852df5
  getCadpessoaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getCadpessoaR11
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodBalada_$cdefaultLayout
                     (let {
                        x13 :: Text.Blaze.Html.Html
                        = case enctype of wild1 {
                            Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                            Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                      } in
                      let {
                        a88 :: Yesod.Core.Types.RY Foundation.Balada
                               -> Text.Blaze.Html.Html
                          {- Arity: 1 -}
                        = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                      } in
                      let {
                        a89 :: Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route Foundation.Balada)
                        = Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Balada)
                            a88
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Balada))
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                      } in
                      let {
                        lvl173 :: ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.Balada GHC.Types.IO))))
                        = (GHC.Tuple.(),
                           a89
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                      } in
                      let {
                        a90 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Balada GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A><L,U>,
                             Unfolding: InlineRule (2, True, False)
                                        (\ eta :: Yesod.Core.Types.HandlerData
                                                    Foundation.Balada
                                                    (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                           eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                         (# eta2,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Balada)
                                                (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                                                 x13)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Balada))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N)))_R)_R) #)) -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          (# eta2, lvl173 #)
                      } in
                      let {
                        a91 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ eta2 :: Yesod.Core.Types.HandlerData
                                                     Foundation.Balada
                                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.NTCo:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N <GHC.Types.IO>_N)
                                                  (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((<()>_R,
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Balada>_N
                                                                    <GHC.Types.IO>_N))_R)_R))_R)_R))
                                           (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Balada
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Balada)
                                              dt1 })) -}
                        = \ eta2 :: Yesod.Core.Types.HandlerData
                                      Foundation.Balada
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.NTCo:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N)
                                   (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((<()>_R,
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.Balada>_N
                                                     <GHC.Types.IO>_N))_R)_R))_R)_R))
                            (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Balada
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Balada)
                               dt1 })
                      } in
                      let {
                        lvl174 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a91
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getCadpessoaR4
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Balada
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                       <Foundation.Balada>_N
                                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            eta
                      } in
                      let {
                        lvl175 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl174
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl176 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadpessoaR2
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            lvl175
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl177 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR6
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl176
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl178 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a90
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl177
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Balada
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getCadcategoriaR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0]
                                             ((<()>_R,
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                               <Foundation.Balada>_N
                                                               <GHC.Types.IO>_N)))_R)_R))_R))
                              (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                         lvl178
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
35c45c080dde4d012744069f020ea45d
  getCadpessoaR10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Enviar\">\n\
                   \<h1> Cadastro Completo</h1>\n"#) -}
7c6f0e21d684908f5bd4af0214d76aa0
  getCadpessoaR11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Pessoas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formPessoa1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Pessoas>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
8d7ee858ddb9da43c96262b8ff57d7c4
  getCadpessoaR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getCadpessoaR3
                   w4) -}
54f186d484fc7936571d702784fb3d29
  getCadpessoaR3 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadpessoaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
66678ca22e6f913169f6f28145e48e18
  getCadpessoaR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getCadpessoaR5 #)) -}
e11ab34568caa2a860a2bf6b5936ae08
  getCadpessoaR5 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getCadpessoaR6
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
e01b9fce9e02a4e6df889dbe0304de18
  getCadpessoaR6 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getCadpessoaR7
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
bd4ea3161161fc47f54f606d8e94347f
  getCadpessoaR7 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getCadpessoaR_x) -}
153391ad3ed99b5553ea442b5c2088ec
  getCadpessoaR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadpessoaR9) -}
a579a90013c5cd028f1779d03f784cf4
  getCadpessoaR9 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getCadpessoaR10) -}
2808c8f498d8bf1310c2fc720bd3d9c3
  getCadpessoaR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadpessoaR8) -}
bf4fe2ee485d50f11ab119a2ab4c6bd9
  getCadsubcategR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadsubcategR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
7bd39f95c92d5fc378d25c96efdc866d
  getCadsubcategR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getCadsubcategR11
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodBalada_$cdefaultLayout
                     (let {
                        x13 :: Text.Blaze.Html.Html
                        = case enctype of wild1 {
                            Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                            Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                      } in
                      let {
                        a88 :: Yesod.Core.Types.RY Foundation.Balada
                               -> Text.Blaze.Html.Html
                          {- Arity: 1 -}
                        = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                      } in
                      let {
                        a89 :: Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route Foundation.Balada)
                        = Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Balada)
                            a88
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Balada))
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                      } in
                      let {
                        lvl173 :: ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.Balada GHC.Types.IO))))
                        = (GHC.Tuple.(),
                           a89
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                      } in
                      let {
                        a90 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Balada GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A><L,U>,
                             Unfolding: InlineRule (2, True, False)
                                        (\ eta :: Yesod.Core.Types.HandlerData
                                                    Foundation.Balada
                                                    (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                           eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                         (# eta2,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Balada)
                                                (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                                                 x13)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Balada))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N)))_R)_R) #)) -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          (# eta2, lvl173 #)
                      } in
                      let {
                        a91 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ eta2 :: Yesod.Core.Types.HandlerData
                                                     Foundation.Balada
                                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.NTCo:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N <GHC.Types.IO>_N)
                                                  (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((<()>_R,
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Balada>_N
                                                                    <GHC.Types.IO>_N))_R)_R))_R)_R))
                                           (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Balada
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Balada)
                                              dt1 })) -}
                        = \ eta2 :: Yesod.Core.Types.HandlerData
                                      Foundation.Balada
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.NTCo:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N)
                                   (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((<()>_R,
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.Balada>_N
                                                     <GHC.Types.IO>_N))_R)_R))_R)_R))
                            (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Balada
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Balada)
                               dt1 })
                      } in
                      let {
                        lvl174 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a91
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getCadsubcategR4
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Balada
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                       <Foundation.Balada>_N
                                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            eta
                      } in
                      let {
                        lvl175 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl174
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl176 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadsubcategR2
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            lvl175
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl177 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR6
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl176
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl178 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a90
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl177
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Balada
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getCadcategoriaR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0]
                                             ((<()>_R,
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                               <Foundation.Balada>_N
                                                               <GHC.Types.IO>_N)))_R)_R))_R))
                              (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                         lvl178
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
5f2739df7f9d78e4ef0e8374e66d65cc
  getCadsubcategR10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Enviar\">\n\
                   \<h1> Cadastro de subcategoria Completo</h1>\n"#) -}
39afd879dff9f0b179106447e32b2bf5
  getCadsubcategR11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Sub_categ_estab
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formSubcategoria1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Sub_categ_estab>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
795cabce35ee1974f13bddc25401a4bf
  getCadsubcategR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getCadsubcategR3
                   w4) -}
1faed472b589c624a7ce7de3f7f5123d
  getCadsubcategR3 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadsubcategR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
03f38eb6997c701b95f236ebbebaed68
  getCadsubcategR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getCadsubcategR5 #)) -}
d9296721c48d4869e28c2d6eb1e19945
  getCadsubcategR5 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getCadsubcategR6
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
5b8bbe1195b44ab413049f469dfd7a04
  getCadsubcategR6 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getCadsubcategR7
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
d39b10a8470d53dfa4660916734a670e
  getCadsubcategR7 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getCadsubcategR_x) -}
ff491b2bb953e787bd4c041b234b3571
  getCadsubcategR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadsubcategR9) -}
10a5b8fb2276c6cc56800c97fd02cba9
  getCadsubcategR9 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getCadsubcategR10) -}
eaf5469680460e96c7a3508612637ff8
  getCadsubcategR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadsubcategR8) -}
c138ef7d585bff75c99c5570b4bff0bf
  getErroR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getErroR1
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
2cf4429246bc051486d5f7fd405a60d9
  getErroR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2,
     Unfolding: (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta, Handlers.getErroR2 #)) -}
686292a112ed714eb184513e5380a203
  getErroR2 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getErroR3
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
319dd24b642dbc217b782567008047fc
  getErroR3 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getErroR4
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
f32ecec98ba81c87c78484b8fa720c48
  getErroR4 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getErroR_x) -}
05dcf41ce91cf1975d47a89acf65ede5
  getErroR5 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getErroR6) -}
b97ccf9274ea531d10d76a06911be084
  getErroR6 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getErroR7) -}
fbfad99899cc28fe64b4d6ab02349341
  getErroR7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> Erro de cadastro</h1>\n"#) -}
9814b330025e65885d1bdaf4a784eab4
  getErroR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getErroR5) -}
d5823ce01b9e724017cb678882a101d9
  getHomeR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getHomeR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))) -}
d9fdec586d305d6e33f02b0c8b19bee0
  getHomeR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR73
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
ff8e0dbbeaac8f467bf6cc4762b20f60
  getHomeR10 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR45
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR11
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
7c902fb7123911489df23bd635680ae0
  getHomeR11 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR43
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR12
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
13cedda98f8f16f88d66a25ca1d42efd
  getHomeR12 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR39
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR13
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
378d4f6ee4d450d3107c66118f83791e
  getHomeR13 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR37
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR14
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
8b678e6887f0bb692f9d16f5b6a250eb
  getHomeR14 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR33
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR15
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
8dc828581fda21542705c200de56c61f
  getHomeR15 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR31
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR16
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
f74a61103bb181273bf3931b1db68ecd
  getHomeR16 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR27
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR17
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
1ca9b0d7eb2c1f1dbd0f2037cacbec6f
  getHomeR17 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR25
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR18
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Balada>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
2ea8c4a229e716d539a940d403e1088d
  getHomeR18 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getHomeR19 #)) -}
eae7ecc2f3396148f4b7a9f2214911c7
  getHomeR19 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getHomeR20
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
e908b8da9447b836b3a09399fd45152a
  getHomeR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR69
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR3
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   (case eta of wild1 { Yesod.Core.Types.HandlerData ds1 ds2 dt ds3 dt1 ->
                    (Yesod.Core.Types.HandlerData
                       @ Foundation.Balada
                       @ ()
                       ds1
                       ds2
                       dt
                       (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                          @ Foundation.Balada)
                       dt1)
                      `cast`
                    (Yesod.Core.Types.HandlerData
                       <Foundation.Balada>_N
                       (Sub (Sym (Yesod.Core.Types.TFCo:R:MonadRouteIO[0]))))_R })) -}
621eab47f3f113a39dbf64b73f9f5e66
  getHomeR20 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getHomeR21
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
8991505d9e1a6df55db819a754bb6c90
  getHomeR21 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getHomeR_x) -}
1da1d7893b8993f42f367810bea93ebe
  getHomeR22 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHomeR23) -}
d52fb9901cbc90c474ddfabe4a85d60d
  getHomeR23 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR24) -}
8d29ab3bbb87f8773070b55f2f9a741c
  getHomeR24 :: Data.Text.Internal.Text
823b5def66ad0b14d1b604ae4ddc3e8d
  getHomeR25 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR26
                   w4) -}
90326df31ff13bc0844627999fc8f64a
  getHomeR26 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.AboutR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
3d79584e42a7def9ed3c2a721046fd15
  getHomeR27 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x1)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
c9bde0e97c1eca13bb044307025737d2
  getHomeR28 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getHomeR29) -}
b08ae6090a760196ed8acae1e3ccb341
  getHomeR29 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR30) -}
50b8fdf178bc77a85bca22d7a04515eb
  getHomeR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR67
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR4
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
d7ba377d75a40f10fe88f7a33282ceb5
  getHomeR30 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "><span>Cadastro de pre\\195\\167os</li>\n\
                   \<li><a href="#) -}
dc872d72bfa6aa9e8009cdaa89de6a2e
  getHomeR31 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR32
                   w4) -}
e26afe1c2fb8a8fc3e92b6f1b4d91b4a
  getHomeR32 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadfaixaprecoR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
7068a35e7481828383a94f4de29e8148
  getHomeR33 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x2)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
c423e637cb7e64ef2ed69ad8c89e62ca
  getHomeR34 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getHomeR35) -}
c7ac90fe8204de5bd1f040253119c03c
  getHomeR35 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR36) -}
dc093e0859c1e8abb484b7d8c9eb9c3b
  getHomeR36 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "><span>Cadastro dia</li>\n\
                   \<li><a href="#) -}
555edfdcff62a37c5f16709ecf850adb
  getHomeR37 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR38
                   w4) -}
ef28e2653f3ffcc2b3a1c7f103eb9015
  getHomeR38 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CaddiaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
33454b382f93b173920bdb4a01193388
  getHomeR39 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x3)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
f4535697a3c84caa187a440b41a18c28
  getHomeR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR63
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR5
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
9e2a57a085d54fc043e69a0c6ea431f2
  getHomeR40 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getHomeR41) -}
e6e961c7c56db84a28f78d56438d04e4
  getHomeR41 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR42) -}
1fccde34152ad2b7bac079b8722d8183
  getHomeR42 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "><span>Cadastro SubCategoria</li>\n\
                   \<li><a href="#) -}
1cdaf5185d9eddcacb5730f832277bbb
  getHomeR43 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR44
                   w4) -}
5870e71a88b70ce82f983c363b0b6286
  getHomeR44 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadsubcategR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
ce108f19a48cdc1c4d49276930ce71ee
  getHomeR45 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x4)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
1b04cbd799701d9208caa6e9f39cf1cf
  getHomeR46 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getHomeR47) -}
6004b2913b5fee205eddc1e000eacdfc
  getHomeR47 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR48) -}
cd90dea0494f9b92095bfca85ef4d32c
  getHomeR48 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "><span>Cadastro categoria</li>\n\
                   \<li><a href="#) -}
432d665168db0209f5c03ed850a4d747
  getHomeR49 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR50
                   w4) -}
5b51f40d3ae8440cf3015378c61128cc
  getHomeR5 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR61
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR6
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
76af956936b613be860f92dff7a9be04
  getHomeR50 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadcategoriaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
72b21eaaa54e288bdfbee5d0b71471ad
  getHomeR51 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x5)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
dc85950df1bfd5716d069d236bb1586d
  getHomeR52 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getHomeR53) -}
594c155a2f8823f07bb430fea0176177
  getHomeR53 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR54) -}
14e1349be02f086fad5b3d6d15be1b58
  getHomeR54 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "><span>Cadastro estabelecimento</li>\n\
                   \<li><a href="#) -}
013d69afcb92919bc959a90ecf4ebcbf
  getHomeR55 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR56
                   w4) -}
68c341da2e75c7edce5ceb131f70c553
  getHomeR56 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadestabR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
d0d4f39033b5eeb9e7343abea42a112c
  getHomeR57 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x6)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
08327e438e18bfdddddd55cc7ad8f1c0
  getHomeR58 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getHomeR59) -}
0a33f315659839062c6a85f479bd33f3
  getHomeR59 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR60) -}
7175213ee63850d36e2cdbaa091fb0ee
  getHomeR6 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR57
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR7
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
0f49a3c8360ca8da3d6f839ec1bf7b47
  getHomeR60 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "><span>CADASTRE-SE</li>\n\
                   \<li><a href="#) -}
29971425cba1da13635ae53ac880b713
  getHomeR61 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR62
                   w4) -}
410f0f6b26dfc06494c27636868a7b1a
  getHomeR62 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadpessoaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
07fba7f5327632fae3ea972525c529d0
  getHomeR63 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x7)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
f72bc61b61be0370c3b57e7846b3d3ca
  getHomeR64 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getHomeR65) -}
d96ca6ad78393b5736f63c00a96e43e1
  getHomeR65 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR66) -}
c619d768cd07f09b4a6795d4beee8c77
  getHomeR66 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "Inicio</li>\n\
                   \<li><a href="#) -}
528297cf7c24d59d0f3a8ff7af401cb3
  getHomeR67 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR68
                   w4) -}
5605de5fdac414aee0e6e63897d905b2
  getHomeR68 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.HomeR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
61e81423c9c2d7811b50b5ba768bd9d1
  getHomeR69 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x8)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
55f8d4063df66f40cb06f52052009320
  getHomeR7 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR55
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR8
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
bf6606ed687f00b22f8f36ca66e8237a
  getHomeR70 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getHomeR71) -}
619cafca69c2a34bfc95d3536d3911e1
  getHomeR71 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR72) -}
4e09baaf4068432b4e90960750c972a2
  getHomeR72 :: Data.Text.Internal.Text
ea8a60c6c3fb28b72c4be49157057fdb
  getHomeR73 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Balada GHC.Types.IO))>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Balada GHC.Types.IO)))>_R))
                       (GHC.Types.:
                          @ (Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                          (Yesod.Core.Types.Stylesheet
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))
                             (Yesod.Core.Types.Local
                                @ (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))
                                (Foundation.StaticR
                                   Foundation.style_css1
                                     `cast`
                                   (Sub (Sym (Yesod.Static.TFCo:R:RouteStatic[0]))))
                                  `cast`
                                (Trans
                                     (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                                     (Yesod.Routes.Class.Route
                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R))
                             (GHC.Types.[]
                                @ (Data.Text.Internal.Text, Data.Text.Internal.Text))))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Balada GHC.Types.IO)))>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Balada GHC.Types.IO))>_R))) #)) -}
c89c7632c87a3ee337478f3f769cf78e
  getHomeR8 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR51
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR9
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
f9626a3102c41e9f784967e7ddbd7c59
  getHomeR9 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR49
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR10
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
59baddb2d974e711b1021230d1303cd0
  getHomeR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR22) -}
4dcafe91e025b9d47d65dee7dec56c5e
  getHomeR_x1 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR28) -}
1d4e8c1f5c5d4afdfe983174a74834e6
  getHomeR_x2 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR34) -}
8d5187dade64316fff899b1ae1a7affb
  getHomeR_x3 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR40) -}
00306dd3e95859faf2e4bb9ccbed9b45
  getHomeR_x4 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR46) -}
60ccf4c0cb626d80eeaa46e6430d605f
  getHomeR_x5 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR52) -}
8521912df42104d040faec05c3303939
  getHomeR_x6 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR58) -}
1596517657d0b32de0003ee6dc5a41ef
  getHomeR_x7 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR64) -}
52f1f805bbfaa370693eac7cbc16be96
  getHomeR_x8 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR70) -}
b3812bd3bb36b00ff9869defa3d554aa
  getListaestabsR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getListaestabsR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
3801d1a68ddc487c272fe076c353824b
  getListaestabsR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U> -}
70165608914e9560eeabd90e0faae3e7
  getLoginR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getLoginR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
819994b7153bec0c26da907d77cf96cc
  getLoginR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getLoginR31
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodBalada_$cdefaultLayout
                     (let {
                        x13 :: Text.Blaze.Html.Html
                        = case enctype of wild1 {
                            Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                            Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                      } in
                      let {
                        a88 :: Yesod.Core.Types.RY Foundation.Balada
                               -> Text.Blaze.Html.Html
                          {- Arity: 1 -}
                        = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                      } in
                      let {
                        a89 :: Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route Foundation.Balada)
                        = Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Balada)
                            a88
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Balada))
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                      } in
                      let {
                        lvl173 :: ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.Balada GHC.Types.IO))))
                        = (GHC.Tuple.(),
                           a89
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                      } in
                      let {
                        a90 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Balada GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A><L,U>,
                             Unfolding: InlineRule (2, True, False)
                                        (\ eta :: Yesod.Core.Types.HandlerData
                                                    Foundation.Balada
                                                    (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                           eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                         (# eta2,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Balada)
                                                (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                                                 x13)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Balada))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N)))_R)_R) #)) -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          (# eta2, lvl173 #)
                      } in
                      let {
                        a91 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ eta2 :: Yesod.Core.Types.HandlerData
                                                     Foundation.Balada
                                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.NTCo:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N <GHC.Types.IO>_N)
                                                  (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((<()>_R,
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Balada>_N
                                                                    <GHC.Types.IO>_N))_R)_R))_R)_R))
                                           (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Balada
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Balada)
                                              dt1 })) -}
                        = \ eta2 :: Yesod.Core.Types.HandlerData
                                      Foundation.Balada
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.NTCo:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N)
                                   (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((<()>_R,
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.Balada>_N
                                                     <GHC.Types.IO>_N))_R)_R))_R)_R))
                            (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Balada
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Balada)
                               dt1 })
                      } in
                      let {
                        lvl174 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a91
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getLoginR16
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl175 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getLoginR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl174
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl176 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getLoginR10
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            lvl175
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl177 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getLoginR6
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl176
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl178 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a90
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl177
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Balada
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getLoginR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0]
                                             ((<()>_R,
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                               <Foundation.Balada>_N
                                                               <GHC.Types.IO>_N)))_R)_R))_R))
                              (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                         lvl178
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
db70752b1f771bdd9a53847238174ae0
  getLoginR10 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getLoginR11
                   w4) -}
86ef0274c201654b5ddf73dbd6728915
  getLoginR11 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.LoginR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
a0ade0f3909810b62a6225cc12a565c3
  getLoginR12 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getLoginR_x2)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
b46ae1434e2cb827e8fb322c6076ef3b
  getLoginR13 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getLoginR14) -}
dbe3066a5dd82535cf3b503b0732acbc
  getLoginR14 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getLoginR15) -}
20ea2df7e90752f156810177b66cbc76
  getLoginR15 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "\">"#) -}
f1609ec3325fbe431b5e068e4fa9a3c8
  getLoginR16 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getLoginR27
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getLoginR17
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
5f0f3066b0fc695ad57839fb1fa76e61
  getLoginR17 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getLoginR25
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getLoginR18
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Balada>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
2a0df3c722c6c1357f2e16c164a968ff
  getLoginR18 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getLoginR19 #)) -}
c11ad2fff3986e95da459435e3c64439
  getLoginR19 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getLoginR20
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
2d0a43cc496cbcce507d3f4c0925d065
  getLoginR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getLoginR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
7c6fe2bea9e87add41dfc26950cf76a6
  getLoginR20 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getLoginR21
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
44bd12d556018b7d8aedb7499b58f972
  getLoginR21 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getLoginR_x3) -}
f9da9c6d864cf5aeca52b851fa25a1af
  getLoginR22 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getLoginR23) -}
79ccd14f7a842814d28512894e4051de
  getLoginR23 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getLoginR24) -}
bfeb01d456e7f9a6cf6af13c11a8b28b
  getLoginR24 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\">Pagina Inicial</a>\n\
                   \</form>\n"#) -}
4d9554dbffb9f5bf9e2b231f0cefe002
  getLoginR25 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getLoginR26
                   w4) -}
7220bf5d57a4ff2053cf45926bb904f7
  getLoginR26 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a88 :: Data.Text.Internal.Text
                   = urender
                       Foundation.HomeR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a89 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a88
                 } in
                 let {
                   x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a89
                 } in
                 let {
                   a90 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x13
                 } in
                 let {
                   a91 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a90
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl173 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a91
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl173 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
6347b6ebcf633bddc0a3ed1aaf726fdd
  getLoginR27 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getLoginR_x4)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
f59caff2dbfb64155d2d00ee69179890
  getLoginR28 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getLoginR29) -}
2d11363c8777d7bd4f07d8dc53375f9b
  getLoginR29 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getLoginR30) -}
c05d1747559d3b9b99ad47ccb84ada9b
  getLoginR3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getLoginR4) -}
cfb77ece03531fb68be8c7d399b56a70
  getLoginR30 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Login\">\n\
                   \<a href=\""#) -}
1b75fcee51766ee55f0d0ee70e3a1551
  getLoginR31 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formLogin1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult
                                       (Data.Text.Internal.Text, Data.Text.Internal.Text)>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
fa4236829d1d4a9e8c7c5adb20f15662
  getLoginR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getLoginR5) -}
03ef479e73b80250c3ee98e34f3ec708
  getLoginR5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<form method=\"post\" enctype=\""#) -}
980ca2090060f0bcfc9b62f28aa4d57f
  getLoginR6 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getLoginR_x1)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
38c7aa189fa96af8e1ab7fab7f6cb3e7
  getLoginR7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getLoginR8) -}
20cb5226ccfa4fe56a373e13da0c3007
  getLoginR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getLoginR9) -}
3a1ec683839abe87d8c5bcfb49525be7
  getLoginR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "\" action=\""#) -}
c95ebd369f06784e385b3e11d6f0eb3b
  getLoginR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getLoginR3) -}
6387c23e930e659578a54bc6956cca62
  getLoginR_x1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getLoginR7) -}
996973e97288c8c44e7823f8d3476aed
  getLoginR_x2 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getLoginR13) -}
46bb286b102d22556d1e821e3a1d46d0
  getLoginR_x3 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getLoginR22) -}
1778cedb942d88bece181229abf3ac67
  getLoginR_x4 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getLoginR28) -}
2a3c058fae6cc187137ee8af41c50851
  getLogoutR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <S(SSLSL),1*U(U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getLogoutR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
5fd22b2ae08c22e3a35fbfb9830274fd
  getLogoutR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <S(SSLSL),1*U(U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case eta
                        `cast`
                      (Yesod.Core.Types.HandlerData
                         (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                   <Foundation.Balada>_N <GHC.Types.IO>_N))
                         (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R of wild { Yesod.Core.Types.HandlerData ds1 ds2 dt ds3 dt1 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Yesod.Core.Types.GHState
                        dt
                        eta2 of ds4 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Yesod.Core.Types.GHState
                        dt
                        (Yesod.Core.Handler.deleteSession1 Handlers.getLogoutR9 ipv1)
                        ipv of s2# { DEFAULT ->
                 (Handlers.getLogoutR_k
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    wild
                      `cast`
                    (Yesod.Core.Types.HandlerData
                       (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N)
                       (Sub (Sym (Yesod.Core.Types.TFCo:R:MonadRouteIO[0]))))_R)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   s2# } } }) -}
a2fa321ae2b500992fb1372bb303804d
  getLogoutR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2,
     Unfolding: (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta, Handlers.getLogoutR3 #)) -}
03b9566f1406dccd1a618f7c2a108721
  getLogoutR3 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getLogoutR4
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
1d34647c99bf3ba5177e503fa172efa9
  getLogoutR4 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getLogoutR5
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
251c17225d7dd0b191a6ed3619716aee
  getLogoutR5 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getLogoutR_x) -}
0bffc3caa125dd47338bcb4ffd312ac6
  getLogoutR6 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getLogoutR7) -}
176ff5180bc454fd331bbad4984d34fc
  getLogoutR7 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getLogoutR8) -}
34cd35d5dd7b2e89b8ed1d296ea4efbd
  getLogoutR8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> ADEUS!</h1>\n"#) -}
007dd52356077d1060d4ce351b283aba
  getLogoutR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "_ID"#) -}
aaa552083b5398d941c088963ee0b611
  getLogoutR_k ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getLogoutR2
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
40f60cbcae13f7197385f8c2e271b93f
  getLogoutR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getLogoutR6) -}
0c95d8415bce3bf5f705506da2d3a480
  getPerfilR ::
    Foundation.PessoasId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U> -}
6079a5b06d8a22c8fcb6b8d941e39dac
  listaClassificacao ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Classificacao_estab))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Classificacao_estab]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Classificacao_estab]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.listaClassificacao2 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Classificacao_estab]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Classificacao_estab]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Classificacao_estab]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Classificacao_estab)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs9 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Classificacao_estab)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key
                              Foundation.Classificacao_estab)
                         Handlers.listaClassificacao1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Classificacao_estab)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Classificacao_estab)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Classificacao_estab)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Classificacao_estab)>_N)))) -}
e52aa2dd64292b987bdf38f1a34b019a
  listaClassificacao1 ::
    Database.Persist.Class.PersistEntity.Entity
      Foundation.Classificacao_estab
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key
          Foundation.Classificacao_estab)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Classificacao_estab ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Classificacao_estab ds4 ds5 ->
                  ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Classificacao_estab
                    ent)) -}
677702f1779717cc263e9f39fc9525c9
  listaClassificacao2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Classificacao_estab]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Classificacao_estab)))
                   = (Handlers.listaClassificacao_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Classificacao_estab))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Classificacao_estab))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Classificacao_estab))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Classificacao_estab))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Classificacao_estab]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Classificacao_estab)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Classificacao_estab)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Classificacao_estab]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Classificacao_estab]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Classificacao_estab]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Classificacao_estab]>_N)))) -}
c17811eb98576b5a0d01307773a2f940
  listaClassificacao3 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Classificacao_estab]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Classificacao_estab)
                   Handlers.listaClassificacao4
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Classificacao_estab))) -}
fb9989a5d9737646f1465791bd56baab
  listaClassificacao4 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Classificacao_estab
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Classificacao_estab
                   @ Data.Text.Internal.Text
                   Handlers.listaClassificacao5
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldClassificacao_estabtyp[0])) <Data.Text.Internal.Text>_N)) -}
9fb100e2ade34605e368b9773ed66db5
  listaClassificacao5 ::
    Foundation.R:EntityFieldClassificacao_estabtyp
      Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Classificacao_estabNome_classificacao
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
b069858245e3e0aca613f48407daf358
  listaClassificacao6 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Classificacao_estab]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Classificacao_estab]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Classificacao_estab)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Classificacao_estab
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityClassificacao_estab
                   (Handlers.categs15 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
49c4805004dfc302393bb70601991639
  listaClassificacao_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Classificacao_estab)))
  {- Unfolding: (\ @ site ->
                 Handlers.listaClassificacao6
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Classificacao_estab))
                   Handlers.listaClassificacao3) -}
002e0d13f07d6467ffa862a4547fc44d
  listaDia ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity Foundation.Dia_evento]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Dia_evento]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.listaDia2 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Dia_evento]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Dia_evento]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Dia_evento]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs9 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Dia_evento)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
                         Handlers.listaDia1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Dia_evento)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Dia_evento)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Dia_evento)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Dia_evento)>_N)))) -}
787a1e7c2d7ae7c68b850e59067a9bfe
  listaDia1 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Dia_evento
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Dia_evento ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Dia_evento ds4 -> ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Dia_evento
                    ent)) -}
63321124e008e233272abb83136c9caa
  listaDia2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Dia_evento]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Dia_evento)))
                   = (Handlers.listaDia_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Dia_evento))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Dia_evento))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Dia_evento))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Dia_evento))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Dia_evento]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Dia_evento)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Dia_evento)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Dia_evento]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Dia_evento]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Dia_evento]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Dia_evento]>_N)))) -}
22d7e51952d65b5ce18eeae70669a291
  listaDia3 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Dia_evento]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Dia_evento)
                   Handlers.listaDia4
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Dia_evento))) -}
3f8397414035a2bc9cb0c5b96fc42b47
  listaDia4 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Dia_evento
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Dia_evento
                   @ Data.Text.Internal.Text
                   Handlers.listaDia5
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldDia_eventotyp[0])) <Data.Text.Internal.Text>_N)) -}
989850087781b0d2940e6eebdfe53762
  listaDia5 ::
    Foundation.R:EntityFieldDia_eventotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Dia_eventoDc_dia
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
22b0d86c011f7ae76492e09ba27d64d1
  listaDia6 ::
    [Database.Persist.Class.PersistEntity.Filter Foundation.Dia_evento]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Dia_evento]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Dia_evento)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Dia_evento
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityDia_evento
                   (Handlers.categs15 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
fc6b82f23f9d858f67bc44d1561cb614
  listaDia_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Dia_evento)))
  {- Unfolding: (\ @ site ->
                 Handlers.listaDia6
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Dia_evento))
                   Handlers.listaDia3) -}
0d8908a10dc0e3125351dae1593d7dea
  listaFaixapreco ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Faixa_preco]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Faixa_preco]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.formEstabelecimento12 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Faixa_preco]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Faixa_preco]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Faixa_preco]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs9 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Faixa_preco)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                         Handlers.formEstabelecimento10
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Faixa_preco)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Faixa_preco)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Faixa_preco)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Faixa_preco)>_N)))) -}
d2c009ccf7dde7a669fd37491faf4988
  listaSubcategoria ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Sub_categ_estab))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Sub_categ_estab]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Sub_categ_estab]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.listaSubcategoria2 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Sub_categ_estab]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Sub_categ_estab]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Sub_categ_estab]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Sub_categ_estab)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs9 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Sub_categ_estab)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key
                              Foundation.Sub_categ_estab)
                         Handlers.listaSubcategoria1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Sub_categ_estab)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Sub_categ_estab)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Sub_categ_estab)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Sub_categ_estab)>_N)))) -}
6d4d82bc0036fe77a25c647188588445
  listaSubcategoria1 ::
    Database.Persist.Class.PersistEntity.Entity
      Foundation.Sub_categ_estab
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key
          Foundation.Sub_categ_estab)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Sub_categ_estab ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Sub_categ_estab ds4 ds5 -> ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Sub_categ_estab
                    ent)) -}
db4674c8e68e18987892b49f91622da3
  listaSubcategoria2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Sub_categ_estab]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Sub_categ_estab)))
                   = (Handlers.listaSubcategoria_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Sub_categ_estab))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Sub_categ_estab))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Sub_categ_estab))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Sub_categ_estab))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Sub_categ_estab]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Sub_categ_estab)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Sub_categ_estab)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Sub_categ_estab]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Sub_categ_estab]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Sub_categ_estab]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Sub_categ_estab]>_N)))) -}
e7275e72efc0a1db97d16aa96de0db63
  listaSubcategoria3 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Sub_categ_estab]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Sub_categ_estab)
                   Handlers.listaSubcategoria4
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Sub_categ_estab))) -}
12d8e194f4058cffdaf5fdb74c6ba278
  listaSubcategoria4 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Sub_categ_estab
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Sub_categ_estab
                   @ Data.Text.Internal.Text
                   Handlers.listaSubcategoria5
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldSub_categ_estabtyp[0])) <Data.Text.Internal.Text>_N)) -}
ab90ed06d1930455707ae20bf904dcbc
  listaSubcategoria5 ::
    Foundation.R:EntityFieldSub_categ_estabtyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Sub_categ_estabNome_sub_categ
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
d0c1f3b8c3f19ef6ac0ce0feb170e3c4
  listaSubcategoria6 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Sub_categ_estab]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Sub_categ_estab]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Sub_categ_estab)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Sub_categ_estab
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntitySub_categ_estab
                   (Handlers.categs15 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
6b0bcfb62bb2702d2fad229a08a5b1b9
  listaSubcategoria_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Sub_categ_estab)))
  {- Unfolding: (\ @ site ->
                 Handlers.listaSubcategoria6
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Sub_categ_estab))
                   Handlers.listaSubcategoria3) -}
ac3e454c24a3085fbbee0f181bd6e915
  postCadcategoriaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadcategoriaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
dd3b32e4a3238b8ebb1de50bbbd35af3
  postCadcategoriaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadcategoriaR5
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Categoria_estab,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Categoria_estab,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess categoria
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Categoria_estab)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key
                                     Foundation.Categoria_estab)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadcategoriaR3 categoria))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCadcategoriaR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
a3f0b2fe2a1f378e3f81cf2b498e3a3f
  postCadcategoriaR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadcategoriaR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
8a25496c18f682f67f41a40334c99af4
  postCadcategoriaR3 ::
    Foundation.Categoria_estab
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Categoria_estab)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Categoria_estab
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityCategoria_estab) -}
97c1713ba029febe438d564359f34dc8
  postCadcategoriaR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.ErroR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
32f83e9043d0e4225018ba719f08d11c
  postCadcategoriaR5 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Categoria_estab,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Categoria_estab
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Categoria_estab>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
b804883266c2706253782629bd6d4417
  postCaddiaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCaddiaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
010a9d9d008332241b91e78198064ef4
  postCaddiaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCaddiaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Dia_evento,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Dia_evento,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess dia
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCaddiaR3 dia))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCaddiaR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
b0dfe129f85c6aba9982a33809053c3d
  postCaddiaR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadfaixaprecoR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
16a15536c036b052bc7737c25b4ba328
  postCaddiaR3 ::
    Foundation.Dia_evento
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Dia_evento
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityDia_evento) -}
bd468ee390e49112cede2210fdddf94f
  postCaddiaR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Dia_evento,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Dia_evento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formDia1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Dia_evento>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
2a257f973381ea3e23384a7c4715d20a
  postCadestabR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadestabR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
2efcc4c0aa6b8ab5ef67ea6ecab3c723
  postCadestabR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadestabR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Estabelecimento,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Estabelecimento,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess estab
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Estabelecimento)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key
                                     Foundation.Estabelecimento)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadestabR3 estab))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCadestabR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
6b15a469e89af8bea29f4ae6cc871206
  postCadestabR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadestabR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
f713fe3132547174305ec6baf35fc0bb
  postCadestabR3 ::
    Foundation.Estabelecimento
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Estabelecimento)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Estabelecimento
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityEstabelecimento) -}
ea1dbb0ce99bba563671a31271743424
  postCadestabR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Estabelecimento,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Estabelecimento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formEstabelecimento1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Estabelecimento>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
a7b3a052bc6b2f40b34654328ad568b8
  postCadfaixaprecoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadfaixaprecoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
8dc953479fb7438b46adde395de6862c
  postCadfaixaprecoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadfaixaprecoR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Faixa_preco,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Faixa_preco,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess faixapreco
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadfaixaprecoR2 faixapreco))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCaddiaR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
bd9dcd5f524e6e5607c96c829a63ec7d
  postCadfaixaprecoR2 ::
    Foundation.Faixa_preco
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Faixa_preco
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityFaixa_preco) -}
87c976a6a204585a41aad48c140e7abd
  postCadfaixaprecoR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Faixa_preco,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Faixa_preco
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formFaixapreco1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Faixa_preco>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
f90441c979447db988e235fae93e52ea
  postCadpessoaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadpessoaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
b2ed7a2364cb8c2fb23fdce08e5745ed
  postCadpessoaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadpessoaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Pessoas,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Pessoas,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess pessoa
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Pessoas)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key Foundation.Pessoas)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadpessoaR3 pessoa))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCadpessoaR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
ded59db917587f5844aa5d6de1fcd4c4
  postCadpessoaR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadpessoaR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
1d5e236e1afcc6cd7eb28a2b69c2e474
  postCadpessoaR3 ::
    Foundation.Pessoas
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Pessoas)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Pessoas
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityPessoas) -}
2d515c9afe7ae4bfb9ffd531b3fe9fe0
  postCadpessoaR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Pessoas,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Pessoas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formPessoa1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Pessoas>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
91a0fbc7d4dc5c30f6c4ac4c29e0880f
  postCadsubcategR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadsubcategR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
62ef5470f4682bf8e444ffec91d9c7e6
  postCadsubcategR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadsubcategR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess subcategoria
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Sub_categ_estab)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key
                                     Foundation.Sub_categ_estab)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadsubcategR3 subcategoria))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCadsubcategR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
e19def35bdb94eac39efd109ecb3775d
  postCadsubcategR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadsubcategR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
4fa63af0b53975df034e058fb2220705
  postCadsubcategR3 ::
    Foundation.Sub_categ_estab
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Sub_categ_estab)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Sub_categ_estab
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntitySub_categ_estab) -}
b0a33fab666b5a9d75ca01df9423b88d
  postCadsubcategR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Sub_categ_estab
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formSubcategoria1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Sub_categ_estab>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
8d4ee1b11b90d23399b60f6ab8ba32a2
  postLoginR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postLoginR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
c2f07b94b03a23b6b43e50ecef2e0f2c
  postLoginR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U)><L,U> -}
instance Yesod.Core.Class.Dispatch.YesodDispatch [Foundation.Balada]
  = Handlers.$fYesodDispatchBalada
"SPEC/Handlers $fApplicativeWidgetT @ Balada @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                  (Yesod.Core.Types.WidgetT
                                                                                     Foundation.Balada
                                                                                     GHC.Types.IO)
                                                                   $dMonad :: GHC.Base.Monad
                                                                                GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT @ Foundation.Balada
                                        @ GHC.Types.IO
                                        $dFunctor
                                        $dMonad
  = Handlers.$s$fApplicativeWidgetT
"SPEC/Handlers $fApplicativeWidgetT_$c*> @ Balada @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                       (Yesod.Core.Types.WidgetT
                                                                                          Foundation.Balada
                                                                                          GHC.Types.IO)
                                                                        $dMonad :: GHC.Base.Monad
                                                                                     GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c*> @ Foundation.Balada
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
"SPEC/Handlers $fApplicativeWidgetT_$c<* @ Balada @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                       (Yesod.Core.Types.WidgetT
                                                                                          Foundation.Balada
                                                                                          GHC.Types.IO)
                                                                        $dMonad :: GHC.Base.Monad
                                                                                     GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c<* @ Foundation.Balada
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<*
"SPEC/Handlers $fApplicativeWidgetT_$cpure @ Balada @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                         (Yesod.Core.Types.WidgetT
                                                                                            Foundation.Balada
                                                                                            GHC.Types.IO)
                                                                          $dMonad :: GHC.Base.Monad
                                                                                       GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$cpure @ Foundation.Balada
                                               @ GHC.Types.IO
                                               $dFunctor
                                               $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$cpure
"SPEC/Handlers $fMonadBasebWidgetT @ IO @ Balada @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                          GHC.Types.IO
                                                                       $dApplicative1 :: GHC.Base.Applicative
                                                                                           (Yesod.Core.Types.WidgetT
                                                                                              Foundation.Balada
                                                                                              GHC.Types.IO)
                                                                       $dMonad :: GHC.Base.Monad
                                                                                    GHC.Types.IO
                                                                       $dMonad1 :: GHC.Base.Monad
                                                                                     (Yesod.Core.Types.WidgetT
                                                                                        Foundation.Balada
                                                                                        GHC.Types.IO)
                                                                       $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                        GHC.Types.IO
                                                                                        GHC.Types.IO
  Yesod.Core.Types.$fMonadBasebWidgetT @ GHC.Types.IO
                                       @ Foundation.Balada
                                       @ GHC.Types.IO
                                       $dApplicative
                                       $dApplicative1
                                       $dMonad
                                       $dMonad1
                                       $dMonadBase
  = Handlers.$s$fMonadBasebWidgetT
"SPEC/Handlers $fMonadHandlerWidgetT @ Balada @ IO" [ALWAYS] forall $dMonadResource :: Control.Monad.Trans.Resource.Internal.MonadResource
                                                                                         (Yesod.Core.Types.WidgetT
                                                                                            Foundation.Balada
                                                                                            GHC.Types.IO)
                                                                    tup :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                             GHC.Types.IO
  Yesod.Core.Class.Handler.$fMonadHandlerWidgetT @ Foundation.Balada
                                                 @ GHC.Types.IO
                                                 $dMonadResource
                                                 tup
  = Handlers.$s$fMonadHandlerWidgetT
"SPEC/Handlers $fMonadIOWidgetT @ Balada @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                            (Yesod.Core.Types.WidgetT
                                                                               Foundation.Balada
                                                                               GHC.Types.IO)
                                                               $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                              GHC.Types.IO
  Yesod.Core.Types.$fMonadIOWidgetT @ Foundation.Balada
                                    @ GHC.Types.IO
                                    $dMonad
                                    $dMonadIO
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT
"SPEC/Handlers $fMonadResourceWidgetT @ Balada @ IO" [ALWAYS] forall $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                       (Yesod.Core.Types.WidgetT
                                                                                          Foundation.Balada
                                                                                          GHC.Types.IO)
                                                                     $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                    (Yesod.Core.Types.WidgetT
                                                                                       Foundation.Balada
                                                                                       GHC.Types.IO)
                                                                     $dApplicative :: GHC.Base.Applicative
                                                                                        (Yesod.Core.Types.WidgetT
                                                                                           Foundation.Balada
                                                                                           GHC.Types.IO)
                                                                     $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                      GHC.Types.IO
                                                                                      (Yesod.Core.Types.WidgetT
                                                                                         Foundation.Balada
                                                                                         GHC.Types.IO)
                                                                     $dApplicative1 :: GHC.Base.Applicative
                                                                                         GHC.Types.IO
                                                                     $dMonadIO1 :: Control.Monad.IO.Class.MonadIO
                                                                                     GHC.Types.IO
                                                                     $dMonadBase1 :: Control.Monad.Base.MonadBase
                                                                                       GHC.Types.IO
                                                                                       GHC.Types.IO
                                                                     $dMonadThrow1 :: Control.Monad.Catch.MonadThrow
                                                                                        GHC.Types.IO
  Yesod.Core.Types.$fMonadResourceWidgetT @ Foundation.Balada
                                          @ GHC.Types.IO
                                          $dMonadThrow
                                          $dMonadIO
                                          $dApplicative
                                          $dMonadBase
                                          $dApplicative1
                                          $dMonadIO1
                                          $dMonadBase1
                                          $dMonadThrow1
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT
"SPEC/Handlers $fMonadThrowWidgetT @ Balada @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                               (Yesod.Core.Types.WidgetT
                                                                                  Foundation.Balada
                                                                                  GHC.Types.IO)
                                                                  $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                    GHC.Types.IO
  Yesod.Core.Types.$fMonadThrowWidgetT @ Foundation.Balada
                                       @ GHC.Types.IO
                                       $dMonad
                                       $dMonadThrow
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT
"SPEC/Handlers $fMonadWidgetT @ Balada @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                (Yesod.Core.Types.WidgetT
                                                                                   Foundation.Balada
                                                                                   GHC.Types.IO)
                                                             $dMonad :: GHC.Base.Monad GHC.Types.IO
  Yesod.Core.Types.$fMonadWidgetT @ Foundation.Balada
                                  @ GHC.Types.IO
                                  $dApplicative
                                  $dMonad
  = Handlers.$s$fMonadBasebWidgetT_$s$fMonadWidgetT
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

