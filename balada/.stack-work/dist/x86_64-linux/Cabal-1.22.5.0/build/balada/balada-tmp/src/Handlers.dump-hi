
==================== FINAL INTERFACE ====================
2016-06-16 22:22:30.916046 UTC

interface main@main:Handlers [orphan module] 7103
  interface hash: 1f31b63aaf2cddb9c2067a1d9db97b89
  ABI hash: 9008592077bbd05e6d2842f19a6aac0e
  export-list hash: c6f83aa8f6037140a4cf6bf2ff9f0369
  orphan hash: bcc5953d9b822605e6199a2734c4d3a7
  flag hash: eff5e623cf316ffe3f39252fffb87620
  sig of: Nothing
  used TH splices: True
  where
exports:
  Handlers.categs
  Handlers.estabs
  Handlers.formCategoria
  Handlers.formDia
  Handlers.formEstabelecimento
  Handlers.formFaixapreco
  Handlers.formLogin
  Handlers.formPessoa
  Handlers.formSubcategoria
  Handlers.getAboutR
  Handlers.getAdminR
  Handlers.getCadcategoriaR
  Handlers.getCaddiaR
  Handlers.getCadestabR
  Handlers.getCadfaixaprecoR
  Handlers.getCadpessoaR
  Handlers.getCadsubcategR
  Handlers.getErroR
  Handlers.getHomeR
  Handlers.getListaestabsR
  Handlers.getLoginR
  Handlers.getLogoutR
  Handlers.getPerfilR
  Handlers.listaClassificacao
  Handlers.listaDia
  Handlers.listaFaixapreco
  Handlers.listaSubcategoria
  Handlers.postCadcategoriaR
  Handlers.postCaddiaR
  Handlers.postCadestabR
  Handlers.postCadfaixaprecoR
  Handlers.postCadpessoaR
  Handlers.postCadsubcategR
  Handlers.postLoginR
module dependencies: Foundation Rotas
package dependencies: aeson-compat-0.3.2.0@aeson_9wJdCBL4bH5K4w9XiaFHb3
                      aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG
                      auto-update-0.1.3@autou_19qtEoqMgV6FQlA1CkY9Cg base-4.8.2.0
                      base64-bytestring-1.0.0.1@base6_AkCk8zInckjJsyQ4AIFHPN
                      base-compat-0.9.1@basec_3Zy8UsyHmBEEwbReR8x1KT
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-builder-0.4.0.1@blaze_4KI2nf4lf9oHEgXiILyTYj
                      blaze-markup-0.7.0.3@blaze_C7imNkL0ufD2cjmU64FP9k
                      blaze-html-0.8.1.1@blaze_Iq6GES6DAMS0745KzFL7i6
                      byteable-0.1.1@bytea_38yjJsjDRm9KusCn8Yo4aB
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.6@casei_05l5iiwk2FiGu4DeOqOIxC
                      cereal-0.5.1.0@cerea_843xOxvPj94HAJ9SD4EJuq
                      cipher-aes-0.2.11@ciphe_8XNwNKI71EdCLNQ4WGdMQq
                      clientsession-0.9.1.1@clien_LuobzRZeZj55iOint27HgG
                      conduit-1.2.6.4@condu_1EneW8yRsjj18l2EfcgLyu
                      conduit-extra-1.1.13.1@condu_JrYHSonW303HUe4R7rhE0T
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      cookie-0.4.1.6@cooki_2Eb4iZo39x3Ihl7jVKbtZO
                      cprng-aes-0.6.1@cprng_FqpwhJtWO8g27pB5PJZtIq
                      cryptohash-0.11.6@crypt_3Cwvwq9ssRY1dmVI1qI6C2
                      crypto-random-0.0.9@crypt_7BiCOK9v78J36YeClUc9KE
                      cryptonite-0.10@crypt_9z0j8QI27Av2VIWw0mEkTO
                      crypto-cipher-types-0.0.9@crypt_AkbdiYWeXYI5D4jAOMIXve
                      cryptohash-conduit-0.1.1@crypt_BAJu9mKzLnyBUqveoUT0Xl
                      crypto-api-0.13.2@crypt_Kp4uvZbywBzKttuHrlYBAx
                      css-text-0.1.2.1@csste_BKK1KtEb1sJ9s7LwxLpwLq
                      data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe
                      data-default-0.5.3@datad_DLQPsKM7BNMFfKH45X8LEe
                      data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk
                      data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      easy-file-0.2.1@easyf_IjQ6MMskJyDEpOwcfCdF0G
                      email-validate-2.2.0@email_CQXkJx3ILx16knsHT8WvIg
                      entropy-0.3.7@entro_7gYJ61Ci0NNBp8LB4CGmrG
                      exceptions-0.8.2.1@excep_6lgwjdgwblY7rzh5s6SLd8
                      fast-logger-2.4.3@fastl_5D9PYpdXmW6J1zw1AtN1OL
                      file-embed-0.0.9.1@filee_ID0BQq7SkFm2s7BTdE1urr
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I
                      http2-1.4.5@http2_DiIK6FZsEORCMOaqj3QSEe
                      http-api-data-0.2.2@httpa_3kiLcpdXTUe4CYRpIoinpP
                      http-date-0.0.6.1@httpd_K48ICbZdR7j4Lbow4Laii0
                      http-types-0.9@httpt_1qktWOgbYARKyaY9syDTns integer-gmp-1.0.0.0
                      iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT
                      lifted-base-0.2.3.6@lifte_DoOvgrTvmEtENHs0ypaZTR
                      memory-0.11@memor_0EiEBIg44i8KGjAeoKnPDs
                      mime-types-0.1.0.6@mimet_9JBMcwv2Xiq5zZQuEgPby5
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monad-logger-0.3.18@monad_5Adv9Hf1fONCeS01xDfKe7
                      monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ
                      network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      old-time-1.1.0.3@oldti_JVjJvknZJ0JKghfag2Jw2L
                      parsec-3.1.9@parse_7aUabKPjr5W6Al5Ge35AQl
                      path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO
                      persistent-template-2.1.6@persi_1951GfcGAw414vdjFbcV5g
                      persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL
                      persistent-postgresql-2.2.2@persi_EzrtUBM22f5BF3Kdnm31Oz
                      persistent-sqlite-2.2.1@persi_Hyw9Gl6HaKF7LSoBGe21wB
                      postgresql-libpq-0.9.1.1@postg_6f9D1As2FCe0fjZpXXvHvS
                      postgresql-simple-0.5.1.2@postg_9k9Uw6R9foNDbRYAVYjlMk
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      psqueues-0.2.2.0@psque_Eu4cvucK9D300LguHeaq9c
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ
                      resource-pool-0.2.3.2@resou_BPzNUl5kJsI1qo7V284Tgq
                      safe-0.3.9@safe_Eus5OohxO2XHvdWxKAmhFS
                      scientific-0.3.4.6@scien_5s26qRhE5w04kI4pP1Rtwm
                      securemem-0.1.9@secur_ArobkR9k7uwJiSXmFUrDYT
                      semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO
                      shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet
                      silently-1.2.5@silen_5nVdOe0bUXfLPEbxHJT4m4
                      simple-sendfile-0.2.21@simpl_1s4YZSsjn6TCbK7MVn1EXz
                      skein-1.0.9.4@skein_Gu4ZCUdyHoJKdYGOgDHOva
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      stm-chans-3.0.0.4@stmch_4ac5OLG4E0w1rpuIDCribD
                      streaming-commons-0.1.15.2@strea_0Pv1kz8leJoAmtjyRTUWHG
                      stringsearch-0.3.6.6@strin_CAOAc0sCfAC9gi7YClo2KY
                      tagged-0.8.3@tagge_5cptKNCoGdxJM6eqqNERxD
                      tagsoup-0.13.9@tagso_3I5x83DoCVBIz4INMBLU3R
                      template-haskell-2.10.0.0 text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      time-locale-compat-0.1.1.1@timel_Ciz7M1U3da73rRwCjRF3Np
                      transformers-base-0.4.4@trans_74WedXVmfaHHDJItmBRTVp
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unix-compat-0.4.1.4@unixc_Km8uiabmElX5mrb8D4Fywe
                      unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx
                      unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
                      uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr
                      vault-0.3.0.6@vault_8aId1RjvIBs9AcRd6Dlytd
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      wai-3.2.1@wai_9edbdKSIJ67EotPYC07Pm5
                      wai-app-static-3.1.5@waiap_CgbYPrxsBGcBgu3idO05MB
                      wai-extra-3.0.15@waiex_AN9r60wRxlQ1G94yF9jctQ
                      wai-logger-2.2.5@wailo_BCoAaxCAAhP8C9VccJCupp
                      warp-3.2.2@warp_BT83wEXGJqwEvMr1lKbIjl
                      word8-0.1.2@word8_6yKBsGbmsbLB2UCORShr75
                      xss-sanitize-0.3.5.6@xsssa_JdGY8fSYBM7LAdXrSOFQKS
                      yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88
                      yesod-form-1.4.7@yesod_CXBt2wmt7ex0o9Pu0X8jby
                      yesod-1.4.3@yesod_G3l0IvftpcQLS1fhy6ci93
                      yesod-persistent-1.4.0.4@yesod_KDWGSyKXKmE2mrTGkSySls
                      yesod-static-1.5.0.3@yesod_Kslr80RVazD2vTcBFRhOjU
                      zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu
orphans: aeson-compat-0.3.2.0@aeson_9wJdCBL4bH5K4w9XiaFHb3:Data.Aeson.Compat
         aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak:Data.Aeson.Types.Generic
         aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak:Data.Aeson.Types.Instances
         attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.Text.Internal
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         crypto-api-0.13.2@crypt_Kp4uvZbywBzKttuHrlYBAx:Crypto.Classes
         data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe:Data.Default.Instances.Base
         data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk:Data.Default.Instances.DList
         data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY:Data.Default.Instances.Containers
         data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ:Data.Default.Instances.OldLocale
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket.Types
         persistent-template-2.1.6@persi_1951GfcGAw414vdjFbcV5g:Database.Persist.TH
         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistUnique
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx:Data.UnixTime.Diff
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         email-validate-2.2.0@email_CQXkJx3ILx16knsHT8WvIg:Text.Email.Parser
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Addr
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Range
                         main@main:Foundation
                         monad-logger-0.3.18@monad_5Adv9Hf1fONCeS01xDfKe7:Control.Monad.Logger
                         monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS:Control.Monad.Trans.Control
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67:Network.URI
                         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Class.PersistConfig
                         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistStore
                         persistent-postgresql-2.2.2@persi_EzrtUBM22f5BF3Kdnm31Oz:Database.Persist.Postgresql
                         persistent-sqlite-2.2.1@persi_Hyw9Gl6HaKF7LSoBGe21wB:Database.Persist.Sqlite
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ:Control.Monad.Trans.Resource.Internal
                         semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO:Data.List.NonEmpty
                         semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO:Data.Semigroup
                         shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Css
                         shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Shakespeare
                         tagged-0.8.3@tagge_5cptKNCoGdxJM6eqqNERxD:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashSet
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
                         yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Class.Handler
                         yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Types
                         yesod-static-1.5.0.3@yesod_Kslr80RVazD2vTcBFRhOjU:Yesod.Static
                         zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu:Codec.Compression.Zlib.Stream
import  -/  base-4.8.2.0:Control.Applicative a8ebf5ad4932b411ad7725da68be9801
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  blaze-markup-0.7.0.3@blaze_C7imNkL0ufD2cjmU64FP9k:Text.Blaze.Internal 2898da33690d2db163df0dc76596091c
import  -/  blaze-html-0.8.1.1@blaze_Iq6GES6DAMS0745KzFL7i6:Text.Blaze.Html 75b0386c9ee854906d7c6830574b4617
import  -/  Foundation c7feabefebb55d42d7b789621b0b218c
  exports: f2464ef09bb2aff2eaccb31a875104c6
  AboutR 2f04f232b19f314c748d5ecb8f183a74
  AdminR 5037b211c32c31240a2548d1f066b6b7
  Balada 3c7c43d8f7e4278bd427b35a144b70ad
  CadcategoriaR c7c34f946a7326ee38532e86024c37c1
  CaddiaR d1559f80cdfb3517c9ca5cc86c63db18
  CadestabR 9af367b8815b519e440b5161a1efe72c
  CadfaixaprecoR 7c6e763093aceca4fab9ff140c2fe606
  CadpessoaR 0ea2ff3ec888a56335afc25c111f89d4
  CadsubcategR cd9a17f4db72e03a683a29addd562738
  Categoria_estab 35cd3a13e4978576d10953e86d55fd77
  Categoria_estab 3410a735450f599460e39cba2e231286
  Categoria_estabNome_categoria 74c80a05287ab4e3e1f4d4f7923b0846
  Classificacao_estabNome_classificacao 9c730f5bb4bb065324af82d9e52eaf8e
  Dia_evento db23356cc83fc6a71ec5a6ba377385ec
  Dia_evento fb8de85dec36cf238371aca76f04c1d4
  Dia_eventoDc_dia 37ba942d91b3acd10a972045466196fa
  ErroR b6c724f39f2375d1b28c653d7ad95273
  Estabelecimento bcd8342c23b62bd840440848e03fbfd3
  Estabelecimento 031872c5ce88fb3f9e8ea33456761f0e
  EstabelecimentoNome_estab 1d943b098019aa9af0e95efc3d7c6393
  Faixa_preco 5e2c8b972ccb9aa224a74db7627c703e
  Faixa_preco 2d325e89a06719daeeba6fba66da49a1
  Faixa_precoNome_faixa_preco ec146c29410713c5436aa9c9b23e6a4e
  Form 079ee17c0024f8cbf4524ae567d31d57
  Handler 6b6ef6cf490a86b58ce51aa2310b441e
  HomeR 77d281ecac0056f88600e8b844d05f57
  ListaestabsR 5b112c3c415e6f8ad1b2428781dcb0c3
  LoginR b4dca78f58a6babb360e3318693cb198
  LogoutR 7ff217fe0936d0480fc4deb58f779f18
  PerfilR 05cbfdfe04db5baa2d97ccb235a153f4
  Pessoas dacef15a07c0c6809a74a99cad3b6577
  Pessoas a76db50578ac8fef20d0adddf32ed566
  PessoasId b1d316a640966d02beac1c53109013aa
  PessoasLogin 536a38964edbb9b9fb92f506eb313934
  PessoasSenha c97625643a5378684dbf7652efd6cf41
  StaticR 3b2e204efb557afbcdbe465f80afbf95
  Sub_categ_estab 500c1f972638497285eb7144a017a7ab
  Sub_categ_estab d9ffe0ff222e690e1df7c85e4e1ea174
  Sub_categ_estabNome_sub_categ 986ff3f7855d9137d15f60f0b2d2ef5c
  categoria_estabNome_categoria e6733dd42a81afb900fa29088e1f224a
  classificacao_estabNome_classificacao b65d4e2e44a8993ee14e5a9d4220c556
  dia_eventoDc_dia 249c167be16d56e0c1d022a708da23ff
  estabelecimentoCidade_estab 3abd8ded298b162df630288deb410dc6
  estabelecimentoDdd_estab ba704aaa95d87d528454551e636c8e86
  estabelecimentoEnd_estab 06fdae92cc1ed956c2c98ff87539cb4c
  estabelecimentoNome_estab 27b2daeef4ec3b3b65335727309f4b9c
  estabelecimentoTelefone_estab 73ec8a410ff285adbc5b290c9faece90
  faixa_precoNome_faixa_preco cff85bd7a59627bc7d9adc90df437f79
  getStatic 3d62c8e0f0bfa1fbd7f3f38e3d8889cd
  pessoasCidade c3e471c6b0e0ab2bcc5229014112ee6c
  pessoasLogin 8ce2ecc01b5b2c535c247c7b4b78e787
  pessoasNome 30ab85ca2d1ebd917b8b352e29bb6aa6
  style_css c212dbb71fe647429f85b19fc102a099
  sub_categ_estabNome_sub_categ c408d4809ffb45a39fcbbdc2c5b8d211
import  -/  Rotas 3afec9a78f26d1f75b985ca9a4659a18
  exports: 9e75376dfaae94121967e2261d8299b0
  pRoutes c397c0725a9f5e21b25c67adbc66efd8
import  -/  monad-logger-0.3.18@monad_5Adv9Hf1fONCeS01xDfKe7:Control.Monad.Logger 81fdae6370cfcba4c707991affdd9335
import  -/  path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO:Web.PathPieces e7a246921fcfef213af85b6de92fc54c
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist 180e79e34f196720918955b2b484cd93
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Class.PersistEntity 5eb8f78ed08e3d1cc2eb03a542ee8ef5
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Class.PersistQuery 2b12376c014d739fb931ca682ace638c
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Class.PersistStore 19578d4a470dc95e7c983b258734668b
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql 0cf892e65ffc61ad0ca5ededa9db58f5
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistStore 0a06b59de39b78fb9c25f28885d3b285
import  -/  persistent-postgresql-2.2.2@persi_EzrtUBM22f5BF3Kdnm31Oz:Database.Persist.Postgresql e3cee4494ec0b41d091dfbfa53647399
import  -/  persistent-sqlite-2.2.1@persi_Hyw9Gl6HaKF7LSoBGe21wB:Database.Persist.Sqlite 8ea2d1c98781a0943fff27a120518265
import  -/  shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Cassius aa613b98fc667e8306c50662f383651f
import  -/  shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Lucius 6a7d45a36131f7c945150a1a68fb957a
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text 677c532e2dd56476a11a0a8a53880ce7
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Internal d9b6b9a9dd535595b612aea5738b7466
import  -/  wai-3.2.1@wai_9edbdKSIJ67EotPYC07Pm5:Network.Wai.Internal c94cac656eee982fa1e36c81ceaa3aaf
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Class.Dispatch 9efa014da7db9ea2643ef9b6013368bc
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Class.Yesod e0b32da768aac32a5b908402d95fa4b4
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Handler faf894fb8d5127174e21c5e5ba5d9c37
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Internal.Run bed196a7849a8cb603b99143837e8073
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Internal.TH 7f968c8685f147b669e9c01e96081c03
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Types b87a23cf340ec09847f602f8054b5de4
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Widget 34a12ed3ff9183516ec7108dc8a5f8fa
import  -/  yesod-form-1.4.7@yesod_CXBt2wmt7ex0o9Pu0X8jby:Yesod.Form.Fields 4207f45e7d180fd1d9653dc5888247fc
import  -/  yesod-form-1.4.7@yesod_CXBt2wmt7ex0o9Pu0X8jby:Yesod.Form.Functions b0a2f4186f9d70893c256ce5bcdb5ca6
import  -/  yesod-form-1.4.7@yesod_CXBt2wmt7ex0o9Pu0X8jby:Yesod.Form.Types ad7a892cf89b163d999574176db9d126
import  -/  yesod-1.4.3@yesod_G3l0IvftpcQLS1fhy6ci93:Yesod 5be136ed9273569748acb63f2bd39620
import  -/  yesod-persistent-1.4.0.4@yesod_KDWGSyKXKmE2mrTGkSySls:Yesod.Persist.Core 96ff1ce14becc4a26d0b20a36400367f
import  -/  yesod-static-1.5.0.3@yesod_Kslr80RVazD2vTcBFRhOjU:Yesod.Static 6232c965ad70ab1f773f8c649b0ff405
addDependentFile "/home/ubuntu/.stack/programs/x86_64-linux/ghc-7.10.3/lib/ghc-7.10.3/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.22.5.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
addDependentFile "Hamlets/listaestab.hamlet"
addDependentFile "Hamlets/logout.hamlet"
addDependentFile "Hamlets/perfil.hamlet"
addDependentFile "Hamlets/login.hamlet"
addDependentFile "Hamlets/administrador.hamlet"
addDependentFile "Hamlets/preco.hamlet"
addDependentFile "Hamlets/dia.hamlet"
addDependentFile "Hamlets/subcategoria.hamlet"
addDependentFile "Hamlets/categoria.hamlet"
addDependentFile "Hamlets/estabelecimento.hamlet"
addDependentFile "Hamlets/pessoas.hamlet"
addDependentFile "Hamlets/home.hamlet"
7141c814fd7e186ae64ba6449e5f4a01
  $fYesodDispatchBalada ::
    Yesod.Core.Class.Dispatch.YesodDispatch Foundation.Balada
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Balada
                  Foundation.$fYesodBalada
                  Handlers.$fYesodDispatchBalada_$cyesodDispatch -}
6aa0ce95ce786d7d9f768791c50d3256
  $fYesodDispatchBalada_$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv Foundation.Balada
    -> Network.Wai.Application
  {- Arity: 2,
     Strictness: <L,U(U,U(U(U,U,U,U,U,U,U,U,U,U),U),U,U,C(U(U,1*U(U,U,U))))><S(LLLLLLLSLLLLLLLL),1*U(U(U,U,U,U),U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Yesod.Core.Types.YesodRunnerEnv Foundation.Balada
                   w1 :: Network.Wai.Internal.Request ->
                 case w1 of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 Handlers.$w$cyesodDispatch
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16 }) -}
4f424a522d598f9e25693a01c7c44dd7
  $s$fApplicativeWidgetT ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fApplicativeWidgetT1
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$cpure
                  (Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fApplicativeWidgetT1
                     GHC.Base.$fMonadIO)
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* -}
352176e63d08886a97be26f65a2a9d2f
  $s$fApplicativeWidgetT1 ::
    GHC.Base.Functor
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Yesod.Core.Class.Yesod.$s$fFunctorWidgetT @ Foundation.Balada) -}
d28f16995060b638eaedbbdc7c27c056
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*> ::
    Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO b
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a202
                   @ b
                   eta :: Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a202
                   eta2 :: Yesod.Core.Types.WidgetT
                             Foundation.Balada GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   Handlers.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ b
                   (Yesod.Core.Class.Yesod.$s$fFunctorWidgetT_$s$fFunctorWidgetT_$c<$
                      @ Foundation.Balada
                      @ (b -> b)
                      @ a202
                      (GHC.Base.id @ b)
                      eta)
                   eta2) -}
f25ec250b9a11a8d3b0d6245ebdb7194
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* ::
    Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a202
                   @ b
                   eta :: Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a202
                   eta2 :: Yesod.Core.Types.WidgetT
                             Foundation.Balada GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   Handlers.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ a202
                   (Yesod.Core.Types.$fFunctorWidgetT_$cfmap
                      @ Foundation.Balada
                      @ GHC.Types.IO
                      GHC.Base.$fMonadIO
                      @ a202
                      @ (b -> a202)
                      (GHC.Base.const @ a202 @ b)
                      eta)
                   eta2) -}
6fce23faec24d3887bcaf2d5624795df
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$cpure ::
    a -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a202
                   a203 :: a202
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.returnIO
                    @ (a202,
                       Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route Foundation.Balada))
                    (a203,
                     Yesod.Core.Types.$fApplicativeWidgetT_$cmempty
                       @ (Yesod.Routes.Class.Route Foundation.Balada)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <(a202,
                        Yesod.Core.Types.GWData
                          (Yesod.Routes.Class.Route Foundation.Balada))>_R)
                   eta2)
                  `cast`
                (forall a202.
                 <a202>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(a202,
                                           Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route Foundation.Balada))>_R))
                          (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                    <Foundation.Balada>_N <GHC.Types.IO>_N <a202>_N))) -}
d291f47bbe16350c8613c81385ea5300
  $s$fMonadBasebWidgetT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  Handlers.$s$fMonadBasebWidgetT3
                  GHC.Base.$fMonadIO
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadBasebWidgetT_$cliftBase
                     @ GHC.Types.IO
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.Base.$fMonadBaseIOIO) -}
13afc59c011bd80a851b9fd6921184bf
  $s$fMonadBasebWidgetT1 ::
    GHC.Base.Monad
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadBasebWidgetT_$s$fMonadWidgetT -}
d5e950eafc10174a04c8fb0c62ee8665
  $s$fMonadBasebWidgetT2 ::
    GHC.Base.String
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a202 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a202)
                   eta) -}
a484f17cb46dbcb66ff3211c45625ce2
  $s$fMonadBasebWidgetT3 ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fApplicativeWidgetT -}
ccf664c9e5483bd3acf3644d07e39190
  $s$fMonadBasebWidgetT_$s$fMonadWidgetT ::
    GHC.Base.Monad
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT3
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>=
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$cpure
                  Handlers.$s$fMonadBasebWidgetT2 -}
41040a945663e3863cf92332aa4c664c
  $s$fMonadHandlerWidgetT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadHandlerWidgetT2
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cliftHandlerT
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadHandlerWidgetT2
                     Handlers.$s$fMonadHandlerWidgetT1) -}
6db210b16fde3311bea5dcc3b512b7ec
  $s$fMonadHandlerWidgetT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO,
                  GHC.Base.$fApplicativeIO)) -}
fb4b802fa877a3343f9ad9811552745a
  $s$fMonadHandlerWidgetT2 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT -}
8c385ff49854b882bb17abee770d4c1d
  $s$fMonadHandlerWidgetT3 ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadBasebWidgetT -}
280ec439739d4d2a49970b368924af11
  $s$fMonadHandlerWidgetT4 ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT -}
5aca4dacc5f295f0d607a7d6ee96ae97
  $s$fMonadHandlerWidgetT5 ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT -}
1964c551c9df6226762e8e54d0b57d16
  $s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadIOWidgetT_$cliftIO
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.IO.Class.$fMonadIOIO) -}
fae7bbcccbd54229ef0ffcbef2bc0e90
  $s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadHandlerWidgetT5
                  Handlers.$s$fMonadHandlerWidgetT4
                  Handlers.$s$fMonadBasebWidgetT3
                  Handlers.$s$fMonadHandlerWidgetT3
                  (Yesod.Core.Types.$fMonadResourceWidgetT_$cliftResourceT
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadHandlerWidgetT5
                     Handlers.$s$fMonadHandlerWidgetT4
                     Handlers.$s$fMonadBasebWidgetT3
                     Handlers.$s$fMonadHandlerWidgetT3
                     GHC.Base.$fApplicativeIO
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
f0982113622185f24371a4b4756d035e
  $s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadThrowWidgetT_$cthrowM
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.Catch.$fMonadThrowIO) -}
9e2a9e884a97cd8a956dd340255a2ada
  $w$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv Foundation.Balada
    -> Network.HTTP.Types.Method.Method
    -> Network.HTTP.Types.Version.HttpVersion
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Network.HTTP.Types.Header.RequestHeaders
    -> GHC.Types.Bool
    -> Network.Socket.Types.SockAddr
    -> [Data.Text.Internal.Text]
    -> Network.HTTP.Types.URI.Query
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> Data.Vault.Lazy.Vault
    -> Network.Wai.Internal.RequestBodyLength
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Types.IO Network.Wai.Internal.ResponseReceived
  {- Arity: 17,
     Strictness: <L,U(U,U(U(U,U,U,U,U,U,U,U,U,U),U),U,U,C(U(U,1*U(U,U,U))))><L,U(U,U,U,U)><L,U><L,U(U,U,U,U)><L,U><L,U><L,U><L,U><S,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
db7c84efc8d409ce11c5eb9696e024a1
  categs ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Categoria_estab))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Categoria_estab]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Categoria_estab]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.categs17 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Categoria_estab]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Categoria_estab]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Categoria_estab]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Categoria_estab)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs9 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Categoria_estab)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key
                              Foundation.Categoria_estab)
                         Handlers.categs2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Categoria_estab)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Categoria_estab)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Categoria_estab)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Categoria_estab)>_N)))) -}
1eda028cf7719bd9e95728c64724bfc3
  categs10 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: (\ @ site ->
                 (Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO,
                  GHC.Base.$fApplicativeIO)) -}
c755503d95b8d07e5574294867a6dce5
  categs11 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadResourceHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs16 @ site)
                   (Handlers.categs15 @ site)
                   (Handlers.categs14 @ site)
                   (Handlers.categs12 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO
                   Control.Monad.Base.$fMonadBaseIOIO
                   Control.Monad.Catch.$fMonadThrowIO) -}
baa9b8270302b88aa07d8921db1cacdb
  categs12 ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadBasebHandlerT
                   @ GHC.Types.IO
                   @ site
                   @ GHC.Types.IO
                   GHC.Base.$fApplicativeIO
                   (Handlers.categs14 @ site)
                   GHC.Base.$fMonadIO
                   (Handlers.categs13 @ site)
                   Control.Monad.Base.$fMonadBaseIOIO) -}
134650f35b7c388b7b19cdbacd3d4a45
  categs13 ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs14 @ site)
                   GHC.Base.$fMonadIO) -}
bc6b7629a3b6d82f476a51bc5ed62d9b
  categs14 ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fApplicativeHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Yesod.Core.Handler.$s$fFunctorHandlerT @ site)
                   GHC.Base.$fMonadIO) -}
c723f0b427a1b701cc6be3333f14c646
  categs15 ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadIOHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs13 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
15b9d6d696f213f073ac86c24b9fc1f4
  categs16 ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadThrowHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs13 @ site)
                   Control.Monad.Catch.$fMonadThrowIO) -}
9dc2f794e19c393aa08d970fdfebae7d
  categs17 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Categoria_estab]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Categoria_estab)))
                   = (Handlers.categs_m2 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Categoria_estab))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Categoria_estab))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Categoria_estab))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Categoria_estab))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Categoria_estab]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Categoria_estab)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Categoria_estab)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Categoria_estab]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Categoria_estab]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Categoria_estab]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Categoria_estab]>_N)))) -}
e266bd5b3ba4df0dab69dfa15765d2fd
  categs18 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Categoria_estab]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Categoria_estab]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Categoria_estab)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Categoria_estab
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityCategoria_estab
                   (Handlers.categs15 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
78b8e2744777019a17b8483dda3014d3
  categs2 ::
    Database.Persist.Class.PersistEntity.Entity
      Foundation.Categoria_estab
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key
          Foundation.Categoria_estab)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Categoria_estab ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Categoria_estab ds4 -> ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Categoria_estab
                    ent)) -}
c15764af99b63f98194a4d2d990c22d2
  categs5 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Categoria_estab]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Categoria_estab)
                   Handlers.categs6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Categoria_estab))) -}
fae230e5adf977c780851187fd66b53f
  categs6 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Categoria_estab
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Categoria_estab
                   @ Data.Text.Internal.Text
                   Handlers.categs7
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldCategoria_estabtyp[0])) <Data.Text.Internal.Text>_N)) -}
e3c8872f8a545a3b3075c4d05a1a1339
  categs7 ::
    Foundation.R:EntityFieldCategoria_estabtyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Categoria_estabNome_categoria
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
bcb2e39064d223071309dd1b89ee464a
  categs9 ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Class.Handler.$fMonadHandlerHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs11 @ site)
                   (Handlers.categs10 @ site)) -}
5904c99d12cfd66a5247886a5ea5d0e6
  categs_m2 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Categoria_estab)))
  {- Unfolding: (\ @ site ->
                 Handlers.categs18
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Categoria_estab))
                   Handlers.categs5) -}
2980523ab91efd8e91a71ec83f882d66
  estabs ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Estabelecimento))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Estabelecimento]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Estabelecimento]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.estabs2 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Estabelecimento]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Estabelecimento]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Estabelecimento]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Estabelecimento)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs9 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Estabelecimento)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key
                              Foundation.Estabelecimento)
                         Handlers.estabs1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Estabelecimento)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Estabelecimento)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Estabelecimento)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Estabelecimento)>_N)))) -}
032607c1b683e29b088de665de9fb41d
  estabs1 ::
    Database.Persist.Class.PersistEntity.Entity
      Foundation.Estabelecimento
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key
          Foundation.Estabelecimento)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Estabelecimento ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Estabelecimento ds4 ds5 ds3 ds6 ds7 ds8 ds9 ds10 ->
                  ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Estabelecimento
                    ent)) -}
d2ead698ae472997d53028ad9dc6cd0f
  estabs2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Estabelecimento]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Estabelecimento)))
                   = (Handlers.estabs_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Estabelecimento))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Estabelecimento))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Estabelecimento))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Estabelecimento))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Estabelecimento]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Estabelecimento)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Estabelecimento)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Estabelecimento]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Estabelecimento]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Estabelecimento]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Estabelecimento]>_N)))) -}
f70b3344c32e1f387ded7c0e79e446a6
  estabs3 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Estabelecimento]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Estabelecimento)
                   Handlers.estabs4
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Estabelecimento))) -}
b12496725c74bf6fd84472cb95daa333
  estabs4 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Estabelecimento
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Estabelecimento
                   @ Data.Text.Internal.Text
                   Handlers.estabs5
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldEstabelecimentotyp[0])) <Data.Text.Internal.Text>_N)) -}
678d8ede906aaf24120b4bebdc6f0f56
  estabs5 ::
    Foundation.R:EntityFieldEstabelecimentotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.EstabelecimentoNome_estab
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
4b988bddd98ce2dffc8423c1af199de9
  estabs6 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Estabelecimento]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Estabelecimento]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Estabelecimento)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Estabelecimento
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityEstabelecimento
                   (Handlers.categs15 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
ef5e023426fc8e72a129f473d933724f
  estabs_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Estabelecimento)))
  {- Unfolding: (\ @ site ->
                 Handlers.estabs6
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Estabelecimento))
                   Handlers.estabs3) -}
6162f2b68a267e33b47a1e71abb04a5f
  formCategoria :: Foundation.Form Foundation.Categoria_estab
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formCategoria1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Categoria_estab>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
b271442345aadfab2dfc25bb89ed254f
  formCategoria1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Categoria_estab,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Categoria_estab
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formCategoria2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Categoria_estab>_N))
                   eta2
                   eta3
                   eta4) -}
f83f462c21f6c586f9520246cba8bbd0
  formCategoria2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Categoria_estab,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formCategoria_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x30 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing @ Foundation.Categoria_estab
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure @ Foundation.Categoria_estab errs
                        Yesod.Form.Types.FormSuccess a202
                        -> Yesod.Form.Types.FormSuccess
                             @ Foundation.Categoria_estab
                             (case a202 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                              Foundation.Categoria_estab dt }) },
                      x30,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Categoria_estab,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Categoria_estab,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
444108f589d8e818690440a027234e79
  formCategoria3 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formCategoria4
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
04436ea7bc4ebbc79ff8a955daafbd11
  formCategoria4 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formCategoria5) -}
252b33e554a810c27f5149d87785acfa
  formCategoria5 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formCategoria6) -}
a389f952cc611a69dd55e25a70d0f507
  formCategoria6 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formCategoria7
                   0
                   ipv }) -}
9acd3cb2687f0ebeb0fe82651419860a
  formCategoria7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Categoria: "#) -}
c40f19110f7c7492bf982331b83c6580
  formCategoria8 ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Handlers.formCategoria9
                   (Yesod.Form.Fields.textField1 @ Foundation.Handler)
                   Yesod.Form.Types.UrlEncoded) -}
440419e3ce3943e33801566d26667b08
  formCategoria9 ::
    [Data.Text.Internal.Text]
    -> [Yesod.Core.Types.FileInfo]
    -> Foundation.Handler
         (Data.Either.Either
            (Text.Shakespeare.I18N.SomeMessage
               (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler))
            (GHC.Base.Maybe Data.Text.Internal.Text))
  {- Arity: 2,
     Unfolding: (\ w3 :: [Data.Text.Internal.Text]
                   w4 :: [Yesod.Core.Types.FileInfo][OneShot] ->
                 Yesod.Form.Functions.$wparseHelperGen
                   @ Yesod.Form.Types.FormMessage
                   @ Data.Text.Internal.Text
                   @ Foundation.Handler
                   @ (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Data.Either.Right
                      @ Yesod.Form.Types.FormMessage
                      @ Data.Text.Internal.Text)
                   w3) -}
966a6a5e06bd38f689f833ab4e70e640
  formCategoria_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formCategoria3
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
ac40d24874d55abbbdd49e353326e06f
  formDia :: Foundation.Form Foundation.Dia_evento
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formDia1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Dia_evento>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
c37c2b5310eac2278a954c91ea4811e6
  formDia1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Dia_evento,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Dia_evento
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formDia2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Dia_evento>_N))
                   eta2
                   eta3
                   eta4) -}
76fdede2100fec78fee6742825f4f4c9
  formDia2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Dia_evento,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formDia_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x30 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing @ Foundation.Dia_evento
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure @ Foundation.Dia_evento errs
                        Yesod.Form.Types.FormSuccess a202
                        -> Yesod.Form.Types.FormSuccess
                             @ Foundation.Dia_evento
                             (case a202 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                              Foundation.Dia_evento dt }) },
                      x30,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Dia_evento,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Dia_evento,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
525c642654d7ed972b4d1c2ef65f5d38
  formDia3 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formDia4
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
0914b0c139e8893531a5451702f53f3c
  formDia4 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formDia5) -}
cd7cc5964eb2f1de19b32ac0d4c12d54
  formDia5 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formDia6) -}
77a709ae928d5c3bb1f151214de7602f
  formDia6 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formDia7
                   0
                   ipv }) -}
4ad97b8fb40fdb9c73ca954594a8a233
  formDia7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Dia: "#) -}
03c6f88a5ec229494989d75d14548ecb
  formDia_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formDia3
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
88c34126935cacc7326100805ae1ef1e
  formEstabelecimento :: Foundation.Form Foundation.Estabelecimento
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formEstabelecimento1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Estabelecimento>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
c79fb39965616b70da2fbfd74ba1949a
  formEstabelecimento1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Estabelecimento,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Estabelecimento
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formEstabelecimento2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Estabelecimento>_N))
                   eta2
                   eta3
                   eta4) -}
6f29aa207f3fdd62783f604ee3b45788
  formEstabelecimento10 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Faixa_preco
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Faixa_preco ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Faixa_preco ds4 ds5 ds3 -> ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Faixa_preco
                    ent)) -}
e13495501f5ffd16e3ffcce83b2d2ef2
  formEstabelecimento11 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Faixa_preco]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity
                        Foundation.Faixa_preco]
                   Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                   (Handlers.formEstabelecimento12 @ Foundation.Balada)
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Faixa_preco]>_N))) -}
f67ff46529879d880663ef0382d2654c
  formEstabelecimento12 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Faixa_preco]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Faixa_preco)))
                   = (Handlers.formEstabelecimento_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Faixa_preco))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Faixa_preco))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Faixa_preco))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Faixa_preco))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Faixa_preco]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Faixa_preco)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Faixa_preco)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Faixa_preco]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Faixa_preco]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Faixa_preco]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Faixa_preco]>_N)))) -}
465263c10a1672c3d2b8c648c435e7ed
  formEstabelecimento13 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Faixa_preco]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Faixa_preco)
                   Handlers.formEstabelecimento14
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Faixa_preco))) -}
dcc6935e3ce63af7096752014d738c02
  formEstabelecimento14 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Faixa_preco
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Faixa_preco
                   @ Data.Text.Internal.Text
                   Handlers.formEstabelecimento15
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldFaixa_precotyp[0])) <Data.Text.Internal.Text>_N)) -}
5ea5620c32ba41a08d9a2c7da6d2d569
  formEstabelecimento15 ::
    Foundation.R:EntityFieldFaixa_precotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Faixa_precoNome_faixa_preco
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
50930982100f50801a7996fa8eef1542
  formEstabelecimento16 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Faixa_preco]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Faixa_preco]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Faixa_preco)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Faixa_preco
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityFaixa_preco
                   (Handlers.categs15 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
30df906018b92716bee1de0ab49640de
  formEstabelecimento17 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco))
    -> Yesod.Form.Types.Field
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
  {- Unfolding: (Yesod.Form.Fields.selectField
                   @ Foundation.Balada
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                   Foundation.$fEqKey3
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))) -}
020b6e1ddb5197d0c042b4641d2f932d
  formEstabelecimento18 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ (Database.Persist.Class.PersistEntity.Key
                        Foundation.Categoria_estab)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                      -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento27
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Database.Persist.Class.PersistEntity.Key
                                Foundation.Categoria_estab
                              -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento19
                   w4
                   w5
                   w6) -}
aa689d8c5e5d947f07b6493e432e4502
  formEstabelecimento19 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key
         Foundation.Categoria_estab)
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ (Database.Persist.Class.PersistEntity.Key
                        Foundation.Categoria_estab)
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formEstabelecimento23
                   Handlers.formEstabelecimento20
                   (GHC.Base.Nothing
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Categoria_estab))) -}
01e68a8c6e8970cdd6c2958fcfa1d3f6
  formEstabelecimento2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Estabelecimento,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                   @ Foundation.Estabelecimento
                   Handlers.formEstabelecimento18
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento3
                   w4
                   w5
                   w6) -}
280c9f941eca3313e8d37273af5e38f0
  formEstabelecimento20 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento21
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
a9b38b77c65f54b2838976f3bac226d1
  formEstabelecimento21 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento22) -}
2c015928555785cfad7772ed7b2ab115
  formEstabelecimento22 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formCategoria7
                      0
                      ipv })) -}
7c2585582748af2882eb89c7ba2ae6bb
  formEstabelecimento23 ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key
         Foundation.Categoria_estab)
  {- Unfolding: (Handlers.formEstabelecimento26
                   Handlers.formEstabelecimento24
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       <Yesod.Form.Fields.OptionList
                                          (Database.Persist.Class.PersistEntity.Key
                                             Foundation.Categoria_estab)>_R))
                        (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                  <Foundation.Balada>_N
                                  <GHC.Types.IO>_N
                                  <Yesod.Form.Fields.OptionList
                                     (Database.Persist.Class.PersistEntity.Key
                                        Foundation.Categoria_estab)>_N)))) -}
fc079750f9ac33fecd0a85c155fee140
  formEstabelecimento24 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key
               Foundation.Categoria_estab) #)
  {- Arity: 2,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistBalada3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistBalada2
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Categoria_estab]
                        (case ipv1 of wild { Foundation.Balada ds ds2 -> ds2 })
                        Handlers.formEstabelecimento25
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key
                          Foundation.Categoria_estab)
                     @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                     (Handlers.categs9 @ Foundation.Balada)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Balada)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                    <Foundation.Balada>_N <GHC.Types.IO>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Categoria_estab)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key
                             Foundation.Categoria_estab)
                        Handlers.categs2
                        ipv3))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Categoria_estab)>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key
                            Foundation.Categoria_estab)>_R)
                   ipv2 } }) -}
3c2c5f63d110dd0ddd01bcab4c680db5
  formEstabelecimento25 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Categoria_estab]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity
                        Foundation.Categoria_estab]
                   Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                   (Handlers.categs17 @ Foundation.Balada)
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Categoria_estab]>_N))) -}
9ff9de9a1faf4f3f173422cba1ed1130
  formEstabelecimento26 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Categoria_estab))
    -> Yesod.Form.Types.Field
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Categoria_estab)
  {- Unfolding: (Yesod.Form.Fields.selectField
                   @ Foundation.Balada
                   @ (Database.Persist.Class.PersistEntity.Key
                        Foundation.Categoria_estab)
                   Foundation.$fEqKey5
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))) -}
30c2e75c745b209daf212104ea18ebf8
  formEstabelecimento27 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Database.Persist.Class.PersistEntity.Key
               Foundation.Categoria_estab
             -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Database.Persist.Class.PersistEntity.Key
                        Foundation.Categoria_estab
                      -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                      -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento33
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Database.Persist.Class.PersistEntity.Key
                                   Foundation.Categoria_estab
                              -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento28
                   w4
                   w5
                   w6) -}
7c2ffe998f1a9bd1e86e206ffb047143
  formEstabelecimento28 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento29
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
471905fdbb49d278028a3624bf6916c8
  formEstabelecimento29 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento30
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
e091d3028b72e8017aa701eea41e643c
  formEstabelecimento3 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formEstabelecimento8
                   Handlers.formEstabelecimento4
                   (GHC.Base.Nothing
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Faixa_preco))) -}
bb14c79acf5ee46d5679713971304bb2
  formEstabelecimento30 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento31) -}
af07f36ab4a380c90cd63fcd7cdde10a
  formEstabelecimento31 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento32
                      0
                      ipv })) -}
c45f62d59750b61a4f8c66cb91e878bc
  formEstabelecimento32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Telefone: "#) -}
e8e80135f8e2a07710e77e07c0d5e094
  formEstabelecimento33 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Database.Persist.Class.PersistEntity.Key
                  Foundation.Categoria_estab
             -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Database.Persist.Class.PersistEntity.Key
                           Foundation.Categoria_estab
                      -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                      -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento39
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Database.Persist.Class.PersistEntity.Key
                                   Foundation.Categoria_estab
                              -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento34
                   w4
                   w5
                   w6) -}
f041bc0de59302f36e321e8d2722858b
  formEstabelecimento34 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento35
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
134b1915478ad39e6aeedf06408a6ee5
  formEstabelecimento35 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento36
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
c14e995861632afd0779ea45a9280de4
  formEstabelecimento36 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento37) -}
4366ffa3776b4cb8bcd798798bdae8b7
  formEstabelecimento37 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento38
                      0
                      ipv })) -}
e60392280a745fb2a0b9168edad79a2e
  formEstabelecimento38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DDD: "#) -}
480e013325e2288cbb83b65f708b3b81
  formEstabelecimento39 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Database.Persist.Class.PersistEntity.Key
                  Foundation.Categoria_estab
             -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Database.Persist.Class.PersistEntity.Key
                           Foundation.Categoria_estab
                      -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                      -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento45
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Database.Persist.Class.PersistEntity.Key
                                   Foundation.Categoria_estab
                              -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento40
                   w4
                   w5
                   w6) -}
64fbdc17baf62c7e7179d138a6c5cc88
  formEstabelecimento4 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
a35f9de367b9ed1b20180f9f89eb111c
  formEstabelecimento40 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento41
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
1b8625e2c6143fc8d221c17d6d2ff06e
  formEstabelecimento41 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento42
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
7563def651b8850f36a31208c99ded55
  formEstabelecimento42 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento43) -}
d452225859983011c83c838b69a9ae9b
  formEstabelecimento43 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento44
                      0
                      ipv })) -}
ef14aac71c5776bb7d3a94d2694e032f
  formEstabelecimento44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Email: "#) -}
96831870f88f03b258da27485c27c82b
  formEstabelecimento45 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Database.Persist.Class.PersistEntity.Key
                  Foundation.Categoria_estab
             -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Database.Persist.Class.PersistEntity.Key
                           Foundation.Categoria_estab
                      -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                      -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento51
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Database.Persist.Class.PersistEntity.Key
                                   Foundation.Categoria_estab
                              -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento46
                   w4
                   w5
                   w6) -}
024972d2262da3825ff159237e3a8a73
  formEstabelecimento46 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento47
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
14094a0f8f0f0336da1b4f82ebc62a2d
  formEstabelecimento47 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento48
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
451cde4e036d1185b0507390fd3bb7e9
  formEstabelecimento48 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento49) -}
a9e1fdd2de4df8b7ec0bd05c8c282969
  formEstabelecimento49 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento50
                      0
                      ipv })) -}
6dbdf7aa4ca78b3b706060c851db1243
  formEstabelecimento5 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento6) -}
653b70240f4bf8aa492a28c2e7535ec6
  formEstabelecimento50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Cidade: "#) -}
99477ba0f5af8179f012c94293e0b68e
  formEstabelecimento51 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Database.Persist.Class.PersistEntity.Key
                  Foundation.Categoria_estab
             -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Database.Persist.Class.PersistEntity.Key
                           Foundation.Categoria_estab
                      -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                      -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento57
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Database.Persist.Class.PersistEntity.Key
                                   Foundation.Categoria_estab
                              -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento52
                   w4
                   w5
                   w6) -}
991fc60f3cba00432bfd4309a1a360ab
  formEstabelecimento52 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento53
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
4d32b73ae1795cd895a55bf21653611f
  formEstabelecimento53 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento54
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
b50d2c36c27e13a0cd4b9234fa611d4e
  formEstabelecimento54 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento55) -}
437d614324a39a0327a0d9558ef51b8f
  formEstabelecimento55 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento56
                      0
                      ipv })) -}
598f96903fd7fdd4d52b95e723bb8a47
  formEstabelecimento56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "Endere\\195\\167o: "#) -}
8b049c0c1e1ae062e427b4c12d32ca7f
  formEstabelecimento57 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Database.Persist.Class.PersistEntity.Key
                  Foundation.Categoria_estab
             -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formEstabelecimento_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x30 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Database.Persist.Class.PersistEntity.Key
                                     Foundation.Categoria_estab
                                -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                                -> Foundation.Estabelecimento)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Database.Persist.Class.PersistEntity.Key
                                     Foundation.Categoria_estab
                                -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                                -> Foundation.Estabelecimento)
                             errs
                        Yesod.Form.Types.FormSuccess a202
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Database.Persist.Class.PersistEntity.Key
                                     Foundation.Categoria_estab
                                -> Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco
                                -> Foundation.Estabelecimento)
                             (Foundation.$WEstabelecimento a202) },
                      x30,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Database.Persist.Class.PersistEntity.Key
                                               Foundation.Categoria_estab
                                          -> Database.Persist.Class.PersistEntity.Key
                                               Foundation.Faixa_preco
                                          -> Foundation.Estabelecimento),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Database.Persist.Class.PersistEntity.Key
                                          Foundation.Categoria_estab
                                     -> Database.Persist.Class.PersistEntity.Key
                                          Foundation.Faixa_preco
                                     -> Foundation.Estabelecimento),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
faf1617f18d6ba6f4b1d46c870be8bde
  formEstabelecimento58 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento59
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
82eb1c5a2d1112b152fc6e00456821c7
  formEstabelecimento59 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento60) -}
997f07f69b0eca7c1663db676a664e94
  formEstabelecimento6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento7
                      0
                      ipv })) -}
183b89b7ce26f722047f2b80eb4f2d46
  formEstabelecimento60 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formEstabelecimento61) -}
59fdd50f9218ebfd4f3ddfe921a2925e
  formEstabelecimento61 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formEstabelecimento62
                   0
                   ipv }) -}
8a265ac5ef8f25837e8ac21454ebf31f
  formEstabelecimento62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Nome: "#) -}
75fc5540bfa9be84800cecc8c2f707fe
  formEstabelecimento7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "Pre\\195\\167o: "#) -}
128a0b0660d5c6f96386dd2caf2ed3ed
  formEstabelecimento8 ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
  {- Unfolding: (Handlers.formEstabelecimento17
                   Handlers.formEstabelecimento9
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       <Yesod.Form.Fields.OptionList
                                          (Database.Persist.Class.PersistEntity.Key
                                             Foundation.Faixa_preco)>_R))
                        (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                  <Foundation.Balada>_N
                                  <GHC.Types.IO>_N
                                  <Yesod.Form.Fields.OptionList
                                     (Database.Persist.Class.PersistEntity.Key
                                        Foundation.Faixa_preco)>_N)))) -}
7c290456919ca219b11bf7a6cb47a2a0
  formEstabelecimento9 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key
               Foundation.Faixa_preco) #)
  {- Arity: 2,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistBalada3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistBalada2
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Faixa_preco]
                        (case ipv1 of wild { Foundation.Balada ds ds2 -> ds2 })
                        Handlers.formEstabelecimento11
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                     @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                     (Handlers.categs9 @ Foundation.Balada)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Balada)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                    <Foundation.Balada>_N <GHC.Types.IO>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Faixa_preco)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                        Handlers.formEstabelecimento10
                        ipv3))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Faixa_preco)>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key
                            Foundation.Faixa_preco)>_R)
                   ipv2 } }) -}
9bb5ab03217677ccfb2675c267d88707
  formEstabelecimento_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento58
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
f26e7069d863e7706e38fd306caff9f8
  formEstabelecimento_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Faixa_preco)))
  {- Unfolding: (\ @ site ->
                 Handlers.formEstabelecimento16
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Faixa_preco))
                   Handlers.formEstabelecimento13) -}
4e969d68e991c7a96bb0e630522c4316
  formFaixapreco :: Foundation.Form Foundation.Faixa_preco
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formFaixapreco1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Faixa_preco>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
493ce9f9dde4f1e920a8a6ebdc08d81f
  formFaixapreco1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Faixa_preco,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Faixa_preco
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formFaixapreco2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Faixa_preco>_N))
                   eta2
                   eta3
                   eta4) -}
8477b2ff618e7dfd07054ecd08d1ed77
  formFaixapreco10 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formFaixapreco11
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
23d2028d10f0479284cdb40f0c0a0c20
  formFaixapreco11 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formFaixapreco12) -}
eebd865d610c66442c09d6cf44ffba11
  formFaixapreco12 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formFaixapreco13
                      0
                      ipv })) -}
a77e057bafb74f932056a57718f1bd80
  formFaixapreco13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Valor Inicial: "#) -}
edeb7cdab5a8430f5e1ee158a53e89a6
  formFaixapreco14 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text -> Foundation.Faixa_preco),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formEstabelecimento_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x30 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text -> Foundation.Faixa_preco)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text -> Foundation.Faixa_preco)
                             errs
                        Yesod.Form.Types.FormSuccess a202
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text -> Foundation.Faixa_preco)
                             (Foundation.$WFaixa_preco a202) },
                      x30,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text -> Foundation.Faixa_preco),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text -> Foundation.Faixa_preco),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
c8ca8e9406602c35ff1f967f68a04a1a
  formFaixapreco2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Faixa_preco,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ Foundation.Faixa_preco
                   Handlers.formFaixapreco8
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text -> Foundation.Faixa_preco>_N))
                   Handlers.formFaixapreco3
                   w4
                   w5
                   w6) -}
9362db4f71a426bd6524186ae779aeca
  formFaixapreco3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formFaixapreco4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
bf4fba0f20b351b32e14c60c665aa6d2
  formFaixapreco4 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formFaixapreco5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
7e75ff3f36f22aef42c24d8dbd9dffcf
  formFaixapreco5 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formFaixapreco6) -}
d8f25f4e1f0249deb72ae90cfb635fb9
  formFaixapreco6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formFaixapreco7
                      0
                      ipv })) -}
5fead80e84b4d6086b06051c71798d1a
  formFaixapreco7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Valor Final: "#) -}
0a8d68e81351b2ac541addad5ef5f550
  formFaixapreco8 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text -> Foundation.Faixa_preco),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text -> Foundation.Faixa_preco)
                   Handlers.formFaixapreco14
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text -> Foundation.Faixa_preco>_N))
                   Handlers.formFaixapreco9
                   w4
                   w5
                   w6) -}
801fb30292824fa8c3e7c7c5ad1264e1
  formFaixapreco9 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formFaixapreco10
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
db77c2598099bce3ff9a0a7347b7d831
  formLogin ::
    Foundation.Form (Data.Text.Internal.Text, Data.Text.Internal.Text)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formLogin1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text, Data.Text.Internal.Text)>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
3d6086bf37ba1c99fa37a6ff0d8aa7f4
  formLogin1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult
             (Data.Text.Internal.Text, Data.Text.Internal.Text),
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formLogin2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <(Data.Text.Internal.Text, Data.Text.Internal.Text)>_N))
                   eta2
                   eta3
                   eta4) -}
4d4fefe3c518f87ec8fb5c480ed950a4
  formLogin10 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formLogin11
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
e56457f255f4f94bf399bc7364a1a69a
  formLogin11 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formLogin12) -}
44b5fef2789d8a68328741df126f3d32
  formLogin12 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formLogin13) -}
a191c47ce4750a8a0ad61739091aebfb
  formLogin13 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formLogin14
                   0
                   ipv }) -}
6e23088db2886421fe8d1ec0156c3367
  formLogin14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Login: "#) -}
3fe8573d3eba6b9b083ba2e0d03c75f3
  formLogin2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text, Data.Text.Internal.Text),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   Handlers.formLogin9
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> (Data.Text.Internal.Text, Data.Text.Internal.Text)>_N))
                   Handlers.formLogin3
                   w4
                   w5
                   w6) -}
f0216e1e1fd82b4bf61cdf89c93f7821
  formLogin3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formLogin8
                   Handlers.formLogin4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
2bcd64e603e0ccd3c0c112b986929007
  formLogin4 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formLogin5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
271cc7a21dab0e1e543559f646af553c
  formLogin5 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formLogin6) -}
509a84825d411961f606255c39bc36d3
  formLogin6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formLogin7
                      0
                      ipv })) -}
68107aac455349f834adda82472dea8d
  formLogin7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Senha: "#) -}
4b11ed6d733002bafb85f4245b96e825
  formLogin8 ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Handlers.formCategoria9
                   (Yesod.Form.Fields.passwordField1 @ Foundation.Handler)
                   Yesod.Form.Types.UrlEncoded) -}
9089f37f5f672c8a91392f5271d763bc
  formLogin9 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> (Data.Text.Internal.Text, Data.Text.Internal.Text)),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formLogin_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x30 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> (Data.Text.Internal.Text, Data.Text.Internal.Text))
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> (Data.Text.Internal.Text, Data.Text.Internal.Text))
                             errs
                        Yesod.Form.Types.FormSuccess a202
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> (Data.Text.Internal.Text, Data.Text.Internal.Text))
                             (GHC.Tuple.(,)
                                @ Data.Text.Internal.Text
                                @ Data.Text.Internal.Text
                                a202) },
                      x30,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> (Data.Text.Internal.Text, Data.Text.Internal.Text)),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> (Data.Text.Internal.Text, Data.Text.Internal.Text)),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
86ec8abf704d984d018275f96cd63876
  formLogin_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formLogin10
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
54741c3df35400c9199340f0640f1bd4
  formPessoa :: Foundation.Form Foundation.Pessoas
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formPessoa1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Pessoas>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
c8a7391d27ce53195941e1c19fa920a0
  formPessoa1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Pessoas,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Pessoas
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formPessoa2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Pessoas>_N))
                   eta2
                   eta3
                   eta4) -}
5cc8aeef6089fa6ba1e5a94acbc8e8f6
  formPessoa10 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa11
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
4b56c5934232bb4f994ddb3eda60c8e0
  formPessoa11 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa12
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
0c2ee6bafca48730d460421ad9e60a0d
  formPessoa12 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa13) -}
f5c76993e92dadd3247576fbed869d8a
  formPessoa13 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formPessoa14
                      0
                      ipv })) -}
7afa2a5e161ec14c807a6443f35f4739
  formPessoa14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "E-mail: "#) -}
e3a07c9e6a7aec31458cd710c3acb1ae
  formPessoa15 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Pessoas)
                   Handlers.formPessoa16
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formEstabelecimento46
                   w4
                   w5
                   w6) -}
ef77ec2485c311067ec0eb1742ed42aa
  formPessoa16 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Pessoas)
                   Handlers.formPessoa17
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formLogin3
                   w4
                   w5
                   w6) -}
029a97b4ddf5ef95afe8ac4552220ac5
  formPessoa17 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Pessoas)
                   Handlers.formPessoa22
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formPessoa18
                   w4
                   w5
                   w6) -}
8bb873e02034af9d0da27f7ce4032784
  formPessoa18 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa19
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
9436a64bc8ea67fe9ce429c83a84b9a5
  formPessoa19 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa20
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
b4c13be5af5eafc4a91207d27e6f95b9
  formPessoa2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Pessoas,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ Foundation.Pessoas
                   Handlers.formPessoa8
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text -> Foundation.Pessoas>_N))
                   Handlers.formPessoa3
                   w4
                   w5
                   w6) -}
cf3e2d0613b2d86b1c96ef854327c8b9
  formPessoa20 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa21) -}
223467dc134cfa35fe820efde52a6aed
  formPessoa21 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formLogin14
                      0
                      ipv })) -}
f467053ffc7738df16374c6c20e401bb
  formPessoa22 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Pessoas)
                   Handlers.formPessoa27
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formPessoa23
                   w4
                   w5
                   w6) -}
ae587a104fe3d87e3d58489aabe1125a
  formPessoa23 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa24
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
fe037950c745dee81fc80c516956fd75
  formPessoa24 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa25
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
e5132f340c9fc7d9be0d71fc779b0dac
  formPessoa25 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa26) -}
8b116957a3e794db902ed4f8e3816229
  formPessoa26 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento62
                      0
                      ipv })) -}
48e84a3336e0ec6b678fbe1011470cee
  formPessoa27 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formPessoa_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x30 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Pessoas)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Pessoas)
                             errs
                        Yesod.Form.Types.FormSuccess a202
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Pessoas)
                             (Foundation.$WPessoas a202) },
                      x30,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Foundation.Pessoas),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Foundation.Pessoas),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
956a35f61ac69f03bfb93e6d4a4225cc
  formPessoa28 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa35
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   Handlers.formPessoa33
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Handlers.formPessoa29) -}
8c35b374a8e45fc8a60592fffcb0040d
  formPessoa29 ::
    [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
  {- Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   Handlers.formPessoa30
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
70160e9cbfc6b07b839ef94c37ca6443
  formPessoa3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
c84b674d72077b348a66be353ef36a57
  formPessoa30 :: (Data.Text.Internal.Text, Data.Text.Internal.Text)
  {- Unfolding: ((Handlers.formPessoa32, Handlers.formPessoa31)) -}
ce630ab27b712e4e440880d6a36f6c70
  formPessoa31 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "11"#) -}
a5a0bad4ac36a7164050d7af69e4bc69
  formPessoa32 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "maxlength"#) -}
f31f84c151ae18dd155eefd26c3aea0e
  formPessoa33 :: GHC.Base.Maybe Data.Text.Internal.Text
  {- Unfolding: (GHC.Base.Just
                   @ Data.Text.Internal.Text
                   Handlers.formPessoa34) -}
d3763d920dd6e961e84e267d842d7a82
  formPessoa34 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "hident2"#) -}
b7636b4b3a8f24c3b620906e96a8f8a3
  formPessoa35 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa36) -}
1987d87179a1886bfbd7e84cc518eac5
  formPessoa36 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formPessoa37) -}
8d6858a2845607d7561f79dc5b5be036
  formPessoa37 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formPessoa38
                   0
                   ipv }) -}
133e4f125ef92538b44015efe0a70743
  formPessoa38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CPF"#) -}
07a7871d2e524a8c54e97976b8ff6011
  formPessoa4 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
a3bbda509cf71bba0b027c1f9619add3
  formPessoa5 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa6) -}
99d269b423e3f590b3b9b112879fc8d0
  formPessoa6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formPessoa7
                      0
                      ipv })) -}
64ce460c4922399902477abca40181dc
  formPessoa7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Celular: "#) -}
ca295d07bfa8c02e9c99bbb3cc8c1e3f
  formPessoa8 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text -> Foundation.Pessoas)
                   Handlers.formPessoa9
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text -> Foundation.Pessoas>_N))
                   Handlers.formEstabelecimento34
                   w4
                   w5
                   w6) -}
60100906568545b0d415e67ed6bfc915
  formPessoa9 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text -> Foundation.Pessoas)
                   Handlers.formPessoa15
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formPessoa10
                   w4
                   w5
                   w6) -}
754f6ce14038de781bbee83990b1a643
  formPessoa_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa28
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
c32b6b7262ac527ae14cf168768c7c53
  formSubcategoria :: Foundation.Form Foundation.Sub_categ_estab
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formSubcategoria1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Sub_categ_estab>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
af3f5efe23ac3299ebee9d69e4b19058
  formSubcategoria1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Sub_categ_estab
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formSubcategoria2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Sub_categ_estab>_N))
                   eta2
                   eta3
                   eta4) -}
15c004beb29a8c1d6a9f27fa754c201c
  formSubcategoria10 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formSubcategoria11) -}
1d46eeca0a7c329d883b688ef71e3974
  formSubcategoria11 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formSubcategoria12) -}
3100cb228da7f263cae7a3347f4fdff5
  formSubcategoria12 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formSubcategoria13
                   0
                   ipv }) -}
4bb908e254e9cd18e8c5af83802e3329
  formSubcategoria13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Categoria"#) -}
487d2928fb7fb63495b591a124b346c9
  formSubcategoria2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ Foundation.Sub_categ_estab
                   Handlers.formSubcategoria8
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text -> Foundation.Sub_categ_estab>_N))
                   Handlers.formSubcategoria3
                   w4
                   w5
                   w6) -}
3de1bec6e259455968f6277a1a95d0c3
  formSubcategoria3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formSubcategoria4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
945a9f8f723eb8a704f7c3774443761c
  formSubcategoria4 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formSubcategoria5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
2a1be5a62f4c7b9dbfd1c9163ad36830
  formSubcategoria5 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formSubcategoria6) -}
39131ea8947cdaad0036a04f296c431b
  formSubcategoria6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formSubcategoria7
                      0
                      ipv })) -}
a35553aa7bcbec7b48500f3c617914c9
  formSubcategoria7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Subcategoria: "#) -}
b54db847159e27a5bfff325fff006477
  formSubcategoria8 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text -> Foundation.Sub_categ_estab),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formSubcategoria_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x30 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text -> Foundation.Sub_categ_estab)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text -> Foundation.Sub_categ_estab)
                             errs
                        Yesod.Form.Types.FormSuccess a202
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text -> Foundation.Sub_categ_estab)
                             (Foundation.$WSub_categ_estab a202) },
                      x30,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text -> Foundation.Sub_categ_estab),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text -> Foundation.Sub_categ_estab),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
088eb336ea1fafa05ed4f0bc40bab79b
  formSubcategoria9 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formSubcategoria10
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
1e7d9e9ad3424c952783de45048493a1
  formSubcategoria_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formSubcategoria9
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
6ac5ecd7018925a274e40d302e24bdca
  getAboutR ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getAboutR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))) -}
0197c038bac8d34149c9e735ac2810e6
  getAboutR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAboutR13
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getAboutR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
824fddf98a09541f2c09da0a9c21bd24
  getAboutR10 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getAboutR11
                   w4) -}
6fb9f4848da01f5955fdccd2e16241fd
  getAboutR11 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a202 :: Data.Text.Internal.Text
                   = urender
                       Foundation.HomeR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a203 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a202
                 } in
                 let {
                   x30 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a203
                 } in
                 let {
                   a204 :: Yesod.Core.Types.RY Foundation.Balada
                           -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x30
                 } in
                 let {
                   a205 :: Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a204
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl250 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a205
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl250 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
0a6299403210a5fb4dcd570e33e01734
  getAboutR12 ::
    Yesod.Core.Types.WidgetT
      Foundation.Balada
      GHC.Types.IO
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))
       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
       -> Data.Text.Internal.Text)
  {- Unfolding: (Yesod.Core.Handler.getUrlRenderParams
                   @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                   Handlers.$s$fMonadHandlerWidgetT) -}
5937ad5ffdabe57cbd1cc490e3afed39
  getAboutR13 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getAboutR_x1)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
4f34cf9ef1ca0dc9dc309c094bfa0415
  getAboutR14 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getAboutR15) -}
af1ab0de8bd26276ff35966d10018a50
  getAboutR15 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getAboutR16) -}
7a620df5bf232048837a0b67d230e008
  getAboutR16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "Essa pagina foi criada para acelerar o processo de decidir roles!!!\n\
                   \<a href=\""#) -}
069a974e73a72e30dc0cca8073e4e964
  getAboutR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAboutR10
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getAboutR3
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Balada>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
e07d14c736e356f56aae1c7633a74660
  getAboutR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getAboutR4 #)) -}
e5501d6c4d6c7d0d91cb370745efd2e1
  getAboutR4 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getAboutR5
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
afc20be52d0a98bce36026f137759626
  getAboutR5 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getAboutR6
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
06b5fff151b90c6bcebc38e6e8e0a322
  getAboutR6 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getAboutR_x) -}
264f72f9a42b0d30e98e823f8c1f5d1c
  getAboutR7 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getAboutR8) -}
c454ca21d6afe13f939126a8d1b92150
  getAboutR8 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getAboutR9) -}
94e369e1e33e3db808fc8a2e54ff6ce2
  getAboutR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\">Back Home</a>\n"#) -}
937f88c759e9a4d0c55a03aee11b63ba
  getAboutR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAboutR7) -}
7ddd34ce6fb445b980c0d123ea8c68a8
  getAboutR_x1 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAboutR14) -}
89f247f7e72ebfe4bdfbe8c86c7b79d2
  getAdminR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getAdminR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))) -}
a27abb7852b913f2205ca445034125e4
  getAdminR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR57
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getAdminR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
56a6d6512cbf22351b1be20ed133daaa
  getAdminR10 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR29
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getAdminR11
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
b8c095413ba07bcaa85b3fa65ad9aceb
  getAdminR11 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR27
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getAdminR12
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
7877ba80c9a1fd294391061f015100f4
  getAdminR12 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR23
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getAdminR13
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
8d98d0330ed9c01814505ae92485d05d
  getAdminR13 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR21
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getAdminR14
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Balada>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
c4e2624c8aec943284b841ce3534cb6a
  getAdminR14 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getAdminR15 #)) -}
7e46267f610c0c5ec24aa61f0461f126
  getAdminR15 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getAdminR16
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
388745aa6fa3a1166602936125192ac1
  getAdminR16 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getAdminR17
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
946d10d5ed0b446ee3bb7737a6dc8745
  getAdminR17 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getAdminR_x) -}
f523433cbb3ef174bf57704f738bd284
  getAdminR18 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getAdminR19) -}
347ed6ebb1bb534dccfbf31cb18723e9
  getAdminR19 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getAdminR20) -}
b02f67ba7c41d1cb45a566d171a36916
  getAdminR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR53
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getAdminR3
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   (case eta of wild1 { Yesod.Core.Types.HandlerData ds1 ds2 dt ds3 dt1 ->
                    (Yesod.Core.Types.HandlerData
                       @ Foundation.Balada
                       @ ()
                       ds1
                       ds2
                       dt
                       (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                          @ Foundation.Balada)
                       dt1)
                      `cast`
                    (Yesod.Core.Types.HandlerData
                       <Foundation.Balada>_N
                       (Sub (Sym (Yesod.Core.Types.TFCo:R:MonadRouteIO[0]))))_R })) -}
cb25784b42c9eb747519c45a6d682dda
  getAdminR20 :: Data.Text.Internal.Text
0d9c6c5039fb286532cb0fdb3ca65e41
  getAdminR21 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getAdminR22
                   w4) -}
284b7f5ee38b1dd3dfce997f6e425a00
  getAdminR22 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a202 :: Data.Text.Internal.Text
                   = urender
                       Foundation.ListaestabsR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a203 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a202
                 } in
                 let {
                   x30 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a203
                 } in
                 let {
                   a204 :: Yesod.Core.Types.RY Foundation.Balada
                           -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x30
                 } in
                 let {
                   a205 :: Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a204
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl250 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a205
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl250 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
045c129fbb20709d977ddb909779cf5a
  getAdminR23 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getAdminR_x1)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
c6e5352f0def87ac98e71e9c45b29b2e
  getAdminR24 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getAdminR25) -}
f88b956f57a08f82f8f2b9d438603bea
  getAdminR25 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getAdminR26) -}
d58f221a2d412011243ae8fed450080c
  getAdminR26 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "><span>Cadastro de pre\\195\\167os</a></li></li>\n\
                   \<li><a href="#) -}
0d22a81eead5061cddadc6f789d45c8f
  getAdminR27 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getAdminR28
                   w4) -}
cfd09d572614c16cf7f0c07d3a5d3e8b
  getAdminR28 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a202 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadfaixaprecoR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a203 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a202
                 } in
                 let {
                   x30 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a203
                 } in
                 let {
                   a204 :: Yesod.Core.Types.RY Foundation.Balada
                           -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x30
                 } in
                 let {
                   a205 :: Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a204
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl250 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a205
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl250 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
e3ed3e4896ebf2a1ed05f1fa95d1212c
  getAdminR29 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getAdminR_x2)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
1d26eb44e1be69ea33098fe698e52c16
  getAdminR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR51
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getAdminR4
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
a3b8a31347c8578c993c693e16209e91
  getAdminR30 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getAdminR31) -}
9026514cd124d2bad114913d97696b13
  getAdminR31 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getAdminR32) -}
e852337605bf11f9748689aa905c5c89
  getAdminR32 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "><span>Cadastro SubCategoria</a></li></li>\n\
                   \<li><a href="#) -}
0aa9d966bd433d0eb46fc559d6c5d05c
  getAdminR33 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getAdminR34
                   w4) -}
6fa8ed664073d5d0afd3dc71e106bdb4
  getAdminR34 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a202 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadsubcategR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a203 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a202
                 } in
                 let {
                   x30 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a203
                 } in
                 let {
                   a204 :: Yesod.Core.Types.RY Foundation.Balada
                           -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x30
                 } in
                 let {
                   a205 :: Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a204
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl250 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a205
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl250 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
030c411e5de9f3964befbbead9022d51
  getAdminR35 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getAdminR_x3)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
495ab9b3b783370f1e5f61977d25a37d
  getAdminR36 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getAdminR37) -}
0d5e5a4f931d646ecc1654a289d73611
  getAdminR37 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getAdminR38) -}
0d7dbeb30248f751a5ad479b880b820d
  getAdminR38 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "><span>Cadastro categoria</a></li></li>\n\
                   \<li><a href="#) -}
23cf261188d966ba7256c0c14f0de55f
  getAdminR39 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getAdminR40
                   w4) -}
38d9b53b43b0ce25edc3cc3d42a0fa72
  getAdminR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR47
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getAdminR5
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
9bd8d7d3ecb27089449cca4c1883c816
  getAdminR40 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a202 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadcategoriaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a203 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a202
                 } in
                 let {
                   x30 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a203
                 } in
                 let {
                   a204 :: Yesod.Core.Types.RY Foundation.Balada
                           -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x30
                 } in
                 let {
                   a205 :: Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a204
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl250 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a205
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl250 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
0b19883221d14229712b5201abbea24d
  getAdminR41 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getAdminR_x4)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
5cc0a0373a86f4f312eb56a4c44704f5
  getAdminR42 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getAdminR43) -}
06d39890c8e5f07f484798712c6d63fa
  getAdminR43 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getAdminR44) -}
7a48513fc7ab8b55b57a6c5b51652ee8
  getAdminR44 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "><span>Cadastro estabelecimento</a></li></li>\n\
                   \<li><a href="#) -}
a12066588656ab7274b97e2ce5be327f
  getAdminR45 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getAdminR46
                   w4) -}
7d813bd900a01e46881fa39324418206
  getAdminR46 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a202 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadestabR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a203 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a202
                 } in
                 let {
                   x30 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a203
                 } in
                 let {
                   a204 :: Yesod.Core.Types.RY Foundation.Balada
                           -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x30
                 } in
                 let {
                   a205 :: Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a204
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl250 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a205
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl250 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
9eba88686234da602e502f486bad818c
  getAdminR47 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getAdminR_x5)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
9b1d387e25c6d6004d931434d8107736
  getAdminR48 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getAdminR49) -}
203167d40e9143a020d834ca01065930
  getAdminR49 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getAdminR50) -}
de956385d4c841e80c97912b5f5e66b5
  getAdminR5 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR45
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getAdminR6
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
131445805af533e359a57ee0685249d1
  getAdminR50 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "><span>Logout</a></li></li>\n\
                   \</div>\n\
                   \</div>\n\
                   \</div>\n\
                   \<div class=\"vernav clearfix\" id=\"mainnav\"><ul class=\"clearfix\"><li><a href="#) -}
4735f5d7b52ac0e47f1a39e0f8dc39c1
  getAdminR51 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getAdminR52
                   w4) -}
eb7d3915e1920f8b9551e2669909e2d9
  getAdminR52 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a202 :: Data.Text.Internal.Text
                   = urender
                       Foundation.LogoutR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a203 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a202
                 } in
                 let {
                   x30 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a203
                 } in
                 let {
                   a204 :: Yesod.Core.Types.RY Foundation.Balada
                           -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x30
                 } in
                 let {
                   a205 :: Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a204
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl250 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a205
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl250 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
80703e0d84ba1a25e3a3816fbd8e6dcc
  getAdminR53 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getAdminR_x6)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
d48684410896fde67f72379b8bc6e72a
  getAdminR54 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getAdminR55) -}
7bf395a76ef0888395b49f3f86d53f50
  getAdminR55 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getAdminR56) -}
89d7fdad04cf9c5c6267f615a0215b56
  getAdminR56 :: Data.Text.Internal.Text
c0fb1f854403fa2e2ba5c24bee34e1b3
  getAdminR57 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Balada GHC.Types.IO))>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Balada GHC.Types.IO)))>_R))
                       (GHC.Types.:
                          @ (Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                          (Yesod.Core.Types.Stylesheet
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))
                             (Yesod.Core.Types.Local
                                @ (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))
                                (Foundation.StaticR
                                   Foundation.style_css1
                                     `cast`
                                   (Sub (Sym (Yesod.Static.TFCo:R:RouteStatic[0]))))
                                  `cast`
                                (Trans
                                     (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                                     (Yesod.Routes.Class.Route
                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R))
                             (GHC.Types.[]
                                @ (Data.Text.Internal.Text, Data.Text.Internal.Text))))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Balada GHC.Types.IO)))>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Balada GHC.Types.IO))>_R))) #)) -}
00e2dc3f8c4df262a0cf3aef99549d4d
  getAdminR6 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR41
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getAdminR7
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
7637f2277d141705a22dd29890d966cc
  getAdminR7 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR39
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getAdminR8
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
48af79ef0b10d857bdfdde64b1fd441a
  getAdminR8 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR35
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getAdminR9
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
820db88cec660b688be4385d1468d038
  getAdminR9 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR33
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getAdminR10
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
0856ddbbccce97f6351181f1e54be28a
  getAdminR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAdminR18) -}
0dbbedb4a7394027b4e8c5c75e0205e8
  getAdminR_x1 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAdminR24) -}
cd54e4d15cebf55a26d1a5860d1a7a2d
  getAdminR_x2 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAdminR30) -}
3f6ca8b49cc17c90b0ac7fd7425ec094
  getAdminR_x3 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAdminR36) -}
e6c447dfe657e9a83d6d5b8f13adc203
  getAdminR_x4 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAdminR42) -}
657912958bbdd28da7709a221f98842d
  getAdminR_x5 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAdminR48) -}
b083d6aa84be6daadc46cfbb587cb238
  getAdminR_x6 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAdminR54) -}
2f6bcf8e562deadb434816e822c3ea8c
  getCadcategoriaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadcategoriaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
6e0eac27328aa5977e3b35a85da2d6c9
  getCadcategoriaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U> -}
9720c52be8b0d5db6b2854fdbaed1362
  getCaddiaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCaddiaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
c6b2935929e275ed3dc951d578e41add
  getCaddiaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U> -}
3ad772ccd7e5590ff9380c944d90ee81
  getCadestabR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadestabR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
0417ff359a57ad0028c2ae0b87eba39d
  getCadestabR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U> -}
c8ad4f5ad401a8373506657a8726ea1f
  getCadfaixaprecoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadfaixaprecoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
ae9ce7d8b99575f33cad2bef4e77d041
  getCadfaixaprecoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U> -}
c0b084b7b0858ea77ab9450fadd9858f
  getCadpessoaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadpessoaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
b64415289ad4ac67fc02e2e3b661784c
  getCadpessoaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U> -}
079f5a5f80e5c818ea3afc7bddd9bece
  getCadsubcategR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadsubcategR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
4d28042a7bd6bd6d68e29a19b72e91f6
  getCadsubcategR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U> -}
d7f4070115220d8db9e06bfc239c12c4
  getErroR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getErroR1
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
071b6779161369fa75539a3f6afeb4ff
  getErroR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2,
     Unfolding: (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta, Handlers.getErroR2 #)) -}
4ffe85a5ee9eb4e5e42ed813905fc2d9
  getErroR2 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getErroR3
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
a5a814ba996de697fe513eccebc19ffa
  getErroR3 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getErroR4
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
3888d24f50b1a477e32002fb016841c6
  getErroR4 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getErroR_x) -}
05dcf41ce91cf1975d47a89acf65ede5
  getErroR5 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getErroR6) -}
b97ccf9274ea531d10d76a06911be084
  getErroR6 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getErroR7) -}
fbfad99899cc28fe64b4d6ab02349341
  getErroR7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> Erro de cadastro</h1>\n"#) -}
9814b330025e65885d1bdaf4a784eab4
  getErroR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getErroR5) -}
01c6699cc494a842bef4a9b7b28eba55
  getHomeR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getHomeR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))) -}
2a32c70e5cb3c186657bfeb3d7ff92a8
  getHomeR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR57
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
64db5b84cd4fedb3157d8d4767597cf3
  getHomeR10 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHomeR11) -}
c195ca1209cab7e65fc4c4256057a5dc
  getHomeR11 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR12) -}
d99b103876c612e312b3d04f5a4bc282
  getHomeR12 :: Data.Text.Internal.Text
03972f4b7164158b5a00e3ed35e7cfee
  getHomeR13 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR14
                   w4) -}
389a92a13b32a5caa8ad6470e3d8271a
  getHomeR14 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a202 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadpessoaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a203 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a202
                 } in
                 let {
                   x30 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a203
                 } in
                 let {
                   a204 :: Yesod.Core.Types.RY Foundation.Balada
                           -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x30
                 } in
                 let {
                   a205 :: Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a204
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl250 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a205
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl250 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
f49c1ebdf09c645305d86a8b85232659
  getHomeR15 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x1)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
c9b0bd6e736c4f328031b04d6dac4652
  getHomeR16 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getHomeR17) -}
1507e51dee8f63c441b075a1d986decd
  getHomeR17 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR18) -}
7f4ce48abea17b4518a6d7eabb9c45ff
  getHomeR18 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "><span>LOGIN</a></li></li>\n\
                   \<li><a href="#) -}
beab4ad46acd8f24cc52b3cdc8d92936
  getHomeR19 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR20
                   w4) -}
be1b36bcd46507d486e86538696242f9
  getHomeR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR21
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR3
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   (case eta of wild1 { Yesod.Core.Types.HandlerData ds1 ds2 dt ds3 dt1 ->
                    (Yesod.Core.Types.HandlerData
                       @ Foundation.Balada
                       @ ()
                       ds1
                       ds2
                       dt
                       (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                          @ Foundation.Balada)
                       dt1)
                      `cast`
                    (Yesod.Core.Types.HandlerData
                       <Foundation.Balada>_N
                       (Sub (Sym (Yesod.Core.Types.TFCo:R:MonadRouteIO[0]))))_R })) -}
b97dac25289e49efbd22c53ca0d6947a
  getHomeR20 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a202 :: Data.Text.Internal.Text
                   = urender
                       Foundation.LoginR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a203 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a202
                 } in
                 let {
                   x30 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a203
                 } in
                 let {
                   a204 :: Yesod.Core.Types.RY Foundation.Balada
                           -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x30
                 } in
                 let {
                   a205 :: Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a204
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl250 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a205
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl250 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
0e3fb46249e2f334eafeaa736345684e
  getHomeR21 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x2)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
81343a68b83ef0dbc830a6170e8f103e
  getHomeR22 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getHomeR23) -}
222384b4285d298300a151890a76a438
  getHomeR23 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR24) -}
8d29ab3bbb87f8773070b55f2f9a741c
  getHomeR24 :: Data.Text.Internal.Text
de8525115397a7167f2a68ce332a4699
  getHomeR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR19
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR4
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
e106c2f1e98cbefee713b92a89c13c52
  getHomeR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR15
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR5
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
43de4d00ed775075cca2bea33769959c
  getHomeR5 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR13
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR6
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Balada>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
aa6f4ae5d4db68775587a180b772d89c
  getHomeR6 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getHomeR7 #)) -}
3e24b67f136bc72eb459991217f7893e
  getHomeR7 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getHomeR8
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
86ac06e5f8aa5dbb526308c8f8f60d1e
  getHomeR8 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getHomeR9
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
880a018af54923c6d971d51b1dde455e
  getHomeR9 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getHomeR_x) -}
150bcebde2ac7fdf9f3e480a1e2b2398
  getHomeR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR10) -}
5731d74ad31642dd1a5a5a32b1e2a853
  getHomeR_x1 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR16) -}
1f9651d751f45f31bca6860bf6c919c3
  getHomeR_x2 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR22) -}
e105f9d2a1db3c614af0531c7e077e36
  getListaestabsR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getListaestabsR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
461ed7c2ece43bf5f00439ac0f9f7a83
  getListaestabsR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U> -}
dbdc8d72e558246cee3de4ee3548c8db
  getLoginR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getLoginR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
c3817136e0a6d8ce803c28a20ec308e2
  getLoginR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U> -}
383d6825959eb70b8dd0cf920ab7048c
  getLogoutR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <S(SSLSL),1*U(U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getLogoutR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
ffb7492753304af3e440658f74205fe8
  getLogoutR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <S(SSLSL),1*U(U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case eta
                        `cast`
                      (Yesod.Core.Types.HandlerData
                         (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                   <Foundation.Balada>_N <GHC.Types.IO>_N))
                         (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R of wild { Yesod.Core.Types.HandlerData ds1 ds2 dt ds3 dt1 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Yesod.Core.Types.GHState
                        dt
                        eta2 of ds4 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Yesod.Core.Types.GHState
                        dt
                        (Yesod.Core.Handler.deleteSession1 Handlers.getLogoutR18 ipv1)
                        ipv of s2# { DEFAULT ->
                 (Handlers.getLogoutR_k
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    wild
                      `cast`
                    (Yesod.Core.Types.HandlerData
                       (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N)
                       (Sub (Sym (Yesod.Core.Types.TFCo:R:MonadRouteIO[0]))))_R)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   s2# } } }) -}
4d04dd19587c48486fc9d8774ede1f1c
  getLogoutR10 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getLogoutR_x) -}
45c50bd2b2dc1a1d311728861fd8af07
  getLogoutR11 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getLogoutR12) -}
96685c7139b8f4c9ba2ac6f2d5828fa1
  getLogoutR12 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getLogoutR13) -}
be9f8800a2ceae134390956773ab3582
  getLogoutR13 :: Data.Text.Internal.Text
fc76bef897064d6cfb95a8059f87da00
  getLogoutR14 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getLogoutR15
                   w4) -}
c3006ef7c50265c188b959495fed9a15
  getLogoutR15 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a202 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadpessoaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a203 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a202
                 } in
                 let {
                   x30 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a203
                 } in
                 let {
                   a204 :: Yesod.Core.Types.RY Foundation.Balada
                           -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x30
                 } in
                 let {
                   a205 :: Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a204
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl250 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a205
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl250 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
492eddb3e03d2c063f9370f07dc1c670
  getLogoutR16 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getLogoutR17
                   w4) -}
82e737a2d2f319ac6b2903427d358ff6
  getLogoutR17 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a202 :: Data.Text.Internal.Text
                   = urender
                       Foundation.LoginR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a203 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a202
                 } in
                 let {
                   x30 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a203
                 } in
                 let {
                   a204 :: Yesod.Core.Types.RY Foundation.Balada
                           -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x30
                 } in
                 let {
                   a205 :: Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a204
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl250 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a205
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl250 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
7ed6f72612354bc170492e49572abacc
  getLogoutR18 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "_ID"#) -}
f3f70d6aff787f66cd423d310520d63e
  getLogoutR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAdminR57
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getLogoutR3
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
62cc587cab936de1838d1ea2da77bede
  getLogoutR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR21
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getLogoutR4
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   (case eta of wild1 { Yesod.Core.Types.HandlerData ds1 ds2 dt ds3 dt1 ->
                    (Yesod.Core.Types.HandlerData
                       @ Foundation.Balada
                       @ ()
                       ds1
                       ds2
                       dt
                       (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                          @ Foundation.Balada)
                       dt1)
                      `cast`
                    (Yesod.Core.Types.HandlerData
                       <Foundation.Balada>_N
                       (Sub (Sym (Yesod.Core.Types.TFCo:R:MonadRouteIO[0]))))_R })) -}
125d0fac377b93fe54aea43159d91ce8
  getLogoutR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getLogoutR16
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getLogoutR5
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
a760e7539c26f17ae4383087703eda9b
  getLogoutR5 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR15
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getLogoutR6
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
d9796861e891cc87cc50a7dab6ca368b
  getLogoutR6 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getLogoutR14
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getLogoutR7
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Balada>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
9ee109a7d6c23a213bc6b7a17aadd244
  getLogoutR7 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getLogoutR8 #)) -}
81939f51d7116b49bb7b857811608821
  getLogoutR8 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getLogoutR9
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
0d6d5ddb6c6d76680270420341ae81a5
  getLogoutR9 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getLogoutR10
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
42c379d5f67cf56d17b5cd65c2ffc0e7
  getLogoutR_k ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getLogoutR2
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))) -}
303f702e6c367adf680dfc66d57b7753
  getLogoutR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getLogoutR11) -}
4a228eaf43ad4023ae6da70c4cf0860f
  getPerfilR ::
    Foundation.PessoasId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U> -}
a007cc8b1af268296506429ee17c0c9f
  listaClassificacao ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Classificacao_estab))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Classificacao_estab]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Classificacao_estab]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.listaClassificacao2 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Classificacao_estab]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Classificacao_estab]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Classificacao_estab]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Classificacao_estab)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs9 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Classificacao_estab)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key
                              Foundation.Classificacao_estab)
                         Handlers.listaClassificacao1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Classificacao_estab)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Classificacao_estab)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Classificacao_estab)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Classificacao_estab)>_N)))) -}
7bac6bbadc82c303f196e70a832d945e
  listaClassificacao1 ::
    Database.Persist.Class.PersistEntity.Entity
      Foundation.Classificacao_estab
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key
          Foundation.Classificacao_estab)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Classificacao_estab ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Classificacao_estab ds4 ds5 ->
                  ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Classificacao_estab
                    ent)) -}
4a292ebd69c3757852ed4904bcceff2e
  listaClassificacao2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Classificacao_estab]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Classificacao_estab)))
                   = (Handlers.listaClassificacao_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Classificacao_estab))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Classificacao_estab))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Classificacao_estab))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Classificacao_estab))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Classificacao_estab]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Classificacao_estab)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Classificacao_estab)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Classificacao_estab]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Classificacao_estab]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Classificacao_estab]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Classificacao_estab]>_N)))) -}
c819531d825228b81192a76a6b133a99
  listaClassificacao3 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Classificacao_estab]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Classificacao_estab)
                   Handlers.listaClassificacao4
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Classificacao_estab))) -}
50320643e7d37e06696ba7819d8a0115
  listaClassificacao4 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Classificacao_estab
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Classificacao_estab
                   @ Data.Text.Internal.Text
                   Handlers.listaClassificacao5
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldClassificacao_estabtyp[0])) <Data.Text.Internal.Text>_N)) -}
4c22a6ecaaac8e30884c71d14983844e
  listaClassificacao5 ::
    Foundation.R:EntityFieldClassificacao_estabtyp
      Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Classificacao_estabNome_classificacao
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
588d7ff828f076cbf30498032a596099
  listaClassificacao6 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Classificacao_estab]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Classificacao_estab]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Classificacao_estab)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Classificacao_estab
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityClassificacao_estab
                   (Handlers.categs15 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
9a5dcde20db0e02ed71cf01c77454411
  listaClassificacao_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Classificacao_estab)))
  {- Unfolding: (\ @ site ->
                 Handlers.listaClassificacao6
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Classificacao_estab))
                   Handlers.listaClassificacao3) -}
a1d7fd496122ab1fbd31391860d05cea
  listaDia ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity Foundation.Dia_evento]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Dia_evento]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.listaDia2 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Dia_evento]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Dia_evento]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Dia_evento]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs9 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Dia_evento)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
                         Handlers.listaDia1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Dia_evento)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Dia_evento)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Dia_evento)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Dia_evento)>_N)))) -}
aa3ce30ba7ad42b7e1e740048a4192f4
  listaDia1 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Dia_evento
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Dia_evento ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Dia_evento ds4 -> ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Dia_evento
                    ent)) -}
c6acb2d036f98fbed999d0ee70ec1a64
  listaDia2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Dia_evento]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Dia_evento)))
                   = (Handlers.listaDia_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Dia_evento))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Dia_evento))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Dia_evento))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Dia_evento))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Dia_evento]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Dia_evento)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Dia_evento)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Dia_evento]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Dia_evento]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Dia_evento]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Dia_evento]>_N)))) -}
44790f6527f58c367f35731bde71621b
  listaDia3 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Dia_evento]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Dia_evento)
                   Handlers.listaDia4
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Dia_evento))) -}
1f6ccd8f05f9953f12e568e65523758a
  listaDia4 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Dia_evento
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Dia_evento
                   @ Data.Text.Internal.Text
                   Handlers.listaDia5
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldDia_eventotyp[0])) <Data.Text.Internal.Text>_N)) -}
8dde984c9619412ccd153952470d35d8
  listaDia5 ::
    Foundation.R:EntityFieldDia_eventotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Dia_eventoDc_dia
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
493fba9facc4c7f33c9273d0adb21ede
  listaDia6 ::
    [Database.Persist.Class.PersistEntity.Filter Foundation.Dia_evento]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Dia_evento]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Dia_evento)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Dia_evento
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityDia_evento
                   (Handlers.categs15 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
51875e59a0e2852ddcc782e34ee1da5f
  listaDia_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Dia_evento)))
  {- Unfolding: (\ @ site ->
                 Handlers.listaDia6
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Dia_evento))
                   Handlers.listaDia3) -}
72785fb97a1da1556a83951790156524
  listaFaixapreco ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Faixa_preco]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Faixa_preco]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.formEstabelecimento12 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Faixa_preco]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Faixa_preco]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Faixa_preco]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs9 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Faixa_preco)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                         Handlers.formEstabelecimento10
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Faixa_preco)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Faixa_preco)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Faixa_preco)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Faixa_preco)>_N)))) -}
3e582dbca39f60d1be0f0dbad1cccbc6
  listaSubcategoria ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Sub_categ_estab))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Sub_categ_estab]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Sub_categ_estab]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.listaSubcategoria2 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Sub_categ_estab]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Sub_categ_estab]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Sub_categ_estab]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Sub_categ_estab)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs9 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Sub_categ_estab)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key
                              Foundation.Sub_categ_estab)
                         Handlers.listaSubcategoria1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Sub_categ_estab)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Sub_categ_estab)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Sub_categ_estab)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Sub_categ_estab)>_N)))) -}
632e0ea67bdc4d9da933908613e08959
  listaSubcategoria1 ::
    Database.Persist.Class.PersistEntity.Entity
      Foundation.Sub_categ_estab
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key
          Foundation.Sub_categ_estab)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Sub_categ_estab ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Sub_categ_estab ds4 ds5 -> ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Sub_categ_estab
                    ent)) -}
d4afb7b36a3530e85402f8e2310b38f4
  listaSubcategoria2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Sub_categ_estab]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Sub_categ_estab)))
                   = (Handlers.listaSubcategoria_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Sub_categ_estab))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Sub_categ_estab))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Sub_categ_estab))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Sub_categ_estab))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Sub_categ_estab]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Sub_categ_estab)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Sub_categ_estab)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Sub_categ_estab]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Sub_categ_estab]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Sub_categ_estab]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Sub_categ_estab]>_N)))) -}
4dacf2786ffc1b5c4c89f2721b229873
  listaSubcategoria3 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Sub_categ_estab]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Sub_categ_estab)
                   Handlers.listaSubcategoria4
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Sub_categ_estab))) -}
4f0a2628bf605b6b4944b6185bb88b1b
  listaSubcategoria4 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Sub_categ_estab
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Sub_categ_estab
                   @ Data.Text.Internal.Text
                   Handlers.listaSubcategoria5
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldSub_categ_estabtyp[0])) <Data.Text.Internal.Text>_N)) -}
d61e2a8fcbe7fe4ddafb8ae2b76c8c86
  listaSubcategoria5 ::
    Foundation.R:EntityFieldSub_categ_estabtyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Sub_categ_estabNome_sub_categ
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
325b0a99e5e85173c84b56fea09757dc
  listaSubcategoria6 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Sub_categ_estab]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Sub_categ_estab]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Sub_categ_estab)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Sub_categ_estab
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntitySub_categ_estab
                   (Handlers.categs15 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
d74fb5c0223334347a2b64a943475182
  listaSubcategoria_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Sub_categ_estab)))
  {- Unfolding: (\ @ site ->
                 Handlers.listaSubcategoria6
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Sub_categ_estab))
                   Handlers.listaSubcategoria3) -}
510a32f1b849dec52970a775bb7720b6
  postCadcategoriaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadcategoriaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
2d1f55ee4fb0cac70d50b58cd2c41e1d
  postCadcategoriaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadcategoriaR5
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Categoria_estab,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Categoria_estab,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess categoria
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Categoria_estab)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key
                                     Foundation.Categoria_estab)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadcategoriaR3 categoria))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCadcategoriaR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
227a6518d9f2020039844a2aa64cccbb
  postCadcategoriaR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadcategoriaR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
443038f8f9ade0dcc16294641e8dde73
  postCadcategoriaR3 ::
    Foundation.Categoria_estab
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Categoria_estab)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Categoria_estab
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityCategoria_estab) -}
b9659641ec9dbda3317617b617579211
  postCadcategoriaR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.ErroR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
d1d08a1b778cb40aff6fb9a4e2450c5f
  postCadcategoriaR5 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Categoria_estab,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Categoria_estab
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Categoria_estab>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
82423106856ab8d0dce6246102e61cab
  postCaddiaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCaddiaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
9bad0f5095a2ef183bcab083719e4822
  postCaddiaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCaddiaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Dia_evento,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Dia_evento,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess dia
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCaddiaR3 dia))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCaddiaR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
ab418e9405d795894cd7cf45cd37a502
  postCaddiaR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadfaixaprecoR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
67921fff27e5cc4a4958d8bb9c3ce1b7
  postCaddiaR3 ::
    Foundation.Dia_evento
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Dia_evento
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityDia_evento) -}
abea233f76bd36f10dc5d711d6760e5c
  postCaddiaR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Dia_evento,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Dia_evento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formDia1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Dia_evento>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
26642041ac577eb83e0ae3e8c2e6173f
  postCadestabR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadestabR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
55039a15ec5b3a900d9cdb871ebfb06c
  postCadestabR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadestabR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Estabelecimento,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Estabelecimento,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess estab
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Estabelecimento)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key
                                     Foundation.Estabelecimento)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadestabR3 estab))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCadestabR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
7ff9da8fab01a7f087c16013499c09fa
  postCadestabR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadestabR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
4309be832bbd30ff2878b3a853052651
  postCadestabR3 ::
    Foundation.Estabelecimento
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Estabelecimento)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Estabelecimento
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityEstabelecimento) -}
80309c5299c40239663483c3e1bb1467
  postCadestabR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Estabelecimento,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Estabelecimento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formEstabelecimento1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Estabelecimento>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
e3308b7e0346a371c682575ada26b71c
  postCadfaixaprecoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadfaixaprecoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
a72b27909bd52b17bed907e111301c22
  postCadfaixaprecoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadfaixaprecoR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Faixa_preco,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Faixa_preco,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess faixapreco
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadfaixaprecoR2 faixapreco))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCaddiaR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
8320353feeee646311fcefe9b6300c7e
  postCadfaixaprecoR2 ::
    Foundation.Faixa_preco
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Faixa_preco
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityFaixa_preco) -}
730393668cf8c2d3ee15e77b7b696def
  postCadfaixaprecoR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Faixa_preco,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Faixa_preco
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formFaixapreco1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Faixa_preco>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
b17c8eb57909289fe47bf1b7930ca8b6
  postCadpessoaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadpessoaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
2ce27e78c65de210197a74589ca826c0
  postCadpessoaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadpessoaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Pessoas,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Pessoas,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess pessoa
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Pessoas)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key Foundation.Pessoas)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadpessoaR3 pessoa))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCadpessoaR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
94d07090600d5bdb4f45711c5cc2c736
  postCadpessoaR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadpessoaR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
6e2385de288c82ff4e0a38b6d6acdf18
  postCadpessoaR3 ::
    Foundation.Pessoas
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Pessoas)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Pessoas
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityPessoas) -}
9fc3cb194ca2dfae06900dbfef04a4e8
  postCadpessoaR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Pessoas,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Pessoas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formPessoa1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Pessoas>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
32a5d8bd466c7c5940ec575f815c0b2b
  postCadsubcategR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadsubcategR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
21a4fcfd03c1ae1ae4bd15308a0c2b81
  postCadsubcategR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadsubcategR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess subcategoria
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Sub_categ_estab)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key
                                     Foundation.Sub_categ_estab)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadsubcategR3 subcategoria))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCadsubcategR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
bd321e4ce82cccd93c1748d861e87985
  postCadsubcategR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadsubcategR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
4c6e1297fd56898c874c6c68415922c1
  postCadsubcategR3 ::
    Foundation.Sub_categ_estab
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Sub_categ_estab)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Sub_categ_estab
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntitySub_categ_estab) -}
b64858391798fbd20ab8c0fd0b6cad13
  postCadsubcategR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Sub_categ_estab
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formSubcategoria1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Sub_categ_estab>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
1e8826979770dbd24df2d492d203dbf5
  postLoginR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postLoginR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
52613799353b8f150e9e4926ea3bcdba
  postLoginR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U)><L,U> -}
instance Yesod.Core.Class.Dispatch.YesodDispatch [Foundation.Balada]
  = Handlers.$fYesodDispatchBalada
"SPEC/Handlers $fApplicativeWidgetT @ Balada @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                  (Yesod.Core.Types.WidgetT
                                                                                     Foundation.Balada
                                                                                     GHC.Types.IO)
                                                                   $dMonad :: GHC.Base.Monad
                                                                                GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT @ Foundation.Balada
                                        @ GHC.Types.IO
                                        $dFunctor
                                        $dMonad
  = Handlers.$s$fApplicativeWidgetT
"SPEC/Handlers $fApplicativeWidgetT_$c*> @ Balada @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                       (Yesod.Core.Types.WidgetT
                                                                                          Foundation.Balada
                                                                                          GHC.Types.IO)
                                                                        $dMonad :: GHC.Base.Monad
                                                                                     GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c*> @ Foundation.Balada
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
"SPEC/Handlers $fApplicativeWidgetT_$c<* @ Balada @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                       (Yesod.Core.Types.WidgetT
                                                                                          Foundation.Balada
                                                                                          GHC.Types.IO)
                                                                        $dMonad :: GHC.Base.Monad
                                                                                     GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c<* @ Foundation.Balada
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<*
"SPEC/Handlers $fApplicativeWidgetT_$cpure @ Balada @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                         (Yesod.Core.Types.WidgetT
                                                                                            Foundation.Balada
                                                                                            GHC.Types.IO)
                                                                          $dMonad :: GHC.Base.Monad
                                                                                       GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$cpure @ Foundation.Balada
                                               @ GHC.Types.IO
                                               $dFunctor
                                               $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$cpure
"SPEC/Handlers $fMonadBasebWidgetT @ IO @ Balada @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                          GHC.Types.IO
                                                                       $dApplicative1 :: GHC.Base.Applicative
                                                                                           (Yesod.Core.Types.WidgetT
                                                                                              Foundation.Balada
                                                                                              GHC.Types.IO)
                                                                       $dMonad :: GHC.Base.Monad
                                                                                    GHC.Types.IO
                                                                       $dMonad1 :: GHC.Base.Monad
                                                                                     (Yesod.Core.Types.WidgetT
                                                                                        Foundation.Balada
                                                                                        GHC.Types.IO)
                                                                       $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                        GHC.Types.IO
                                                                                        GHC.Types.IO
  Yesod.Core.Types.$fMonadBasebWidgetT @ GHC.Types.IO
                                       @ Foundation.Balada
                                       @ GHC.Types.IO
                                       $dApplicative
                                       $dApplicative1
                                       $dMonad
                                       $dMonad1
                                       $dMonadBase
  = Handlers.$s$fMonadBasebWidgetT
"SPEC/Handlers $fMonadHandlerWidgetT @ Balada @ IO" [ALWAYS] forall $dMonadResource :: Control.Monad.Trans.Resource.Internal.MonadResource
                                                                                         (Yesod.Core.Types.WidgetT
                                                                                            Foundation.Balada
                                                                                            GHC.Types.IO)
                                                                    tup :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                             GHC.Types.IO
  Yesod.Core.Class.Handler.$fMonadHandlerWidgetT @ Foundation.Balada
                                                 @ GHC.Types.IO
                                                 $dMonadResource
                                                 tup
  = Handlers.$s$fMonadHandlerWidgetT
"SPEC/Handlers $fMonadIOWidgetT @ Balada @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                            (Yesod.Core.Types.WidgetT
                                                                               Foundation.Balada
                                                                               GHC.Types.IO)
                                                               $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                              GHC.Types.IO
  Yesod.Core.Types.$fMonadIOWidgetT @ Foundation.Balada
                                    @ GHC.Types.IO
                                    $dMonad
                                    $dMonadIO
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT
"SPEC/Handlers $fMonadResourceWidgetT @ Balada @ IO" [ALWAYS] forall $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                       (Yesod.Core.Types.WidgetT
                                                                                          Foundation.Balada
                                                                                          GHC.Types.IO)
                                                                     $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                    (Yesod.Core.Types.WidgetT
                                                                                       Foundation.Balada
                                                                                       GHC.Types.IO)
                                                                     $dApplicative :: GHC.Base.Applicative
                                                                                        (Yesod.Core.Types.WidgetT
                                                                                           Foundation.Balada
                                                                                           GHC.Types.IO)
                                                                     $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                      GHC.Types.IO
                                                                                      (Yesod.Core.Types.WidgetT
                                                                                         Foundation.Balada
                                                                                         GHC.Types.IO)
                                                                     $dApplicative1 :: GHC.Base.Applicative
                                                                                         GHC.Types.IO
                                                                     $dMonadIO1 :: Control.Monad.IO.Class.MonadIO
                                                                                     GHC.Types.IO
                                                                     $dMonadBase1 :: Control.Monad.Base.MonadBase
                                                                                       GHC.Types.IO
                                                                                       GHC.Types.IO
                                                                     $dMonadThrow1 :: Control.Monad.Catch.MonadThrow
                                                                                        GHC.Types.IO
  Yesod.Core.Types.$fMonadResourceWidgetT @ Foundation.Balada
                                          @ GHC.Types.IO
                                          $dMonadThrow
                                          $dMonadIO
                                          $dApplicative
                                          $dMonadBase
                                          $dApplicative1
                                          $dMonadIO1
                                          $dMonadBase1
                                          $dMonadThrow1
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT
"SPEC/Handlers $fMonadThrowWidgetT @ Balada @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                               (Yesod.Core.Types.WidgetT
                                                                                  Foundation.Balada
                                                                                  GHC.Types.IO)
                                                                  $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                    GHC.Types.IO
  Yesod.Core.Types.$fMonadThrowWidgetT @ Foundation.Balada
                                       @ GHC.Types.IO
                                       $dMonad
                                       $dMonadThrow
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT
"SPEC/Handlers $fMonadWidgetT @ Balada @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                (Yesod.Core.Types.WidgetT
                                                                                   Foundation.Balada
                                                                                   GHC.Types.IO)
                                                             $dMonad :: GHC.Base.Monad GHC.Types.IO
  Yesod.Core.Types.$fMonadWidgetT @ Foundation.Balada
                                  @ GHC.Types.IO
                                  $dApplicative
                                  $dMonad
  = Handlers.$s$fMonadBasebWidgetT_$s$fMonadWidgetT
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

