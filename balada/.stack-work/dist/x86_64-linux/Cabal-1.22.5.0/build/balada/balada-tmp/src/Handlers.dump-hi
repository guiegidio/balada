
==================== FINAL INTERFACE ====================
2016-06-12 20:49:47.955881 UTC

interface main@main:Handlers [orphan module] 7103
  interface hash: 462a58aa226331b7aae12effa2d0bad2
  ABI hash: 3ee10922b4d3c1546c7df14346909bac
  export-list hash: 8b7057444a9a73780c53c1cb378cc947
  orphan hash: b7a76047446f0e1f7a2d51522e46baad
  flag hash: eff5e623cf316ffe3f39252fffb87620
  sig of: Nothing
  used TH splices: True
  where
exports:
  Handlers.categs
  Handlers.estabs
  Handlers.formCategoria
  Handlers.formDia
  Handlers.formEstabelecimento
  Handlers.formFaixapreco
  Handlers.formLogin
  Handlers.formPessoa
  Handlers.formSubcategoria
  Handlers.getAboutR
  Handlers.getAdminR
  Handlers.getCadcategoriaR
  Handlers.getCaddiaR
  Handlers.getCadestabR
  Handlers.getCadfaixaprecoR
  Handlers.getCadpessoaR
  Handlers.getCadsubcategR
  Handlers.getErroR
  Handlers.getHomeR
  Handlers.getLoginR
  Handlers.getLogoutR
  Handlers.getPerfilR
  Handlers.listaClassificacao
  Handlers.listaDia
  Handlers.listaFaixapreco
  Handlers.listaSubcategoria
  Handlers.postCadcategoriaR
  Handlers.postCaddiaR
  Handlers.postCadestabR
  Handlers.postCadfaixaprecoR
  Handlers.postCadpessoaR
  Handlers.postCadsubcategR
  Handlers.postLoginR
module dependencies: Foundation Rotas
package dependencies: aeson-compat-0.3.2.0@aeson_9wJdCBL4bH5K4w9XiaFHb3
                      aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG
                      auto-update-0.1.3@autou_19qtEoqMgV6FQlA1CkY9Cg base-4.8.2.0
                      base64-bytestring-1.0.0.1@base6_AkCk8zInckjJsyQ4AIFHPN
                      base-compat-0.9.1@basec_3Zy8UsyHmBEEwbReR8x1KT
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-builder-0.4.0.1@blaze_4KI2nf4lf9oHEgXiILyTYj
                      blaze-markup-0.7.0.3@blaze_C7imNkL0ufD2cjmU64FP9k
                      blaze-html-0.8.1.1@blaze_Iq6GES6DAMS0745KzFL7i6
                      byteable-0.1.1@bytea_38yjJsjDRm9KusCn8Yo4aB
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.6@casei_05l5iiwk2FiGu4DeOqOIxC
                      cereal-0.5.1.0@cerea_843xOxvPj94HAJ9SD4EJuq
                      cipher-aes-0.2.11@ciphe_8XNwNKI71EdCLNQ4WGdMQq
                      clientsession-0.9.1.1@clien_LuobzRZeZj55iOint27HgG
                      conduit-1.2.6.4@condu_1EneW8yRsjj18l2EfcgLyu
                      conduit-extra-1.1.13.1@condu_JrYHSonW303HUe4R7rhE0T
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      cookie-0.4.1.6@cooki_2Eb4iZo39x3Ihl7jVKbtZO
                      cprng-aes-0.6.1@cprng_FqpwhJtWO8g27pB5PJZtIq
                      cryptohash-0.11.6@crypt_3Cwvwq9ssRY1dmVI1qI6C2
                      crypto-random-0.0.9@crypt_7BiCOK9v78J36YeClUc9KE
                      cryptonite-0.10@crypt_9z0j8QI27Av2VIWw0mEkTO
                      crypto-cipher-types-0.0.9@crypt_AkbdiYWeXYI5D4jAOMIXve
                      cryptohash-conduit-0.1.1@crypt_BAJu9mKzLnyBUqveoUT0Xl
                      crypto-api-0.13.2@crypt_Kp4uvZbywBzKttuHrlYBAx
                      css-text-0.1.2.1@csste_BKK1KtEb1sJ9s7LwxLpwLq
                      data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe
                      data-default-0.5.3@datad_DLQPsKM7BNMFfKH45X8LEe
                      data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk
                      data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      easy-file-0.2.1@easyf_IjQ6MMskJyDEpOwcfCdF0G
                      email-validate-2.2.0@email_CQXkJx3ILx16knsHT8WvIg
                      entropy-0.3.7@entro_7gYJ61Ci0NNBp8LB4CGmrG
                      exceptions-0.8.2.1@excep_6lgwjdgwblY7rzh5s6SLd8
                      fast-logger-2.4.3@fastl_5D9PYpdXmW6J1zw1AtN1OL
                      file-embed-0.0.9.1@filee_ID0BQq7SkFm2s7BTdE1urr
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I
                      http2-1.4.5@http2_DiIK6FZsEORCMOaqj3QSEe
                      http-api-data-0.2.2@httpa_3kiLcpdXTUe4CYRpIoinpP
                      http-date-0.0.6.1@httpd_K48ICbZdR7j4Lbow4Laii0
                      http-types-0.9@httpt_1qktWOgbYARKyaY9syDTns integer-gmp-1.0.0.0
                      iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT
                      lifted-base-0.2.3.6@lifte_DoOvgrTvmEtENHs0ypaZTR
                      memory-0.11@memor_0EiEBIg44i8KGjAeoKnPDs
                      mime-types-0.1.0.6@mimet_9JBMcwv2Xiq5zZQuEgPby5
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monad-logger-0.3.18@monad_5Adv9Hf1fONCeS01xDfKe7
                      monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ
                      network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      old-time-1.1.0.3@oldti_JVjJvknZJ0JKghfag2Jw2L
                      parsec-3.1.9@parse_7aUabKPjr5W6Al5Ge35AQl
                      path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO
                      persistent-template-2.1.6@persi_1951GfcGAw414vdjFbcV5g
                      persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL
                      persistent-postgresql-2.2.2@persi_EzrtUBM22f5BF3Kdnm31Oz
                      postgresql-libpq-0.9.1.1@postg_6f9D1As2FCe0fjZpXXvHvS
                      postgresql-simple-0.5.1.2@postg_9k9Uw6R9foNDbRYAVYjlMk
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      psqueues-0.2.2.0@psque_Eu4cvucK9D300LguHeaq9c
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ
                      resource-pool-0.2.3.2@resou_BPzNUl5kJsI1qo7V284Tgq
                      safe-0.3.9@safe_Eus5OohxO2XHvdWxKAmhFS
                      scientific-0.3.4.6@scien_5s26qRhE5w04kI4pP1Rtwm
                      securemem-0.1.9@secur_ArobkR9k7uwJiSXmFUrDYT
                      semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO
                      shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet
                      silently-1.2.5@silen_5nVdOe0bUXfLPEbxHJT4m4
                      simple-sendfile-0.2.21@simpl_1s4YZSsjn6TCbK7MVn1EXz
                      skein-1.0.9.4@skein_Gu4ZCUdyHoJKdYGOgDHOva
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      stm-chans-3.0.0.4@stmch_4ac5OLG4E0w1rpuIDCribD
                      streaming-commons-0.1.15.2@strea_0Pv1kz8leJoAmtjyRTUWHG
                      stringsearch-0.3.6.6@strin_CAOAc0sCfAC9gi7YClo2KY
                      tagged-0.8.3@tagge_5cptKNCoGdxJM6eqqNERxD
                      tagsoup-0.13.9@tagso_3I5x83DoCVBIz4INMBLU3R
                      template-haskell-2.10.0.0 text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      time-locale-compat-0.1.1.1@timel_Ciz7M1U3da73rRwCjRF3Np
                      transformers-base-0.4.4@trans_74WedXVmfaHHDJItmBRTVp
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unix-compat-0.4.1.4@unixc_Km8uiabmElX5mrb8D4Fywe
                      unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx
                      unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
                      uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr
                      vault-0.3.0.6@vault_8aId1RjvIBs9AcRd6Dlytd
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      wai-3.2.1@wai_9edbdKSIJ67EotPYC07Pm5
                      wai-app-static-3.1.5@waiap_CgbYPrxsBGcBgu3idO05MB
                      wai-extra-3.0.15@waiex_AN9r60wRxlQ1G94yF9jctQ
                      wai-logger-2.2.5@wailo_BCoAaxCAAhP8C9VccJCupp
                      warp-3.2.2@warp_BT83wEXGJqwEvMr1lKbIjl
                      word8-0.1.2@word8_6yKBsGbmsbLB2UCORShr75
                      xss-sanitize-0.3.5.6@xsssa_JdGY8fSYBM7LAdXrSOFQKS
                      yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88
                      yesod-form-1.4.7@yesod_CXBt2wmt7ex0o9Pu0X8jby
                      yesod-1.4.3@yesod_G3l0IvftpcQLS1fhy6ci93
                      yesod-persistent-1.4.0.4@yesod_KDWGSyKXKmE2mrTGkSySls
                      yesod-static-1.5.0.3@yesod_Kslr80RVazD2vTcBFRhOjU
                      zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu
orphans: aeson-compat-0.3.2.0@aeson_9wJdCBL4bH5K4w9XiaFHb3:Data.Aeson.Compat
         aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak:Data.Aeson.Types.Generic
         aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak:Data.Aeson.Types.Instances
         attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.Text.Internal
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         crypto-api-0.13.2@crypt_Kp4uvZbywBzKttuHrlYBAx:Crypto.Classes
         data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe:Data.Default.Instances.Base
         data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk:Data.Default.Instances.DList
         data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY:Data.Default.Instances.Containers
         data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ:Data.Default.Instances.OldLocale
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket.Types
         persistent-template-2.1.6@persi_1951GfcGAw414vdjFbcV5g:Database.Persist.TH
         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistUnique
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx:Data.UnixTime.Diff
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         email-validate-2.2.0@email_CQXkJx3ILx16knsHT8WvIg:Text.Email.Parser
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Addr
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Range
                         main@main:Foundation
                         monad-logger-0.3.18@monad_5Adv9Hf1fONCeS01xDfKe7:Control.Monad.Logger
                         monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS:Control.Monad.Trans.Control
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67:Network.URI
                         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Class.PersistConfig
                         persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistStore
                         persistent-postgresql-2.2.2@persi_EzrtUBM22f5BF3Kdnm31Oz:Database.Persist.Postgresql
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ:Control.Monad.Trans.Resource.Internal
                         semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO:Data.List.NonEmpty
                         semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO:Data.Semigroup
                         shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Css
                         shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Shakespeare
                         tagged-0.8.3@tagge_5cptKNCoGdxJM6eqqNERxD:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashSet
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
                         yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Class.Handler
                         yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Types
                         yesod-static-1.5.0.3@yesod_Kslr80RVazD2vTcBFRhOjU:Yesod.Static
                         zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu:Codec.Compression.Zlib.Stream
import  -/  base-4.8.2.0:Control.Applicative a8ebf5ad4932b411ad7725da68be9801
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  blaze-markup-0.7.0.3@blaze_C7imNkL0ufD2cjmU64FP9k:Text.Blaze.Internal 2898da33690d2db163df0dc76596091c
import  -/  blaze-html-0.8.1.1@blaze_Iq6GES6DAMS0745KzFL7i6:Text.Blaze.Html 75b0386c9ee854906d7c6830574b4617
import  -/  Foundation 53a255931871f2fdd8a02a68c7d583e4
  exports: cfef62567b30a2ad0662bcd37ae92dd7
  AboutR 19467b1cba56255e716e14d969d2dd31
  AdminR caddc3b1e02116819f9c8fb7f8872200
  Balada 9ad1dc8f04c830e609d76a6feae0f544
  CadcategoriaR 33aa57b4aee836414bb5f3a4e42899d2
  CaddiaR 267eb6a332daa203e7f6ce9792fc9ec7
  CadestabR 6067d959f91e7d00efe22f5de11c8ca1
  CadfaixaprecoR ff923bfb4e7c8d0957d5656eeb1f3e55
  CadpessoaR b55b2d0769f04e5c7c1208f9fbdef1bc
  CadsubcategR 4ce015a14c300df2b1d7f150a4ac868f
  Categoria_estab 673db4a2d427458d9da433c83b2ac55e
  Categoria_estab 834a15368fbb626ca09959dc352a937d
  Categoria_estabNome_categoria d9a0f1d59a50087c2bff1846ec1fd697
  Classificacao_estabNome_classificacao 86df1cef10a8eff10cf9bb0056f653cb
  Dia_evento 61cb4e254e8049fd7e85884e7307f049
  Dia_evento 8e1ab49ddcb1a2d0647a019e207b55c7
  Dia_eventoDc_dia 38dd45443d983f18a74c8055cf9812fe
  ErroR 3bab6b3c3893dab4a4485eca86616d4c
  Estabelecimento 5808e2196543515f8e84abd60b759ff6
  Estabelecimento 0a616000469dae6930779c0f1673ad5e
  EstabelecimentoNome_estab d2520c0d91faf66c8df895a5930f8577
  Faixa_preco 1429deb8be98c5a887094606ea440373
  Faixa_preco 64f0f89676c78a44af12af205c42fddd
  Faixa_precoNome_faixa_preco 9b0ead10b826adb4ab30bc7b1ff6c010
  Form 878271ba195782efe2ed725a57e9c02f
  Handler 603ee8fb7b87ef5c836ef206bb5b9bbe
  HomeR c4610948b3c444a95edb53ee127427c0
  LoginR fb0aeab55e31211ec36a6fe97d413444
  LogoutR 6c9bb4d9a0cbd20f8589a3cf374fee49
  PerfilR 70e5447b1b6200b1d76fcae06ffbc20d
  Pessoas dacef15a07c0c6809a74a99cad3b6577
  Pessoas a76db50578ac8fef20d0adddf32ed566
  PessoasEmail 98b617fe424aa422aa679a9ab571c35a
  PessoasId b1d316a640966d02beac1c53109013aa
  PessoasSenha c97625643a5378684dbf7652efd6cf41
  StaticR 81c528a1640a714ef84973453a49358f
  Sub_categ_estab b71ddaa7865f126a7bb2b2ec0c9e07c6
  Sub_categ_estab 14a3968153a32d6230d0ee51c83affb9
  Sub_categ_estabNome_sub_categ 099e782a3e6767dd967d8ce79d845fca
  categoria_estabNome_categoria d7adf7fcced1cbe621c06e3347153b05
  classificacao_estabNome_classificacao 38a92694f7f12c5ba29d32bfc715e1cb
  dia_eventoDc_dia 6343de59ae5b9ea29ae1b8d676111232
  estabelecimentoNome_estab 346a9c8850597fabaa867057a20a6675
  faixa_precoNome_faixa_preco 3ebb266c93ca16b41f40cb93e7b96234
  getStatic 3d2354274a64110f1941396afa02cc6f
  pessoasLogin 8ce2ecc01b5b2c535c247c7b4b78e787
  pessoasNome 30ab85ca2d1ebd917b8b352e29bb6aa6
  style_css cb164369210c380108bc264647c5c8d0
  sub_categ_estabNome_sub_categ bb88d0f529ca6b1635f6138b6fab56b6
import  -/  Rotas 35c9ddc2daed489bf60e30cb49790fd1
  exports: 9e75376dfaae94121967e2261d8299b0
  pRoutes bc0ce365a412ef0b5ee6da35e37463db
import  -/  monad-logger-0.3.18@monad_5Adv9Hf1fONCeS01xDfKe7:Control.Monad.Logger 81fdae6370cfcba4c707991affdd9335
import  -/  path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO:Web.PathPieces e7a246921fcfef213af85b6de92fc54c
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist 180e79e34f196720918955b2b484cd93
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Class.PersistEntity 5eb8f78ed08e3d1cc2eb03a542ee8ef5
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Class.PersistQuery 2b12376c014d739fb931ca682ace638c
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Class.PersistStore 19578d4a470dc95e7c983b258734668b
import  -/  persistent-2.2.4.1@persi_DNWQ1fABpkG7SIGjkPAoVL:Database.Persist.Sql.Orphan.PersistStore 0a06b59de39b78fb9c25f28885d3b285
import  -/  persistent-postgresql-2.2.2@persi_EzrtUBM22f5BF3Kdnm31Oz:Database.Persist.Postgresql e3cee4494ec0b41d091dfbfa53647399
import  -/  shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Cassius aa613b98fc667e8306c50662f383651f
import  -/  shakespeare-2.0.8.1@shake_HPgllHDhOeNKeID3lIYZet:Text.Lucius 6a7d45a36131f7c945150a1a68fb957a
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text 677c532e2dd56476a11a0a8a53880ce7
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Internal d9b6b9a9dd535595b612aea5738b7466
import  -/  wai-3.2.1@wai_9edbdKSIJ67EotPYC07Pm5:Network.Wai.Internal c94cac656eee982fa1e36c81ceaa3aaf
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Class.Dispatch 9efa014da7db9ea2643ef9b6013368bc
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Class.Yesod e0b32da768aac32a5b908402d95fa4b4
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Handler faf894fb8d5127174e21c5e5ba5d9c37
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Internal.Run bed196a7849a8cb603b99143837e8073
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Internal.TH 7f968c8685f147b669e9c01e96081c03
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Types b87a23cf340ec09847f602f8054b5de4
import  -/  yesod-core-1.4.20.1@yesod_9jLiWBvGPHW5LdxkUxjL88:Yesod.Core.Widget 34a12ed3ff9183516ec7108dc8a5f8fa
import  -/  yesod-form-1.4.7@yesod_CXBt2wmt7ex0o9Pu0X8jby:Yesod.Form.Fields 4207f45e7d180fd1d9653dc5888247fc
import  -/  yesod-form-1.4.7@yesod_CXBt2wmt7ex0o9Pu0X8jby:Yesod.Form.Functions b0a2f4186f9d70893c256ce5bcdb5ca6
import  -/  yesod-form-1.4.7@yesod_CXBt2wmt7ex0o9Pu0X8jby:Yesod.Form.Types ad7a892cf89b163d999574176db9d126
import  -/  yesod-1.4.3@yesod_G3l0IvftpcQLS1fhy6ci93:Yesod 5be136ed9273569748acb63f2bd39620
import  -/  yesod-persistent-1.4.0.4@yesod_KDWGSyKXKmE2mrTGkSySls:Yesod.Persist.Core 96ff1ce14becc4a26d0b20a36400367f
import  -/  yesod-static-1.5.0.3@yesod_Kslr80RVazD2vTcBFRhOjU:Yesod.Static 6232c965ad70ab1f773f8c649b0ff405
addDependentFile "/home/ubuntu/.stack/programs/x86_64-linux/ghc-7.10.3/lib/ghc-7.10.3/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.22.5.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
addDependentFile "Hamlets/home.hamlet"
7c7023590fc3273a1e123d44088a1888
  $fYesodDispatchBalada ::
    Yesod.Core.Class.Dispatch.YesodDispatch Foundation.Balada
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Balada
                  Foundation.$fYesodBalada
                  Handlers.$fYesodDispatchBalada_$cyesodDispatch -}
19a3df90e837022668de72dac701f754
  $fYesodDispatchBalada_$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv Foundation.Balada
    -> Network.Wai.Application
  {- Arity: 2,
     Strictness: <L,U(U,U(U(U,U,U,U,U,U,U,U,U,U),U),U,U,C(U(U,1*U(U,U,U))))><S(LLLLLLLSLLLLLLLL),1*U(U(U,U,U,U),U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Yesod.Core.Types.YesodRunnerEnv Foundation.Balada
                   w1 :: Network.Wai.Internal.Request ->
                 case w1 of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 Handlers.$w$cyesodDispatch
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16 }) -}
14834f7e90215ffab64ef1954595b000
  $s$fApplicativeWidgetT ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fApplicativeWidgetT1
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$cpure
                  (Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fApplicativeWidgetT1
                     GHC.Base.$fMonadIO)
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* -}
06a7fbfd925e5b9344cc41d912571435
  $s$fApplicativeWidgetT1 ::
    GHC.Base.Functor
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Yesod.Core.Class.Yesod.$s$fFunctorWidgetT @ Foundation.Balada) -}
5bac5bd76bf264978acfe79cbb40ed05
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*> ::
    Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO b
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a37
                   @ b
                   eta :: Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a37
                   eta2 :: Yesod.Core.Types.WidgetT
                             Foundation.Balada GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   Handlers.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ b
                   (Yesod.Core.Class.Yesod.$s$fFunctorWidgetT_$s$fFunctorWidgetT_$c<$
                      @ Foundation.Balada
                      @ (b -> b)
                      @ a37
                      (GHC.Base.id @ b)
                      eta)
                   eta2) -}
d6f9252a00b16d6f8c7cf7e26f5d982e
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* ::
    Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a37
                   @ b
                   eta :: Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a37
                   eta2 :: Yesod.Core.Types.WidgetT
                             Foundation.Balada GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   Handlers.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ a37
                   (Yesod.Core.Types.$fFunctorWidgetT_$cfmap
                      @ Foundation.Balada
                      @ GHC.Types.IO
                      GHC.Base.$fMonadIO
                      @ a37
                      @ (b -> a37)
                      (GHC.Base.const @ a37 @ b)
                      eta)
                   eta2) -}
6449313d43544f4013950f9dd53662dc
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$cpure ::
    a -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a37
                   a38 :: a37
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.returnIO
                    @ (a37,
                       Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route Foundation.Balada))
                    (a38,
                     Yesod.Core.Types.$fApplicativeWidgetT_$cmempty
                       @ (Yesod.Routes.Class.Route Foundation.Balada)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <(a37,
                        Yesod.Core.Types.GWData
                          (Yesod.Routes.Class.Route Foundation.Balada))>_R)
                   eta2)
                  `cast`
                (forall a37.
                 <a37>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(a37,
                                           Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route Foundation.Balada))>_R))
                          (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                    <Foundation.Balada>_N <GHC.Types.IO>_N <a37>_N))) -}
86e5f71b9c016d35f7bb42cba09f170a
  $s$fMonadBasebWidgetT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  Handlers.$s$fMonadBasebWidgetT3
                  GHC.Base.$fMonadIO
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadBasebWidgetT_$cliftBase
                     @ GHC.Types.IO
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.Base.$fMonadBaseIOIO) -}
563f19c90bde3de4691c3a6d1d1a440c
  $s$fMonadBasebWidgetT1 ::
    GHC.Base.Monad
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadBasebWidgetT_$s$fMonadWidgetT -}
2d8e2d11f5a1f989a2d06800472525b4
  $s$fMonadBasebWidgetT2 ::
    GHC.Base.String
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a37 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO a37)
                   eta) -}
88df38db2c04b9d00bcff6c13af2c2b4
  $s$fMonadBasebWidgetT3 ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fApplicativeWidgetT -}
91b527f61af254362a7b8a6111df503a
  $s$fMonadBasebWidgetT_$s$fMonadWidgetT ::
    GHC.Base.Monad
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT3
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>=
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$cpure
                  Handlers.$s$fMonadBasebWidgetT2 -}
594dfd2a607c40bd974c425012f01353
  $s$fMonadHandlerWidgetT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadHandlerWidgetT2
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cliftHandlerT
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadHandlerWidgetT2
                     Handlers.$s$fMonadHandlerWidgetT1) -}
6db210b16fde3311bea5dcc3b512b7ec
  $s$fMonadHandlerWidgetT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO,
                  GHC.Base.$fApplicativeIO)) -}
0289a5cb9ed3bc9a2d4234a57bd42899
  $s$fMonadHandlerWidgetT2 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT -}
6079489dc6e84978bb31dd2363be7257
  $s$fMonadHandlerWidgetT3 ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadBasebWidgetT -}
30816dabdd8f6ff9776a4c580c1a2e36
  $s$fMonadHandlerWidgetT4 ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT -}
7992697dc8c72acf564144341f8e4456
  $s$fMonadHandlerWidgetT5 ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT -}
f485f87b9adf37b4b6319997d268c518
  $s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadIOWidgetT_$cliftIO
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.IO.Class.$fMonadIOIO) -}
c9b400e325de43a1803befa2766a9246
  $s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadHandlerWidgetT5
                  Handlers.$s$fMonadHandlerWidgetT4
                  Handlers.$s$fMonadBasebWidgetT3
                  Handlers.$s$fMonadHandlerWidgetT3
                  (Yesod.Core.Types.$fMonadResourceWidgetT_$cliftResourceT
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadHandlerWidgetT5
                     Handlers.$s$fMonadHandlerWidgetT4
                     Handlers.$s$fMonadBasebWidgetT3
                     Handlers.$s$fMonadHandlerWidgetT3
                     GHC.Base.$fApplicativeIO
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
0b4be09260d5a31b055eab4f51a223e0
  $s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadThrowWidgetT_$cthrowM
                     @ Foundation.Balada
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.Catch.$fMonadThrowIO) -}
1a330b3a5594495b4919146d9fa4f409
  $w$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv Foundation.Balada
    -> Network.HTTP.Types.Method.Method
    -> Network.HTTP.Types.Version.HttpVersion
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Network.HTTP.Types.Header.RequestHeaders
    -> GHC.Types.Bool
    -> Network.Socket.Types.SockAddr
    -> [Data.Text.Internal.Text]
    -> Network.HTTP.Types.URI.Query
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> Data.Vault.Lazy.Vault
    -> Network.Wai.Internal.RequestBodyLength
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Types.IO Network.Wai.Internal.ResponseReceived
  {- Arity: 17,
     Strictness: <L,U(U,U(U(U,U,U,U,U,U,U,U,U,U),U),U,U,C(U(U,1*U(U,U,U))))><L,U(U,U,U,U)><L,U><L,U(U,U,U,U)><L,U><L,U><L,U><L,U><S,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
3af30a48c30dce9fcba8abc2f8e80590
  categs ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Categoria_estab))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Categoria_estab]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Categoria_estab]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.categs10 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Categoria_estab]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Categoria_estab]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Categoria_estab]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Categoria_estab)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs2 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Categoria_estab)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key
                              Foundation.Categoria_estab)
                         Handlers.categs1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Categoria_estab)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Categoria_estab)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Categoria_estab)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Categoria_estab)>_N)))) -}
35050844d1890e88d147e91313ed34ec
  categs1 ::
    Database.Persist.Class.PersistEntity.Entity
      Foundation.Categoria_estab
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key
          Foundation.Categoria_estab)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Categoria_estab ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Categoria_estab ds4 -> ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Categoria_estab
                    ent)) -}
4b783c7a6dd6f2b5a1c26599d7920ccd
  categs10 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Categoria_estab]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Categoria_estab)))
                   = (Handlers.categs_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Categoria_estab))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Categoria_estab))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Categoria_estab))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Categoria_estab))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Categoria_estab]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Categoria_estab)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Categoria_estab)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Categoria_estab]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Categoria_estab]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Categoria_estab]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Categoria_estab]>_N)))) -}
43c7c7cdbd465ab7212929ac6e87428c
  categs11 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Categoria_estab]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Categoria_estab)
                   Handlers.categs12
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Categoria_estab))) -}
2e2e4febb6e670c65242d4f73ef80668
  categs12 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Categoria_estab
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Categoria_estab
                   @ Data.Text.Internal.Text
                   Handlers.categs13
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldCategoria_estabtyp[0])) <Data.Text.Internal.Text>_N)) -}
5bfa8c19377e5997fc259f98c3ed6e55
  categs13 ::
    Foundation.R:EntityFieldCategoria_estabtyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Categoria_estabNome_categoria
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
39cfc7e0a9fd0a9850c315f8c665cc5a
  categs14 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Categoria_estab]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Categoria_estab]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Categoria_estab)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Categoria_estab
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityCategoria_estab
                   (Handlers.categs8 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
5c907e5b0cd42627cb2498da019da482
  categs2 ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Class.Handler.$fMonadHandlerHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs4 @ site)
                   (Handlers.categs3 @ site)) -}
f30c5775dc23aace39aeded1e5b46d9a
  categs3 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: (\ @ site ->
                 (Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO,
                  GHC.Base.$fApplicativeIO)) -}
fae0e786913dd4c8a4262d308f498f1c
  categs4 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadResourceHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs9 @ site)
                   (Handlers.categs8 @ site)
                   (Handlers.categs7 @ site)
                   (Handlers.categs5 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO
                   Control.Monad.Base.$fMonadBaseIOIO
                   Control.Monad.Catch.$fMonadThrowIO) -}
419ff53226c384d70f67a26c114b704a
  categs5 ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadBasebHandlerT
                   @ GHC.Types.IO
                   @ site
                   @ GHC.Types.IO
                   GHC.Base.$fApplicativeIO
                   (Handlers.categs7 @ site)
                   GHC.Base.$fMonadIO
                   (Handlers.categs6 @ site)
                   Control.Monad.Base.$fMonadBaseIOIO) -}
00489cd8ca622a3acd8ae1e340811e1e
  categs6 ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs7 @ site)
                   GHC.Base.$fMonadIO) -}
0a6c2fa427fab8c0b0aab56f0b52fda8
  categs7 ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fApplicativeHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Yesod.Core.Handler.$s$fFunctorHandlerT @ site)
                   GHC.Base.$fMonadIO) -}
2d4b39149d0b5fd8bab8b302726a5976
  categs8 ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadIOHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs6 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
66f1ad971f5c620fd1f950477300939c
  categs9 ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadThrowHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.categs6 @ site)
                   Control.Monad.Catch.$fMonadThrowIO) -}
e41703823747c9dad09e061b7e6be4e7
  categs_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Categoria_estab)))
  {- Unfolding: (\ @ site ->
                 Handlers.categs14
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Categoria_estab))
                   Handlers.categs11) -}
26a0172eee0a1011a21e2d292df2aefc
  estabs ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Estabelecimento))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Estabelecimento]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Estabelecimento]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.estabs2 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Estabelecimento]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Estabelecimento]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Estabelecimento]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Estabelecimento)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs2 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Estabelecimento)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key
                              Foundation.Estabelecimento)
                         Handlers.estabs1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Estabelecimento)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Estabelecimento)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Estabelecimento)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Estabelecimento)>_N)))) -}
16873cf50cde4b9846bca3d069824586
  estabs1 ::
    Database.Persist.Class.PersistEntity.Entity
      Foundation.Estabelecimento
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key
          Foundation.Estabelecimento)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Estabelecimento ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Estabelecimento ds4 ds5 ds3 ds6 ds7 ->
                  ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Estabelecimento
                    ent)) -}
4423f5563ec5a23e15f608c7e0849e5a
  estabs2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Estabelecimento]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Estabelecimento)))
                   = (Handlers.estabs_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Estabelecimento))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Estabelecimento))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Estabelecimento))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Estabelecimento))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Estabelecimento]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Estabelecimento)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Estabelecimento)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Estabelecimento]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Estabelecimento]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Estabelecimento]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Estabelecimento]>_N)))) -}
96fc4e509cf3ce8bdd5c7d04faa483c4
  estabs3 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Estabelecimento]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Estabelecimento)
                   Handlers.estabs4
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Estabelecimento))) -}
b616e49ab21d8338f3d87cdb1956780e
  estabs4 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Estabelecimento
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Estabelecimento
                   @ Data.Text.Internal.Text
                   Handlers.estabs5
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldEstabelecimentotyp[0])) <Data.Text.Internal.Text>_N)) -}
67e36adf6edf858e36f00b5aa6219fec
  estabs5 ::
    Foundation.R:EntityFieldEstabelecimentotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.EstabelecimentoNome_estab
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
df511283ccfb7da30a2bb051cc27ce0e
  estabs6 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Estabelecimento]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Estabelecimento]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Estabelecimento)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Estabelecimento
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityEstabelecimento
                   (Handlers.categs8 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
d6a65628afd6e6a70c28a836930aded4
  estabs_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Estabelecimento)))
  {- Unfolding: (\ @ site ->
                 Handlers.estabs6
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Estabelecimento))
                   Handlers.estabs3) -}
422a0d5967c363e781a6f4153f34b506
  formCategoria :: Foundation.Form Foundation.Categoria_estab
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formCategoria1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Categoria_estab>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
d569c88971a7aed310f53066ae175d19
  formCategoria1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Categoria_estab,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Categoria_estab
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formCategoria2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Categoria_estab>_N))
                   eta2
                   eta3
                   eta4) -}
207a67305a0608f4da8e533c548f2104
  formCategoria2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Categoria_estab,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formCategoria_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x3 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing @ Foundation.Categoria_estab
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure @ Foundation.Categoria_estab errs
                        Yesod.Form.Types.FormSuccess a37
                        -> Yesod.Form.Types.FormSuccess
                             @ Foundation.Categoria_estab
                             (case a37 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                              Foundation.Categoria_estab dt }) },
                      x3,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Categoria_estab,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Categoria_estab,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
02cefefc302d827ef51f3a6608ccf87b
  formCategoria3 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formCategoria4
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
30a3b0b617088eab944ed5614692902a
  formCategoria4 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formCategoria5) -}
252b33e554a810c27f5149d87785acfa
  formCategoria5 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formCategoria6) -}
a389f952cc611a69dd55e25a70d0f507
  formCategoria6 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formCategoria7
                   0
                   ipv }) -}
9acd3cb2687f0ebeb0fe82651419860a
  formCategoria7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Categoria: "#) -}
38a0e2be25490dc47bb276a1b54ebb46
  formCategoria8 ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Handlers.formCategoria9
                   (Yesod.Form.Fields.textField1 @ Foundation.Handler)
                   Yesod.Form.Types.UrlEncoded) -}
91607b74917557325e9bba5aa23f8922
  formCategoria9 ::
    [Data.Text.Internal.Text]
    -> [Yesod.Core.Types.FileInfo]
    -> Foundation.Handler
         (Data.Either.Either
            (Text.Shakespeare.I18N.SomeMessage
               (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler))
            (GHC.Base.Maybe Data.Text.Internal.Text))
  {- Arity: 2,
     Unfolding: (\ w3 :: [Data.Text.Internal.Text]
                   w4 :: [Yesod.Core.Types.FileInfo][OneShot] ->
                 Yesod.Form.Functions.$wparseHelperGen
                   @ Yesod.Form.Types.FormMessage
                   @ Data.Text.Internal.Text
                   @ Foundation.Handler
                   @ (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Data.Either.Right
                      @ Yesod.Form.Types.FormMessage
                      @ Data.Text.Internal.Text)
                   w3) -}
2de8655fef30d2b3b9e7c8d079534050
  formCategoria_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formCategoria3
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
72edf5b74d0a03dad03bf94ffe3b6d70
  formDia :: Foundation.Form Foundation.Dia_evento
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formDia1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Dia_evento>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
7e83c17813a67a75ba057cbcb970f1f6
  formDia1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Dia_evento,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Dia_evento
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formDia2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Dia_evento>_N))
                   eta2
                   eta3
                   eta4) -}
2b386839bc851eaac3ec5b622e31663c
  formDia2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Dia_evento,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formDia_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x3 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing @ Foundation.Dia_evento
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure @ Foundation.Dia_evento errs
                        Yesod.Form.Types.FormSuccess a37
                        -> Yesod.Form.Types.FormSuccess
                             @ Foundation.Dia_evento
                             (case a37 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                              Foundation.Dia_evento dt }) },
                      x3,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult Foundation.Dia_evento,
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult Foundation.Dia_evento,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
5a9ab7a9c66ffde97bf265583c62099a
  formDia3 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formDia4
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
e9a02daf1b46fa6dd70aff48d95733fa
  formDia4 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formDia5) -}
cd7cc5964eb2f1de19b32ac0d4c12d54
  formDia5 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formDia6) -}
77a709ae928d5c3bb1f151214de7602f
  formDia6 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formDia7
                   0
                   ipv }) -}
4ad97b8fb40fdb9c73ca954594a8a233
  formDia7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Dia: "#) -}
cf0e649dac5d22ad05b3eb0349461fa6
  formDia_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formDia3
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
fd3680c38ce9c7c3027b04de5c4332a1
  formEstabelecimento :: Foundation.Form Foundation.Estabelecimento
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formEstabelecimento1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Estabelecimento>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
a8d68308f213e32292c1661d950db9ec
  formEstabelecimento1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Estabelecimento,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Estabelecimento
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formEstabelecimento2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Estabelecimento>_N))
                   eta2
                   eta3
                   eta4) -}
b3aa9a0237b19b0360f5dbf2a73a58eb
  formEstabelecimento10 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento11
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
174e4ec80d5aa610ba65b05efc679aeb
  formEstabelecimento11 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento12) -}
7f98b5100a8398a1f56786daf1be870e
  formEstabelecimento12 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento13
                      0
                      ipv })) -}
4248990d972eabd6d95f9ecf61b1aa6f
  formEstabelecimento13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DDD: "#) -}
8139a0b994bb25198ea56b6068c7bf23
  formEstabelecimento14 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento20
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento15
                   w4
                   w5
                   w6) -}
2da55c986d54cca5868512eb9d476ef0
  formEstabelecimento15 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento16
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
02ab2ff425bf666b5a4df889afec88b1
  formEstabelecimento16 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento17
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
6d1b0b403f5d31f4493995f147d95373
  formEstabelecimento17 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento18) -}
98ed9cce3b24018625ca485f84abf817
  formEstabelecimento18 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento19
                      0
                      ipv })) -}
c8bc08193c47a9641c0c7f00762144ab
  formEstabelecimento19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Email: "#) -}
f97d907592ade04ddea61a978946ffe7
  formEstabelecimento2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Estabelecimento,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ Foundation.Estabelecimento
                   Handlers.formEstabelecimento8
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento3
                   w4
                   w5
                   w6) -}
e92e23e595b653ca8c7baea162bb72b7
  formEstabelecimento20 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento26
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento21
                   w4
                   w5
                   w6) -}
8e78e40ee037a03013aba06f0f76d459
  formEstabelecimento21 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento22
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
373eeafee6e7cfd320e5496b8708ddcc
  formEstabelecimento22 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento23
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
2a877a39597bdf34581d9196a65331cf
  formEstabelecimento23 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento24) -}
55e8351dbb37ea9b039548cb6c14c6a7
  formEstabelecimento24 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento25
                      0
                      ipv })) -}
f54738fcdb7cb824bdf9e2a7450c8f0e
  formEstabelecimento25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Cidade: "#) -}
751473dcb170f0adda7506cbb8438b58
  formEstabelecimento26 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formEstabelecimento_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x3 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Estabelecimento)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Estabelecimento)
                             errs
                        Yesod.Form.Types.FormSuccess a37
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Estabelecimento)
                             (Foundation.$WEstabelecimento a37) },
                      x3,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Foundation.Estabelecimento),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Foundation.Estabelecimento),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
0f431f1d0ef7589f14186d1ad4cc1d98
  formEstabelecimento27 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento28
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
e033a7a9729296ae6b59dab21ee8a253
  formEstabelecimento28 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento29) -}
16f8f71ae8336d498dd2ede2dfb18347
  formEstabelecimento29 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formEstabelecimento30) -}
09d64f91f9b96efd7fbfa1e7ea3789bf
  formEstabelecimento3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
966052063ee90319df4bf2b2f3219072
  formEstabelecimento30 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formEstabelecimento31
                   0
                   ipv }) -}
2c493237d3c1778a1a9ae52ea9d2b659
  formEstabelecimento31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Nome: "#) -}
2bac1e0812985351884f00748374816d
  formEstabelecimento4 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formEstabelecimento5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
1983c725ceb161dcfa363fda499fa2c2
  formEstabelecimento5 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formEstabelecimento6) -}
784468a7a4072203150cb9099a6aa4e7
  formEstabelecimento6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento7
                      0
                      ipv })) -}
a57b38fe0653d284824306f752badfd3
  formEstabelecimento7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Telefone: "#) -}
c66c376465a8efb42c5351801e1cdcb2
  formEstabelecimento8 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text -> Foundation.Estabelecimento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text -> Foundation.Estabelecimento)
                   Handlers.formEstabelecimento14
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text -> Foundation.Estabelecimento>_N))
                   Handlers.formEstabelecimento9
                   w4
                   w5
                   w6) -}
860f698e2b882bead90d0570ff62b544
  formEstabelecimento9 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento10
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
a605e130814516287628f3832f1afa19
  formEstabelecimento_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formEstabelecimento27
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
210559145383ab061889cd181e19a138
  formFaixapreco :: Foundation.Form Foundation.Faixa_preco
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formFaixapreco1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Faixa_preco>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
1f4181c02716edc8fbb23c4dd4e60f3c
  formFaixapreco1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Faixa_preco,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Faixa_preco
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formFaixapreco2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Faixa_preco>_N))
                   eta2
                   eta3
                   eta4) -}
8d7d24a41f39db990423d51d1ff96d6d
  formFaixapreco10 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formFaixapreco11
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
b16ab083b5120dde220a64241e7e3588
  formFaixapreco11 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formFaixapreco12) -}
eebd865d610c66442c09d6cf44ffba11
  formFaixapreco12 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formFaixapreco13
                      0
                      ipv })) -}
a77e057bafb74f932056a57718f1bd80
  formFaixapreco13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Valor Inicial: "#) -}
3052719e09ca86efd6b70fbf3685690e
  formFaixapreco14 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text -> Foundation.Faixa_preco),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formEstabelecimento_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x3 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text -> Foundation.Faixa_preco)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text -> Foundation.Faixa_preco)
                             errs
                        Yesod.Form.Types.FormSuccess a37
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text -> Foundation.Faixa_preco)
                             (Foundation.$WFaixa_preco a37) },
                      x3,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text -> Foundation.Faixa_preco),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text -> Foundation.Faixa_preco),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
5de0e11c2f64b615d8287ac8ac374eb8
  formFaixapreco2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Faixa_preco,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ Foundation.Faixa_preco
                   Handlers.formFaixapreco8
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text -> Foundation.Faixa_preco>_N))
                   Handlers.formFaixapreco3
                   w4
                   w5
                   w6) -}
50a7636363d45029be6dd90eb2c7a290
  formFaixapreco3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formFaixapreco4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
f9d557757e9a417498d965bff32bb966
  formFaixapreco4 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formFaixapreco5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
f69d4d0b9338efffeb579e27f9bc6d8a
  formFaixapreco5 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formFaixapreco6) -}
d8f25f4e1f0249deb72ae90cfb635fb9
  formFaixapreco6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formFaixapreco7
                      0
                      ipv })) -}
5fead80e84b4d6086b06051c71798d1a
  formFaixapreco7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Valor Final: "#) -}
f85325a5976429bbbfc98d04f0d7a595
  formFaixapreco8 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text -> Foundation.Faixa_preco),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text -> Foundation.Faixa_preco)
                   Handlers.formFaixapreco14
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text -> Foundation.Faixa_preco>_N))
                   Handlers.formFaixapreco9
                   w4
                   w5
                   w6) -}
88520a4bb09b9a500db2707a92517125
  formFaixapreco9 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formFaixapreco10
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
2c54c83752061b7229168fec85ba1f3a
  formLogin ::
    Foundation.Form (Data.Text.Internal.Text, Data.Text.Internal.Text)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formLogin1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text, Data.Text.Internal.Text)>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
de3b5007776544b5e09adb1f4ac5a43d
  formLogin1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult
             (Data.Text.Internal.Text, Data.Text.Internal.Text),
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formLogin2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <(Data.Text.Internal.Text, Data.Text.Internal.Text)>_N))
                   eta2
                   eta3
                   eta4) -}
7b388a9d9ac6d754d6a911022bd83af5
  formLogin10 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formLogin11
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
283513a6ea1dcefe3559a011bf2e04cd
  formLogin11 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formLogin12) -}
c82edb8039ddaf4bbb452893bb2f56f0
  formLogin12 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formLogin13) -}
a698eeef12e262de5da5d82753c7e7e1
  formLogin13 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formEstabelecimento19
                   0
                   ipv }) -}
e0af2d648c6692f0d8eb0b9548c0b1ed
  formLogin2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text, Data.Text.Internal.Text),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   Handlers.formLogin9
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> (Data.Text.Internal.Text, Data.Text.Internal.Text)>_N))
                   Handlers.formLogin3
                   w4
                   w5
                   w6) -}
524e2ad4eff4f04eb1578dc8ddc1c514
  formLogin3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formLogin8
                   Handlers.formLogin4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
8fd5376f3e8eb08e1b288ed40c5402a4
  formLogin4 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formLogin5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
67a20eed921ff94680759316a83d985f
  formLogin5 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formLogin6) -}
509a84825d411961f606255c39bc36d3
  formLogin6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formLogin7
                      0
                      ipv })) -}
68107aac455349f834adda82472dea8d
  formLogin7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Senha: "#) -}
e00ffd6d77dfc849c78db9f1ac335255
  formLogin8 ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Handlers.formCategoria9
                   (Yesod.Form.Fields.passwordField1 @ Foundation.Handler)
                   Yesod.Form.Types.UrlEncoded) -}
6d55c73ac09b41eb3a7e9fce8a99a3e3
  formLogin9 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> (Data.Text.Internal.Text, Data.Text.Internal.Text)),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formLogin_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x3 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> (Data.Text.Internal.Text, Data.Text.Internal.Text))
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> (Data.Text.Internal.Text, Data.Text.Internal.Text))
                             errs
                        Yesod.Form.Types.FormSuccess a37
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> (Data.Text.Internal.Text, Data.Text.Internal.Text))
                             (GHC.Tuple.(,)
                                @ Data.Text.Internal.Text
                                @ Data.Text.Internal.Text
                                a37) },
                      x3,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> (Data.Text.Internal.Text, Data.Text.Internal.Text)),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> (Data.Text.Internal.Text, Data.Text.Internal.Text)),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
d5399dcf33d6df21563b8974bd758bea
  formLogin_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formLogin10
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
95457aa9fa063b28d176dc5619cc3532
  formPessoa :: Foundation.Form Foundation.Pessoas
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formPessoa1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Pessoas>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
4db88c8d131054038185dbb8fc4e5a2a
  formPessoa1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Pessoas,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Pessoas
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formPessoa2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Pessoas>_N))
                   eta2
                   eta3
                   eta4) -}
decde7a5108d4a58da5e9697f4d6345b
  formPessoa10 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa11
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
d5a8bb2a54af3c9fa18cd6ef8300a8fa
  formPessoa11 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa12
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
748ec5f61d36d995ebbb972c95d83a69
  formPessoa12 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa13) -}
f5c76993e92dadd3247576fbed869d8a
  formPessoa13 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formPessoa14
                      0
                      ipv })) -}
7afa2a5e161ec14c807a6443f35f4739
  formPessoa14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "E-mail: "#) -}
474c06667151d7a89cae1c86ea629078
  formPessoa15 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Pessoas)
                   Handlers.formPessoa16
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formEstabelecimento21
                   w4
                   w5
                   w6) -}
8fa862189c15a4e4ac768283895357f8
  formPessoa16 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Pessoas)
                   Handlers.formPessoa17
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formLogin3
                   w4
                   w5
                   w6) -}
7a41a72724d7ed445c4b382fb8323072
  formPessoa17 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Pessoas)
                   Handlers.formPessoa23
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formPessoa18
                   w4
                   w5
                   w6) -}
d8aebbc162ce47da051a6cf97f1ec4f5
  formPessoa18 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa19
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
a61b1296970a68fb0ea13a9a7c707bcf
  formPessoa19 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa20
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
aa0895fd54f019172c3dc8e7b7f1c959
  formPessoa2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Pessoas,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ Foundation.Pessoas
                   Handlers.formPessoa8
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text -> Foundation.Pessoas>_N))
                   Handlers.formPessoa3
                   w4
                   w5
                   w6) -}
2be726f7812c501a4f162ba0c74b25b7
  formPessoa20 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa21) -}
edf3288b2626f022270db9c960114e61
  formPessoa21 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formPessoa22
                      0
                      ipv })) -}
fa5d0c78949ccdab992ae881d1c0a43b
  formPessoa22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Login "#) -}
b453456505d31e8bde438a4fcb8bfb10
  formPessoa23 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Pessoas)
                   Handlers.formPessoa28
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formPessoa24
                   w4
                   w5
                   w6) -}
bde5b7421b44cda700a7130317cc3022
  formPessoa24 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa25
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
7110e82947d4e4bade0633c0024ece96
  formPessoa25 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa26
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
ec61562651d84b2ea7d7443fcc587e58
  formPessoa26 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa27) -}
1181dccbccb47ee7d741ce51ba5e42bf
  formPessoa27 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formEstabelecimento31
                      0
                      ipv })) -}
66ef8680178d359a099b561bfda78b00
  formPessoa28 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formPessoa_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x3 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Pessoas)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Pessoas)
                             errs
                        Yesod.Form.Types.FormSuccess a37
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Pessoas)
                             (Foundation.$WPessoas a37) },
                      x3,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Foundation.Pessoas),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Foundation.Pessoas),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
6c84c6c767fd8b42336ee5de6c4eff37
  formPessoa29 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa36
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   Handlers.formPessoa34
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Handlers.formPessoa30) -}
cfe6b41fd129b4c677030e78fe4958e2
  formPessoa3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
2aea6e3b5625a0f40203f12580d41f42
  formPessoa30 ::
    [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
  {- Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   Handlers.formPessoa31
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
3050cb48a5db4d788bc065db6d3c071f
  formPessoa31 :: (Data.Text.Internal.Text, Data.Text.Internal.Text)
  {- Unfolding: ((Handlers.formPessoa33, Handlers.formPessoa32)) -}
ec7aead3070a16ca190499ef6e63ca48
  formPessoa32 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "11"#) -}
ebe4f1f8124c3d3a3915868e5d2657c4
  formPessoa33 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "maxlength"#) -}
ecd2e4b9863a100af0a62fe8a6332d12
  formPessoa34 :: GHC.Base.Maybe Data.Text.Internal.Text
  {- Unfolding: (GHC.Base.Just
                   @ Data.Text.Internal.Text
                   Handlers.formPessoa35) -}
336d1339a8b548415249023e9c718d89
  formPessoa35 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "hident2"#) -}
4977afcb0b988410f07f56397053d204
  formPessoa36 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa37) -}
d6ef75f660a262522e6d6f9eaea5b8c3
  formPessoa37 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formPessoa38) -}
a5e43f1c2a22e392191c022368c90b65
  formPessoa38 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formPessoa39
                   0
                   ipv }) -}
eb74e08d408d705d397da5b56d853eca
  formPessoa39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CPF"#) -}
63035436171ee449f295c5bc88e00c09
  formPessoa4 :: Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formPessoa5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
96d1d8898b93b9336b317563d24aa7c7
  formPessoa5 :: Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa6) -}
99d269b423e3f590b3b9b112879fc8d0
  formPessoa6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formPessoa7
                      0
                      ipv })) -}
64ce460c4922399902477abca40181dc
  formPessoa7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Celular: "#) -}
d5d37653f3d44a2ea5a4331166e88ab2
  formPessoa8 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text -> Foundation.Pessoas)
                   Handlers.formPessoa9
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text -> Foundation.Pessoas>_N))
                   Handlers.formEstabelecimento9
                   w4
                   w5
                   w6) -}
5768be08b3b609450b211be7f35a9cd0
  formPessoa9 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text -> Foundation.Pessoas),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text -> Foundation.Pessoas)
                   Handlers.formPessoa15
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Pessoas>_N))
                   Handlers.formPessoa10
                   w4
                   w5
                   w6) -}
0bbafb746cc3b6c45afdb23fc5440f5b
  formPessoa_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formPessoa29
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
e350ca5e3d1c9c80fad2832ebff7620d
  formSubcategoria :: Foundation.Form Foundation.Sub_categ_estab
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formSubcategoria1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Sub_categ_estab>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
cf42edfea9761b9ab24be28164eeaae2
  formSubcategoria1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta2 :: Text.Blaze.Internal.Markup
                   eta3 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta4 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Sub_categ_estab
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formSubcategoria2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Foundation.Sub_categ_estab>_N))
                   eta2
                   eta3
                   eta4) -}
83bde4760f4e37ab178902e4622a55e0
  formSubcategoria10 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formSubcategoria11) -}
1d46eeca0a7c329d883b688ef71e3974
  formSubcategoria11 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formSubcategoria12) -}
3100cb228da7f263cae7a3347f4fdff5
  formSubcategoria12 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formSubcategoria13
                   0
                   ipv }) -}
4bb908e254e9cd18e8c5af83802e3329
  formSubcategoria13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Categoria"#) -}
313997f1debab26bd71fc37722b0668c
  formSubcategoria2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ Foundation.Sub_categ_estab
                   Handlers.formSubcategoria8
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                             <Data.Text.Internal.Text -> Foundation.Sub_categ_estab>_N))
                   Handlers.formSubcategoria3
                   w4
                   w5
                   w6) -}
acb60206397288d5d018eca47932cd9a
  formSubcategoria3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formSubcategoria4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
386257e3a04eaed58322d92dbb62ca8c
  formSubcategoria4 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formSubcategoria5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
51472311075a8a141e1d42271af1804d
  formSubcategoria5 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Balada
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Balada
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Data.Text.Internal.Text>_N))
                   Handlers.formSubcategoria6) -}
39131ea8947cdaad0036a04f296c431b
  formSubcategoria6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formSubcategoria7
                      0
                      ipv })) -}
a35553aa7bcbec7b48500f3c617914c9
  formSubcategoria7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Subcategoria: "#) -}
3516183c6b1097c30398d4fb2fd8a866
  formSubcategoria8 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Balada
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text -> Foundation.Sub_categ_estab),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta2 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta3 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Balada
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formSubcategoria_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta2
                       eta3
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Balada>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT
                                           Foundation.Balada GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x3 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text -> Foundation.Sub_categ_estab)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text -> Foundation.Sub_categ_estab)
                             errs
                        Yesod.Form.Types.FormSuccess a37
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text -> Foundation.Sub_categ_estab)
                             (Foundation.$WSub_categ_estab a37) },
                      x3,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text -> Foundation.Sub_categ_estab),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Balada GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Balada GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Balada>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text -> Foundation.Sub_categ_estab),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Balada GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
65f541c798453898785fa07a482234a9
  formSubcategoria9 ::
    Yesod.Form.Types.FieldSettings Foundation.Balada
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Balada
                   Handlers.formSubcategoria10
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Balada))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
0e72d59036eb79fb5ad7a9779364e70d
  formSubcategoria_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Balada
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Balada>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO))
                      @ Foundation.Balada
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria8
                   Handlers.formSubcategoria9
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
69f43368a3e93694a8bc9443fb329cea
  getAboutR ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getAboutR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))) -}
f5016225804f00e7383f017b37e807e9
  getAboutR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAboutR13
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getAboutR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
499460718d40ad36e181ef6320401e08
  getAboutR10 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getAboutR11
                   w4) -}
4bc7d1df2027ff56faafa25f9a9de659
  getAboutR11 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.HomeR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
4a518300748de4e37ad39e6e0047636d
  getAboutR12 ::
    Yesod.Core.Types.WidgetT
      Foundation.Balada
      GHC.Types.IO
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))
       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
       -> Data.Text.Internal.Text)
  {- Unfolding: (Yesod.Core.Handler.getUrlRenderParams
                   @ (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)
                   Handlers.$s$fMonadHandlerWidgetT) -}
b2fe1a8184997411d8b7eca456148221
  getAboutR13 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getAboutR_x1)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
4f34cf9ef1ca0dc9dc309c094bfa0415
  getAboutR14 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getAboutR15) -}
af1ab0de8bd26276ff35966d10018a50
  getAboutR15 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getAboutR16) -}
7a620df5bf232048837a0b67d230e008
  getAboutR16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "Essa pagina foi criada para acelerar o processo de decidir roles!!!\n\
                   \<a href=\""#) -}
8bb2a68f67826ccff1ad66d20fdfd79f
  getAboutR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getAboutR10
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getAboutR3
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Balada>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
84424dbaded7f51b9830402cbc6b84d9
  getAboutR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getAboutR4 #)) -}
1f24ae63440792783a92e7ab142f7ad3
  getAboutR4 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getAboutR5
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
e3af52864b1199e15b35eb3f0113fbd8
  getAboutR5 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getAboutR6
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
a318ffe905f3d75e3178c9f7356f7889
  getAboutR6 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getAboutR_x) -}
264f72f9a42b0d30e98e823f8c1f5d1c
  getAboutR7 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getAboutR8) -}
c454ca21d6afe13f939126a8d1b92150
  getAboutR8 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getAboutR9) -}
94e369e1e33e3db808fc8a2e54ff6ce2
  getAboutR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\">Back Home</a>\n"#) -}
937f88c759e9a4d0c55a03aee11b63ba
  getAboutR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAboutR7) -}
7ddd34ce6fb445b980c0d123ea8c68a8
  getAboutR_x1 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAboutR14) -}
7415f503f9210a84c7f03532c6f1c86f
  getAdminR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getAdminR1
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
2bd4124c4b69ab98dd860187695286cd
  getAdminR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2,
     Unfolding: (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta, Handlers.getAdminR2 #)) -}
93e9cd5c9d6e84eb2eac616fd664cec2
  getAdminR2 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getAdminR3
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
2cb9b48a78d90297b6914e38783b6e22
  getAdminR3 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getAdminR4
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
3aba4e750f0ebb6f35f536818c8a4f54
  getAdminR4 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getAdminR_x) -}
ef0df4cb48f11528e32899a416c3526a
  getAdminR5 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getAdminR6) -}
714e10c40a6c54419396a54dea46cc07
  getAdminR6 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getAdminR7) -}
44cb371e720167d260ee7d7855dcc8ba
  getAdminR7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> Bem-vindo meu Rei!</h1>\n"#) -}
b67c09bfdeca6c8dd25522b5d96ada5a
  getAdminR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getAdminR5) -}
53d3b0b8cb12abd3f9ffe62135363a5b
  getCadcategoriaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadcategoriaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
0d5fad445cd182c9f081bad1e5274fec
  getCadcategoriaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getCadcategoriaR23
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodBalada_$cdefaultLayout
                     (let {
                        x3 :: Text.Blaze.Html.Html
                        = case enctype of wild1 {
                            Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                            Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                      } in
                      let {
                        a37 :: Yesod.Core.Types.RY Foundation.Balada
                               -> Text.Blaze.Html.Html
                          {- Arity: 1 -}
                        = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                      } in
                      let {
                        a38 :: Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route Foundation.Balada)
                        = Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Balada)
                            a37
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Balada))
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                      } in
                      let {
                        lvl126 :: ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.Balada GHC.Types.IO))))
                        = (GHC.Tuple.(),
                           a38
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                      } in
                      let {
                        a39 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Balada GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A><L,U>,
                             Unfolding: InlineRule (2, True, False)
                                        (\ eta :: Yesod.Core.Types.HandlerData
                                                    Foundation.Balada
                                                    (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                           eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                         (# eta2,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Balada)
                                                (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                                                 x3)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Balada))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N)))_R)_R) #)) -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          (# eta2, lvl126 #)
                      } in
                      let {
                        a40 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ eta2 :: Yesod.Core.Types.HandlerData
                                                     Foundation.Balada
                                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.NTCo:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N <GHC.Types.IO>_N)
                                                  (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((<()>_R,
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Balada>_N
                                                                    <GHC.Types.IO>_N))_R)_R))_R)_R))
                                           (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Balada
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Balada)
                                              dt1 })) -}
                        = \ eta2 :: Yesod.Core.Types.HandlerData
                                      Foundation.Balada
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.NTCo:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N)
                                   (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((<()>_R,
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.Balada>_N
                                                     <GHC.Types.IO>_N))_R)_R))_R)_R))
                            (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Balada
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Balada)
                               dt1 })
                      } in
                      let {
                        lvl127 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a40
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getCadcategoriaR16
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Balada
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                       <Foundation.Balada>_N
                                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            eta
                      } in
                      let {
                        lvl128 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl127
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl129 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR10
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            lvl128
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl130 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR6
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl129
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl131 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a39
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl130
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Balada
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getCadcategoriaR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0]
                                             ((<()>_R,
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                               <Foundation.Balada>_N
                                                               <GHC.Types.IO>_N)))_R)_R))_R))
                              (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                         lvl131
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
8744ebd68db592702da94101c0977dbf
  getCadcategoriaR10 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getCadcategoriaR11
                   w4) -}
8a9afcb9b33c3b756e127ddfffd554dc
  getCadcategoriaR11 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadcategoriaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
ddff8ca5fdcd30cb9f4cea18da1d14e6
  getCadcategoriaR12 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getCadcategoriaR_x2)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
78b9353cbd6a067ae998e9c2da970ae7
  getCadcategoriaR13 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadcategoriaR14) -}
71ffd59a1ef8bd26a45a733a0e5384f4
  getCadcategoriaR14 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handlers.getCadcategoriaR15) -}
3245d2d5e3003cbf2fcb41badc4b71c0
  getCadcategoriaR15 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "></center>\n"#) -}
55f19aa1b75977cff251306ab8ce76f7
  getCadcategoriaR16 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getCadcategoriaR17 #)) -}
d526858fba133180b596009e67ef1f96
  getCadcategoriaR17 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getCadcategoriaR18
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
093c1d2530b415049110edca603ad1d9
  getCadcategoriaR18 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getCadcategoriaR19
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
4d5943956066315bf09763c7a6f3fbbd
  getCadcategoriaR19 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getCadcategoriaR_x3) -}
88b3c2300e9a3a507cf96e7c00541d9d
  getCadcategoriaR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getCadcategoriaR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
a8ef1c5dbb5cfc6d0c3b1ed10fcb978c
  getCadcategoriaR20 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadcategoriaR21) -}
1c58332249ad28eaaca7b43027f4a667
  getCadcategoriaR21 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handlers.getCadcategoriaR22) -}
45ddea1aca37f71273a05bfabb326a58
  getCadcategoriaR22 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Enviar\">\n\
                   \<h1> Cadastro de categoria Completo</h1>\n"#) -}
bf5c8dda3cb385c844dc708f5930db7d
  getCadcategoriaR23 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Categoria_estab
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Categoria_estab>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
196efbe4d9e7e58b502e15047588f219
  getCadcategoriaR3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadcategoriaR4) -}
50c5df5a37946431bdd090b4b1f34712
  getCadcategoriaR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getCadcategoriaR5) -}
0423329771683fd94a08e0604f9a7a12
  getCadcategoriaR5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<center> <form method=post enctype="#) -}
92a8db696954edcd9b03d12bdbcf7884
  getCadcategoriaR6 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getCadcategoriaR_x1)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
8f554a8669a188a96a4cfd2f90f9e2b8
  getCadcategoriaR7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadcategoriaR8) -}
2d41ca4b85e50f8de5e46331d81f42a9
  getCadcategoriaR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getCadcategoriaR9) -}
cfd096ad1a6e9c9b199a6e34f3d952bc
  getCadcategoriaR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# " action="#) -}
d1e6a80d8a7cd8011b3e6a9dcc72ce87
  getCadcategoriaR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadcategoriaR3) -}
f0de3b8f97d9d99768e39c1b982eb651
  getCadcategoriaR_x1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadcategoriaR7) -}
27d639882a1cc4e6c878983b6268199a
  getCadcategoriaR_x2 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadcategoriaR13) -}
2029a3636567dc0c74a745f38dd81ae2
  getCadcategoriaR_x3 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadcategoriaR20) -}
2f7d159727506b85877c1f25fde042cf
  getCaddiaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCaddiaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
5e8a1b54633b5936f7cc79a6e3a4cb8f
  getCaddiaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getCaddiaR11
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodBalada_$cdefaultLayout
                     (let {
                        x3 :: Text.Blaze.Html.Html
                        = case enctype of wild1 {
                            Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                            Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                      } in
                      let {
                        a37 :: Yesod.Core.Types.RY Foundation.Balada
                               -> Text.Blaze.Html.Html
                          {- Arity: 1 -}
                        = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                      } in
                      let {
                        a38 :: Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route Foundation.Balada)
                        = Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Balada)
                            a37
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Balada))
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                      } in
                      let {
                        lvl126 :: ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.Balada GHC.Types.IO))))
                        = (GHC.Tuple.(),
                           a38
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                      } in
                      let {
                        a39 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Balada GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A><L,U>,
                             Unfolding: InlineRule (2, True, False)
                                        (\ eta :: Yesod.Core.Types.HandlerData
                                                    Foundation.Balada
                                                    (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                           eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                         (# eta2,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Balada)
                                                (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                                                 x3)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Balada))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N)))_R)_R) #)) -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          (# eta2, lvl126 #)
                      } in
                      let {
                        a40 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ eta2 :: Yesod.Core.Types.HandlerData
                                                     Foundation.Balada
                                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.NTCo:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N <GHC.Types.IO>_N)
                                                  (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((<()>_R,
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Balada>_N
                                                                    <GHC.Types.IO>_N))_R)_R))_R)_R))
                                           (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Balada
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Balada)
                                              dt1 })) -}
                        = \ eta2 :: Yesod.Core.Types.HandlerData
                                      Foundation.Balada
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.NTCo:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N)
                                   (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((<()>_R,
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.Balada>_N
                                                     <GHC.Types.IO>_N))_R)_R))_R)_R))
                            (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Balada
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Balada)
                               dt1 })
                      } in
                      let {
                        lvl127 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a40
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getCaddiaR4
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Balada
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                       <Foundation.Balada>_N
                                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            eta
                      } in
                      let {
                        lvl128 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl127
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl129 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCaddiaR2
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            lvl128
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl130 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR6
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl129
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl131 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a39
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl130
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Balada
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getCadcategoriaR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0]
                                             ((<()>_R,
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                               <Foundation.Balada>_N
                                                               <GHC.Types.IO>_N)))_R)_R))_R))
                              (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                         lvl131
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
cd13b0d1372b9fa00bcdc4c64350e78d
  getCaddiaR10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Enviar\">\n\
                   \<h1> Cadastro de dia evento Completo</h1>\n"#) -}
2034c7db9c287ba4d5849366848c7f4a
  getCaddiaR11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Dia_evento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formDia1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Dia_evento>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
372824a5c11cd77e3dff941072352922
  getCaddiaR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getCaddiaR3
                   w4) -}
449e933b7098e09a0ed199b907b7b90c
  getCaddiaR3 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CaddiaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
216b941c9a2db55da6ef2245c4d6758d
  getCaddiaR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getCaddiaR5 #)) -}
51ec44069fd7b3c421b235d870c07867
  getCaddiaR5 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getCaddiaR6
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
d49d943286c8125395942ea9047f29e0
  getCaddiaR6 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getCaddiaR7
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
0552252733540390f2855826c4b5a4b7
  getCaddiaR7 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getCaddiaR_x) -}
9c6647966b7fd5dcc849d84ede3099df
  getCaddiaR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getCaddiaR9) -}
786c5a22b90143128a9e1eab8034cd84
  getCaddiaR9 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getCaddiaR10) -}
2aa08bdc0d1ddd03435b8a8242df24bb
  getCaddiaR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCaddiaR8) -}
4b4e5e1247ad682e7b3043768416351a
  getCadestabR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadestabR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
0533c537282232b57fdc0db669d10aa9
  getCadestabR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getCadestabR11
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodBalada_$cdefaultLayout
                     (let {
                        x3 :: Text.Blaze.Html.Html
                        = case enctype of wild1 {
                            Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                            Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                      } in
                      let {
                        a37 :: Yesod.Core.Types.RY Foundation.Balada
                               -> Text.Blaze.Html.Html
                          {- Arity: 1 -}
                        = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                      } in
                      let {
                        a38 :: Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route Foundation.Balada)
                        = Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Balada)
                            a37
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Balada))
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                      } in
                      let {
                        lvl126 :: ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.Balada GHC.Types.IO))))
                        = (GHC.Tuple.(),
                           a38
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                      } in
                      let {
                        a39 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Balada GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A><L,U>,
                             Unfolding: InlineRule (2, True, False)
                                        (\ eta :: Yesod.Core.Types.HandlerData
                                                    Foundation.Balada
                                                    (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                           eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                         (# eta2,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Balada)
                                                (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                                                 x3)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Balada))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N)))_R)_R) #)) -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          (# eta2, lvl126 #)
                      } in
                      let {
                        a40 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ eta2 :: Yesod.Core.Types.HandlerData
                                                     Foundation.Balada
                                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.NTCo:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N <GHC.Types.IO>_N)
                                                  (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((<()>_R,
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Balada>_N
                                                                    <GHC.Types.IO>_N))_R)_R))_R)_R))
                                           (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Balada
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Balada)
                                              dt1 })) -}
                        = \ eta2 :: Yesod.Core.Types.HandlerData
                                      Foundation.Balada
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.NTCo:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N)
                                   (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((<()>_R,
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.Balada>_N
                                                     <GHC.Types.IO>_N))_R)_R))_R)_R))
                            (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Balada
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Balada)
                               dt1 })
                      } in
                      let {
                        lvl127 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a40
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getCadestabR4
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Balada
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                       <Foundation.Balada>_N
                                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            eta
                      } in
                      let {
                        lvl128 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl127
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl129 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadestabR2
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            lvl128
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl130 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR6
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl129
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl131 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a39
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl130
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Balada
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getCadcategoriaR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0]
                                             ((<()>_R,
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                               <Foundation.Balada>_N
                                                               <GHC.Types.IO>_N)))_R)_R))_R))
                              (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                         lvl131
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
e83cf8ed6d8c8766b2637376797807dd
  getCadestabR10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Enviar\">\n\
                   \<h1> Cadastro de estabelecimento Completo</h1>\n"#) -}
fc179a09b5b21fb1eaa1d15e9413314a
  getCadestabR11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Estabelecimento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formEstabelecimento1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Estabelecimento>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
7e30d90906b281d29c40b4c86e03abc9
  getCadestabR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getCadestabR3
                   w4) -}
fb6dbbc0fca2765098143f4e585889e5
  getCadestabR3 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadestabR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
787f6e129343ed98c465dd8b8d246402
  getCadestabR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getCadestabR5 #)) -}
35e8ab28d0b51f3b7a60e717eddf2043
  getCadestabR5 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getCadestabR6
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
749aff7bad5177bb18a7d4a24a571578
  getCadestabR6 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getCadestabR7
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
b1ac065522446c9849c121d362f33b08
  getCadestabR7 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getCadestabR_x) -}
71d7a91c8bee8c761408ef422d11c8ca
  getCadestabR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadestabR9) -}
d0cd7db8fbb76481118b80896ee07bbe
  getCadestabR9 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getCadestabR10) -}
c1a7023c61cf3aea21c47a5d9d70dd33
  getCadestabR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadestabR8) -}
ace5ed34fdc31eaabc59dd16f3300841
  getCadfaixaprecoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadfaixaprecoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
3cf181e866b79fdf652a7b74feda7776
  getCadfaixaprecoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getCadfaixaprecoR11
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodBalada_$cdefaultLayout
                     (let {
                        x3 :: Text.Blaze.Html.Html
                        = case enctype of wild1 {
                            Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                            Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                      } in
                      let {
                        a37 :: Yesod.Core.Types.RY Foundation.Balada
                               -> Text.Blaze.Html.Html
                          {- Arity: 1 -}
                        = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                      } in
                      let {
                        a38 :: Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route Foundation.Balada)
                        = Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Balada)
                            a37
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Balada))
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                      } in
                      let {
                        lvl126 :: ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.Balada GHC.Types.IO))))
                        = (GHC.Tuple.(),
                           a38
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                      } in
                      let {
                        a39 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Balada GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A><L,U>,
                             Unfolding: InlineRule (2, True, False)
                                        (\ eta :: Yesod.Core.Types.HandlerData
                                                    Foundation.Balada
                                                    (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                           eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                         (# eta2,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Balada)
                                                (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                                                 x3)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Balada))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N)))_R)_R) #)) -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          (# eta2, lvl126 #)
                      } in
                      let {
                        a40 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ eta2 :: Yesod.Core.Types.HandlerData
                                                     Foundation.Balada
                                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.NTCo:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N <GHC.Types.IO>_N)
                                                  (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((<()>_R,
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Balada>_N
                                                                    <GHC.Types.IO>_N))_R)_R))_R)_R))
                                           (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Balada
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Balada)
                                              dt1 })) -}
                        = \ eta2 :: Yesod.Core.Types.HandlerData
                                      Foundation.Balada
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.NTCo:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N)
                                   (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((<()>_R,
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.Balada>_N
                                                     <GHC.Types.IO>_N))_R)_R))_R)_R))
                            (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Balada
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Balada)
                               dt1 })
                      } in
                      let {
                        lvl127 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a40
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getCadfaixaprecoR4
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Balada
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                       <Foundation.Balada>_N
                                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            eta
                      } in
                      let {
                        lvl128 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl127
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl129 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadfaixaprecoR2
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            lvl128
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl130 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR6
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl129
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl131 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a39
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl130
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Balada
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getCadcategoriaR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0]
                                             ((<()>_R,
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                               <Foundation.Balada>_N
                                                               <GHC.Types.IO>_N)))_R)_R))_R))
                              (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                         lvl131
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
6f0dab61a744896c06803a826dd5968d
  getCadfaixaprecoR10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Enviar\">\n\
                   \<h1> Faixa de preco estabelecido</h1>\n"#) -}
1035eb9a48bf8cf7c15f9f9633ef3224
  getCadfaixaprecoR11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Faixa_preco
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formFaixapreco1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Faixa_preco>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
6a8eb3b2ae2e6ef3b55456f727a81b5e
  getCadfaixaprecoR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getCadfaixaprecoR3
                   w4) -}
f8cb0a04a6bd9f6a6df1bc3da0a4e21a
  getCadfaixaprecoR3 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadfaixaprecoR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
756c4ea4cccffe047326fcc2e6521106
  getCadfaixaprecoR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getCadfaixaprecoR5 #)) -}
ce160657c1088377f8a0a960a4cb7b25
  getCadfaixaprecoR5 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getCadfaixaprecoR6
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
e73183aabb34ddd976e344ef45d5bc3d
  getCadfaixaprecoR6 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getCadfaixaprecoR7
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
9a407cea2e0772dc54697608ec74cfe5
  getCadfaixaprecoR7 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getCadfaixaprecoR_x) -}
20d6d9f95e051f75ce86f04d5a9a8eda
  getCadfaixaprecoR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadfaixaprecoR9) -}
e075bec228e5a7724fed4b5843e213b6
  getCadfaixaprecoR9 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handlers.getCadfaixaprecoR10) -}
3e28a17c8a0e60a34c899115a19bd62e
  getCadfaixaprecoR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadfaixaprecoR8) -}
6d26d51098e9cb45f0e05b72b31dface
  getCadpessoaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadpessoaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
19245553262975087874f9ba52a51149
  getCadpessoaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getCadpessoaR11
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodBalada_$cdefaultLayout
                     (let {
                        x3 :: Text.Blaze.Html.Html
                        = case enctype of wild1 {
                            Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                            Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                      } in
                      let {
                        a37 :: Yesod.Core.Types.RY Foundation.Balada
                               -> Text.Blaze.Html.Html
                          {- Arity: 1 -}
                        = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                      } in
                      let {
                        a38 :: Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route Foundation.Balada)
                        = Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Balada)
                            a37
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Balada))
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                      } in
                      let {
                        lvl126 :: ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.Balada GHC.Types.IO))))
                        = (GHC.Tuple.(),
                           a38
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                      } in
                      let {
                        a39 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Balada GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A><L,U>,
                             Unfolding: InlineRule (2, True, False)
                                        (\ eta :: Yesod.Core.Types.HandlerData
                                                    Foundation.Balada
                                                    (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                           eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                         (# eta2,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Balada)
                                                (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                                                 x3)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Balada))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N)))_R)_R) #)) -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          (# eta2, lvl126 #)
                      } in
                      let {
                        a40 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ eta2 :: Yesod.Core.Types.HandlerData
                                                     Foundation.Balada
                                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.NTCo:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N <GHC.Types.IO>_N)
                                                  (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((<()>_R,
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Balada>_N
                                                                    <GHC.Types.IO>_N))_R)_R))_R)_R))
                                           (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Balada
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Balada)
                                              dt1 })) -}
                        = \ eta2 :: Yesod.Core.Types.HandlerData
                                      Foundation.Balada
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.NTCo:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N)
                                   (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((<()>_R,
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.Balada>_N
                                                     <GHC.Types.IO>_N))_R)_R))_R)_R))
                            (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Balada
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Balada)
                               dt1 })
                      } in
                      let {
                        lvl127 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a40
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getCadpessoaR4
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Balada
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                       <Foundation.Balada>_N
                                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            eta
                      } in
                      let {
                        lvl128 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl127
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl129 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadpessoaR2
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            lvl128
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl130 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR6
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl129
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl131 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a39
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl130
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Balada
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getCadcategoriaR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0]
                                             ((<()>_R,
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                               <Foundation.Balada>_N
                                                               <GHC.Types.IO>_N)))_R)_R))_R))
                              (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                         lvl131
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
35c45c080dde4d012744069f020ea45d
  getCadpessoaR10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Enviar\">\n\
                   \<h1> Cadastro Completo</h1>\n"#) -}
6a9f7b311b81f64bd7b1f7cf8c914b15
  getCadpessoaR11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Pessoas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formPessoa1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Pessoas>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
b62f60fec143aad152a2982bbd6ed7c4
  getCadpessoaR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getCadpessoaR3
                   w4) -}
edbcfe81b38d664cb2723e592f13395e
  getCadpessoaR3 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadpessoaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
4b23bc93bf509b57ef0f621b292e19d4
  getCadpessoaR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getCadpessoaR5 #)) -}
4f12f9261ee48255cc71b117ae3ebb6c
  getCadpessoaR5 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getCadpessoaR6
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
198f515efe418329356f55424def3a3d
  getCadpessoaR6 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getCadpessoaR7
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
da2f0d0a78fa900c5c1ebb069e0da6b4
  getCadpessoaR7 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getCadpessoaR_x) -}
153391ad3ed99b5553ea442b5c2088ec
  getCadpessoaR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadpessoaR9) -}
a579a90013c5cd028f1779d03f784cf4
  getCadpessoaR9 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getCadpessoaR10) -}
2808c8f498d8bf1310c2fc720bd3d9c3
  getCadpessoaR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadpessoaR8) -}
c2691d89a09f53e4d6f8d3389748bf56
  getCadsubcategR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadsubcategR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
20928f03b9174b44bb3652f887cc36c2
  getCadsubcategR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getCadsubcategR11
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodBalada_$cdefaultLayout
                     (let {
                        x3 :: Text.Blaze.Html.Html
                        = case enctype of wild1 {
                            Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                            Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                      } in
                      let {
                        a37 :: Yesod.Core.Types.RY Foundation.Balada
                               -> Text.Blaze.Html.Html
                          {- Arity: 1 -}
                        = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                      } in
                      let {
                        a38 :: Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route Foundation.Balada)
                        = Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Balada)
                            a37
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Balada))
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                      } in
                      let {
                        lvl126 :: ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.Balada GHC.Types.IO))))
                        = (GHC.Tuple.(),
                           a38
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                      } in
                      let {
                        a39 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Balada GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A><L,U>,
                             Unfolding: InlineRule (2, True, False)
                                        (\ eta :: Yesod.Core.Types.HandlerData
                                                    Foundation.Balada
                                                    (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                           eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                         (# eta2,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Balada)
                                                (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                                                 x3)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Balada))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N)))_R)_R) #)) -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          (# eta2, lvl126 #)
                      } in
                      let {
                        a40 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ eta2 :: Yesod.Core.Types.HandlerData
                                                     Foundation.Balada
                                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.NTCo:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N <GHC.Types.IO>_N)
                                                  (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((<()>_R,
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Balada>_N
                                                                    <GHC.Types.IO>_N))_R)_R))_R)_R))
                                           (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Balada
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Balada)
                                              dt1 })) -}
                        = \ eta2 :: Yesod.Core.Types.HandlerData
                                      Foundation.Balada
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.NTCo:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N)
                                   (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((<()>_R,
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.Balada>_N
                                                     <GHC.Types.IO>_N))_R)_R))_R)_R))
                            (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Balada
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Balada)
                               dt1 })
                      } in
                      let {
                        lvl127 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a40
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getCadsubcategR4
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Balada
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                       <Foundation.Balada>_N
                                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            eta
                      } in
                      let {
                        lvl128 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl127
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl129 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadsubcategR2
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            lvl128
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl130 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getCadcategoriaR6
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl129
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl131 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a39
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl130
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Balada
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getCadcategoriaR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0]
                                             ((<()>_R,
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                               <Foundation.Balada>_N
                                                               <GHC.Types.IO>_N)))_R)_R))_R))
                              (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                         lvl131
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
5f2739df7f9d78e4ef0e8374e66d65cc
  getCadsubcategR10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Enviar\">\n\
                   \<h1> Cadastro de subcategoria Completo</h1>\n"#) -}
512b5d209d4862c5d2321bf16d4271e5
  getCadsubcategR11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Sub_categ_estab
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formSubcategoria1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Sub_categ_estab>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
524346650a1c85367631b28a3980f10c
  getCadsubcategR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getCadsubcategR3
                   w4) -}
053fd8bea723c45adc335ef36a8622c0
  getCadsubcategR3 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadsubcategR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
88881851458bd96d34f45a124c699a7b
  getCadsubcategR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getCadsubcategR5 #)) -}
84ce139187ffa9a76fa8b43f08f558b8
  getCadsubcategR5 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getCadsubcategR6
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
fdb022678c51d2d15e5bf7084c8ac59a
  getCadsubcategR6 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getCadsubcategR7
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
67b57d0e9254a02c55614beb2e7abd9b
  getCadsubcategR7 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getCadsubcategR_x) -}
ff491b2bb953e787bd4c041b234b3571
  getCadsubcategR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getCadsubcategR9) -}
10a5b8fb2276c6cc56800c97fd02cba9
  getCadsubcategR9 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getCadsubcategR10) -}
eaf5469680460e96c7a3508612637ff8
  getCadsubcategR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getCadsubcategR8) -}
7566e7bbf242608557a4982de90ce356
  getErroR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getErroR1
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
c32bdaaeef128292188a45dd81373cbc
  getErroR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2,
     Unfolding: (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta, Handlers.getErroR2 #)) -}
f9d01836425dfeb0d67dc52d7d4828d7
  getErroR2 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getErroR3
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
9cc5082cac99611936d53e61c1a06499
  getErroR3 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getErroR4
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
75b30ee2b27b564acd272a6eea11fb3f
  getErroR4 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getErroR_x) -}
05dcf41ce91cf1975d47a89acf65ede5
  getErroR5 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getErroR6) -}
b97ccf9274ea531d10d76a06911be084
  getErroR6 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getErroR7) -}
fbfad99899cc28fe64b4d6ab02349341
  getErroR7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> Erro de cadastro</h1>\n"#) -}
9814b330025e65885d1bdaf4a784eab4
  getErroR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getErroR5) -}
0de82c58edca1dcbafff90f7e507fe07
  getHomeR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getHomeR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))) -}
76213412c17833264080f2008c718d41
  getHomeR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR81
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
c81fcac45e326d118350bcd28dccd9cd
  getHomeR10 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR53
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR11
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
79b106890d4ea788a7a89d2d1386f84e
  getHomeR11 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR51
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR12
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
6385937f8ea6e980b1804533e9d9865b
  getHomeR12 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR47
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR13
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
741976e8ef1e83f194666bf90f699c15
  getHomeR13 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR45
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR14
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
b453f07e5f9fbf4edc8a8ad42719a7c4
  getHomeR14 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR41
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR15
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
c556254cfdd3f5c7249c4383be24fe83
  getHomeR15 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR39
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR16
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
f087251eb2e093b45e6c209b3cf23436
  getHomeR16 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR35
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR17
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
8eaf2ae5ed3524793cf7255fb92613ea
  getHomeR17 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR33
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR18
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
66b82e6e3c3b7eaf5aa7e4ed70d4eaf3
  getHomeR18 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR29
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR19
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
6cb5da4d7d966a45e0329f24b96f697c
  getHomeR19 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR27
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR20
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Balada>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
e7ed2778489f7ed7e364cf99de016219
  getHomeR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR77
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR3
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   (case eta of wild1 { Yesod.Core.Types.HandlerData ds1 ds2 dt ds3 dt1 ->
                    (Yesod.Core.Types.HandlerData
                       @ Foundation.Balada
                       @ ()
                       ds1
                       ds2
                       dt
                       (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                          @ Foundation.Balada)
                       dt1)
                      `cast`
                    (Yesod.Core.Types.HandlerData
                       <Foundation.Balada>_N
                       (Sub (Sym (Yesod.Core.Types.TFCo:R:MonadRouteIO[0]))))_R })) -}
8264a0788c5b8d5e916fb8f10b04bc02
  getHomeR20 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getHomeR21 #)) -}
13f489272f25f6460f6fb4b06eb29d8a
  getHomeR21 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getHomeR22
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
b159c5f8a1837c02e4c6e70a06787295
  getHomeR22 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getHomeR23
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
14ac8ecf567c029d67325bbef803178b
  getHomeR23 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getHomeR_x) -}
02c7ae7d46fd30180995711e7b19f212
  getHomeR24 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHomeR25) -}
bdde242e9e9b9bc1fc634ede3d0b919e
  getHomeR25 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR26) -}
484ceb73848c485d74c4183fa6191a38
  getHomeR26 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   ">Saiba Mais</li>\n"#) -}
4b2da4320a9131cea56347dce03039d2
  getHomeR27 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR28
                   w4) -}
4c5df7af29ffc7dc2562138fd2cfa104
  getHomeR28 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.AboutR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
962d7452bf01270194cb2789d84fe96a
  getHomeR29 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x1)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
c7cb7445882e0697a54ce1d1de910cd3
  getHomeR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR75
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR4
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
bba8f21d6313bc0f9a37c5c021e1a685
  getHomeR30 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHomeR31) -}
93c3c7342383c3cb01e3c70c7528679f
  getHomeR31 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR32) -}
28d8ba12cb2cb7a078319f24d4f2d1bf
  getHomeR32 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   ">Cadastro de pre\\195\\167os</li>\n\
                   \<li><a href="#) -}
72b2f011164e06429a157980608df6f2
  getHomeR33 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR34
                   w4) -}
2b2133cdc1e9adf7244dc30b83be913b
  getHomeR34 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadfaixaprecoR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
ae98174378f2432411f4917caf66a1ae
  getHomeR35 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x2)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
531b19bc0ba55779af825a15c2d45592
  getHomeR36 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHomeR37) -}
623942969f7e2d957d87e1bf10d59504
  getHomeR37 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR38) -}
3e3b511babe1a104916e38ae5013a573
  getHomeR38 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   ">Cadastro dia</li>\n\
                   \<li><a href="#) -}
8b4b96477a3c88fabe385852f7681cab
  getHomeR39 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR40
                   w4) -}
2970a70bca59c0e8514e808339ea690a
  getHomeR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR71
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR5
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
4b36e9a07680a2a2ec8913915beca536
  getHomeR40 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CaddiaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
627d1db80943ab097498e87bbced4784
  getHomeR41 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x3)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
e96dfad0e473eaf780928188a6cdf5d6
  getHomeR42 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHomeR43) -}
c85504108c432ac75b0c6633dd069848
  getHomeR43 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR44) -}
25110a0223cd8a6886d2cacfded9d680
  getHomeR44 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   ">Cadastro SubCategoria</li>\n\
                   \<li><a href="#) -}
52cdc511ca3333c9c97b22352531261f
  getHomeR45 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR46
                   w4) -}
807df6f992b62e3a888c9368cbc79727
  getHomeR46 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadsubcategR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
d538d620959d3632b2982c9bbfd6eb58
  getHomeR47 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x4)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
68fddf462aa8fa50c13b6d5ca30df89a
  getHomeR48 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHomeR49) -}
7d98a78f893b500f0caccf2f9860d055
  getHomeR49 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR50) -}
f415132ed21608dece6fe828013f6611
  getHomeR5 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR69
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR6
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
59b092c85af7eae36dab4f2fdb76d0a5
  getHomeR50 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   ">Cadastro categoria</li>\n\
                   \<li><a href="#) -}
26629dee8ac4e2188f59d1ae4dfed9fa
  getHomeR51 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR52
                   w4) -}
0fde8eb65b169a9ebc6da180c188ef90
  getHomeR52 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadcategoriaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
f93042d228f8cf8ac060c0c3bcf50565
  getHomeR53 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x5)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
bf17febb4d0932f910c6a72ebc2dd1e2
  getHomeR54 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHomeR55) -}
8c6be19cde3d66022bae6696e5b3604e
  getHomeR55 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR56) -}
8953fe945ccb15dc8d5666ea5ad1f18d
  getHomeR56 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   ">Cadastro estabelecimento</li>\n\
                   \<li><a href="#) -}
9ebc95d07996c5f6123d88a642c62de0
  getHomeR57 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR58
                   w4) -}
60140e534f1b1da37a1e003ba1bafdf3
  getHomeR58 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadestabR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
c97917fbdb520b9f211c3e724b53858c
  getHomeR59 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x6)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
c8c3ffe50860c2e6a181f9822d708f37
  getHomeR6 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR65
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR7
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
df54c7d7db3d14af51fce083643bd707
  getHomeR60 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHomeR61) -}
f8decdc8406b38ce7afd9a1c10572e40
  getHomeR61 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR62) -}
f3aba9e67054aaafc719dccb95276b08
  getHomeR62 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   ">CADASTRE-SE</li>\n\
                   \<li><a href="#) -}
87f6b57c08e6668982c1878f83d3ff7f
  getHomeR63 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR64
                   w4) -}
88cbc5697f33de8bdb6e02a5f19be24d
  getHomeR64 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.CadpessoaR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
9ceabc8c47ae42fbf6b59e38e37732c4
  getHomeR65 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x7)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
a43da0e4a51269776d7e92d58f871418
  getHomeR66 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHomeR67) -}
e2bb72c84bc579a492f3b0bc139ece4f
  getHomeR67 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR68) -}
25c7b1de9a68ada49f59a4a542e1631d
  getHomeR68 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   ">LOGIN></li>\n\
                   \<li><a href="#) -}
b6c0e056474ee21215afc412c2d12b86
  getHomeR69 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR70
                   w4) -}
e9423c716534cfce2e35a0115c1237ce
  getHomeR7 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR63
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR8
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
e90e4285cf1eb949586b13de71b72995
  getHomeR70 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.LoginR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
712c5bdb99981a9ab9200c14b4a402d7
  getHomeR71 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x8)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
376ae650b27715fe0a72c0d07536d58a
  getHomeR72 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHomeR73) -}
07e58effe3444887d7208b5ead264858
  getHomeR73 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR74) -}
c54c0a6911838f66f83230bc971ae8ac
  getHomeR74 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   ">In\\195\\173cio</li>\n\
                   \<li><a href="#) -}
27180a0873addc4d63b2f35ae9ccdeba
  getHomeR75 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getHomeR76
                   w4) -}
927367e93f9e30d188d44dafbef3bd3d
  getHomeR76 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.HomeR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
4e3a4777b93a82b7124f1591cbb27a86
  getHomeR77 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getHomeR_x9)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
3f4867df4024b0f8b904324e3b434596
  getHomeR78 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getHomeR79) -}
cdb36432ba23e3a7ac456378e817c72a
  getHomeR79 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getHomeR80) -}
37f2faed7f032b63010b3268ca94a4b9
  getHomeR8 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR59
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getHomeR9
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
582812662160ec293b2413a70b1b429d
  getHomeR80 :: Data.Text.Internal.Text
50bfd53f6273d0efa454f2abbd60e339
  getHomeR81 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Balada GHC.Types.IO))>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Balada GHC.Types.IO)))>_R))
                       (GHC.Types.:
                          @ (Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                          (Yesod.Core.Types.Stylesheet
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))
                             (Yesod.Core.Types.Local
                                @ (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))
                                (Foundation.StaticR
                                   Foundation.style_css1
                                     `cast`
                                   (Sub (Sym (Yesod.Static.TFCo:R:RouteStatic[0]))))
                                  `cast`
                                (Trans
                                     (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                                     (Yesod.Routes.Class.Route
                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R))
                             (GHC.Types.[]
                                @ (Data.Text.Internal.Text, Data.Text.Internal.Text))))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.Balada GHC.Types.IO)))>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Balada GHC.Types.IO))>_R))) #)) -}
dd975694c140b6c32f771e9afc02d2ff
  getHomeR9 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getHomeR57
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getHomeR10
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
e0e904c7d76fc1068c237d97aab0df07
  getHomeR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR24) -}
583ed9fd14a47339fd7869c017760b02
  getHomeR_x1 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR30) -}
74da21b974c6c79d41b318fe0ea8ef0e
  getHomeR_x2 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR36) -}
64c123b1562ff81de4efea04e911b983
  getHomeR_x3 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR42) -}
3d557875bc0bfd8da28d2a8fa1eb27fe
  getHomeR_x4 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR48) -}
36e228f65ffa5daa890fcc10b9e8e86e
  getHomeR_x5 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR54) -}
45bfa04b5c8a6c075e33b2d4b7769ee6
  getHomeR_x6 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR60) -}
6bad65a65584dedf36bf5573f61d1f10
  getHomeR_x7 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR66) -}
15f29497299a28b4b1d406d5706b9bef
  getHomeR_x8 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR72) -}
8f5e29abf2039a769872cffb8aea6dd2
  getHomeR_x9 :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getHomeR78) -}
cab56de75bf3d13d51b408dbf79164f6
  getLoginR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getLoginR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
4c9d66c7c6f911413dcd26b4f3baa27d
  getLoginR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getLoginR31
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodBalada_$cdefaultLayout
                     (let {
                        x3 :: Text.Blaze.Html.Html
                        = case enctype of wild1 {
                            Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                            Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                      } in
                      let {
                        a37 :: Yesod.Core.Types.RY Foundation.Balada
                               -> Text.Blaze.Html.Html
                          {- Arity: 1 -}
                        = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                      } in
                      let {
                        a38 :: Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route Foundation.Balada)
                        = Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Balada)
                            a37
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)])
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Balada
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Balada))
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Balada>_R))
                      } in
                      let {
                        lvl126 :: ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.Balada GHC.Types.IO))))
                        = (GHC.Tuple.(),
                           a38
                             `cast`
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                      } in
                      let {
                        a39 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((),
                                      Yesod.Core.Types.GWData
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetT
                                                 Foundation.Balada GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A><L,U>,
                             Unfolding: InlineRule (2, True, False)
                                        (\ eta :: Yesod.Core.Types.HandlerData
                                                    Foundation.Balada
                                                    (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                           eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                         (# eta2,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Balada)
                                                (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                                                 x3)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Balada)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Balada)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Balada
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Balada))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Balada>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N)))_R)_R) #)) -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          (# eta2, lvl126 #)
                      } in
                      let {
                        a40 :: Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ eta2 :: Yesod.Core.Types.HandlerData
                                                     Foundation.Balada
                                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.NTCo:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                             <Foundation.Balada>_N
                                                             <GHC.Types.IO>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N <GHC.Types.IO>_N)
                                                  (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((<()>_R,
                                                         (Yesod.Core.Types.GWData
                                                            (Yesod.Routes.Class.Route
                                                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Balada>_N
                                                                    <GHC.Types.IO>_N))_R)_R))_R)_R))
                                           (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Balada
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Balada)
                                              dt1 })) -}
                        = \ eta2 :: Yesod.Core.Types.HandlerData
                                      Foundation.Balada
                                      (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.NTCo:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                              <Foundation.Balada>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N)
                                   (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((<()>_R,
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.Balada>_N
                                                     <GHC.Types.IO>_N))_R)_R))_R)_R))
                            (case eta2 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Balada
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Balada)
                               dt1 })
                      } in
                      let {
                        lvl127 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a40
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            Handlers.getLoginR16
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl128 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getLoginR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl127
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl129 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getLoginR10
                              `cast`
                            (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            lvl128
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl130 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getLoginR6
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl129
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      let {
                        lvl131 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.Balada))
                          {- Arity: 2 -}
                        = \ ds :: ()
                            eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Balada
                                     (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Balada
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            a39
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Balada>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                            lvl130
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Balada
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handlers.getLoginR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0]
                                             ((<()>_R,
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                               <Foundation.Balada>_N
                                                               <GHC.Types.IO>_N)))_R)_R))_R))
                              (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                         lvl131
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                        <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
7e890034e9776de7506da762be87d4e4
  getLoginR10 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getLoginR11
                   w4) -}
120e3963916df116aa729be42085d65a
  getLoginR11 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.LoginR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
98fe45a232418973e74c7529fad62433
  getLoginR12 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getLoginR_x2)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
b46ae1434e2cb827e8fb322c6076ef3b
  getLoginR13 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getLoginR14) -}
dbe3066a5dd82535cf3b503b0732acbc
  getLoginR14 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getLoginR15) -}
20ea2df7e90752f156810177b66cbc76
  getLoginR15 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "\">"#) -}
bbff5c1b46345310588a43dba1ab0248
  getLoginR16 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getLoginR27
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getLoginR17
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
73ff9ec814b305039aad10569cd063fd
  getLoginR17 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getLoginR25
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getLoginR18
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Balada>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
17508b935ede8cd052af99eaa45e19d7
  getLoginR18 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Handlers.getLoginR19 #)) -}
b5b0cb0193a16c9a768f8db68c9bbe35
  getLoginR19 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getLoginR20
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
654eef1c84d072d91021e8e8cef15ae7
  getLoginR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getLoginR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
aca77f0110bc4460a1f1b360001bec2b
  getLoginR20 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getLoginR21
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
dd236e080b9d12d8a8bbc7c2b3536631
  getLoginR21 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getLoginR_x3) -}
f9da9c6d864cf5aeca52b851fa25a1af
  getLoginR22 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getLoginR23) -}
79ccd14f7a842814d28512894e4051de
  getLoginR23 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getLoginR24) -}
bfeb01d456e7f9a6cf6af13c11a8b28b
  getLoginR24 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\">Pagina Inicial</a>\n\
                   \</form>\n"#) -}
c51eab8996cb7fd22531e2e9328bee0d
  getLoginR25 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Balada))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Balada
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Balada
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handlers.getAboutR12
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Balada>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.Balada>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handlers.getLoginR26
                   w4) -}
80b8e53b28f21af576f1d8b02340a0e3
  getLoginR26 ::
    (Yesod.Routes.Class.Route Foundation.Balada
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a37 :: Data.Text.Internal.Text
                   = urender
                       Foundation.HomeR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a38 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a37
                 } in
                 let {
                   x3 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a38
                 } in
                 let {
                   a39 :: Yesod.Core.Types.RY Foundation.Balada
                          -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.Balada -> x3
                 } in
                 let {
                   a40 :: Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route Foundation.Balada)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Balada)
                       a39
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Balada)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Balada
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Balada))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Balada>_R))
                 } in
                 let {
                   lvl126 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a40
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta2, lvl126 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.Balada>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
cfe6280262789ebaa79898fdf43495d7
  getLoginR27 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getLoginR_x4)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
f59caff2dbfb64155d2d00ee69179890
  getLoginR28 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getLoginR29) -}
2d11363c8777d7bd4f07d8dc53375f9b
  getLoginR29 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getLoginR30) -}
c05d1747559d3b9b99ad47ccb84ada9b
  getLoginR3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getLoginR4) -}
cfb77ece03531fb68be8c7d399b56a70
  getLoginR30 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Login\">\n\
                   \<a href=\""#) -}
b617cf0c5f7edd1d0d8fe6ec83b4057c
  getLoginR31 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formLogin1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult
                                       (Data.Text.Internal.Text, Data.Text.Internal.Text)>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
fa4236829d1d4a9e8c7c5adb20f15662
  getLoginR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getLoginR5) -}
03ef479e73b80250c3ee98e34f3ec708
  getLoginR5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<form method=\"post\" enctype=\""#) -}
86ec5679c875afd5f1023940ba3c53fb
  getLoginR6 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Balada)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                         Handlers.getLoginR_x1)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Balada
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Balada))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Balada>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
38c7aa189fa96af8e1ab7fab7f6cb3e7
  getLoginR7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.getLoginR8) -}
20cb5226ccfa4fe56a373e13da0c3007
  getLoginR8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getLoginR9) -}
3a1ec683839abe87d8c5bcfb49525be7
  getLoginR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "\" action=\""#) -}
c95ebd369f06784e385b3e11d6f0eb3b
  getLoginR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getLoginR3) -}
6387c23e930e659578a54bc6956cca62
  getLoginR_x1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getLoginR7) -}
996973e97288c8c44e7823f8d3476aed
  getLoginR_x2 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getLoginR13) -}
46bb286b102d22556d1e821e3a1d46d0
  getLoginR_x3 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getLoginR22) -}
1778cedb942d88bece181229abf3ac67
  getLoginR_x4 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getLoginR28) -}
ad6a09ce6a509c0379ee8e6dd64873aa
  getLogoutR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <S(SSLSL),1*U(U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getLogoutR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
850b71e0f4315705028274c42fb486cd
  getLogoutR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <S(SSLSL),1*U(U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case eta
                        `cast`
                      (Yesod.Core.Types.HandlerData
                         (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                   <Foundation.Balada>_N <GHC.Types.IO>_N))
                         (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R of wild { Yesod.Core.Types.HandlerData ds1 ds2 dt ds3 dt1 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Yesod.Core.Types.GHState
                        dt
                        eta2 of ds4 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Yesod.Core.Types.GHState
                        dt
                        (Yesod.Core.Handler.deleteSession1 Handlers.getLogoutR9 ipv1)
                        ipv of s2# { DEFAULT ->
                 (Handlers.getLogoutR_k
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    wild
                      `cast`
                    (Yesod.Core.Types.HandlerData
                       (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N)
                       (Sub (Sym (Yesod.Core.Types.TFCo:R:MonadRouteIO[0]))))_R)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   s2# } } }) -}
a948fb09b1db109545059c00b0c8e0cb
  getLogoutR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO)))) #)
  {- Arity: 2,
     Unfolding: (\ eta2 :: Yesod.Core.Types.HandlerData
                             Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta, Handlers.getLogoutR3 #)) -}
5eb5698d17fa29452183e47c89b800e9
  getLogoutR3 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Balada GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getLogoutR4
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)))_R)_R)) -}
715cdabb850293166ee871234efb63a1
  getLogoutR4 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route Foundation.Balada)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   Handlers.getLogoutR5
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Balada)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Balada)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Balada
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Balada))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Balada>_R))) -}
1707f2d9f3025882360a31db7cb94ca6
  getLogoutR5 ::
    Yesod.Core.Types.RY Foundation.Balada -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Balada ->
                 Handlers.getLogoutR_x) -}
0bffc3caa125dd47338bcb4ffd312ac6
  getLogoutR6 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getLogoutR7) -}
176ff5180bc454fd331bbad4984d34fc
  getLogoutR7 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getLogoutR8) -}
34cd35d5dd7b2e89b8ed1d296ea4efbd
  getLogoutR8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> ADEUS!</h1>\n"#) -}
007dd52356077d1060d4ce351b283aba
  getLogoutR9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "_ID"#) -}
1729e0f94543ee7791d61445d3e40833
  getLogoutR_k ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodBalada_$cdefaultLayout
                   Handlers.getLogoutR2
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Balada>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N <()>_N)))) -}
40f60cbcae13f7197385f8c2e271b93f
  getLogoutR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getLogoutR6) -}
fbdca4a6bc3b718d14fef1b30c948631
  getPerfilR ::
    Foundation.PessoasId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U> -}
813ea5bc022a9c08b398036f901ad925
  listaClassificacao ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Classificacao_estab))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Classificacao_estab]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Classificacao_estab]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.listaClassificacao2 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Classificacao_estab]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Classificacao_estab]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Classificacao_estab]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Classificacao_estab)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs2 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Classificacao_estab)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key
                              Foundation.Classificacao_estab)
                         Handlers.listaClassificacao1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Classificacao_estab)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Classificacao_estab)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Classificacao_estab)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Classificacao_estab)>_N)))) -}
f2ad4e5dbb8f05946610ff330bfb594e
  listaClassificacao1 ::
    Database.Persist.Class.PersistEntity.Entity
      Foundation.Classificacao_estab
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key
          Foundation.Classificacao_estab)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Classificacao_estab ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Classificacao_estab ds4 ds5 ->
                  ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Classificacao_estab
                    ent)) -}
32e51d79189d87d659da1b84bb5858bd
  listaClassificacao2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Classificacao_estab]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Classificacao_estab)))
                   = (Handlers.listaClassificacao_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Classificacao_estab))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Classificacao_estab))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Classificacao_estab))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Classificacao_estab))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Classificacao_estab]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Classificacao_estab)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Classificacao_estab)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Classificacao_estab]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Classificacao_estab]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Classificacao_estab]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Classificacao_estab]>_N)))) -}
11f06c78c3d7000404fdfcb03907d5e7
  listaClassificacao3 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Classificacao_estab]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Classificacao_estab)
                   Handlers.listaClassificacao4
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Classificacao_estab))) -}
56ebbb1e9e191c26382c6ce2d6f061cb
  listaClassificacao4 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Classificacao_estab
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Classificacao_estab
                   @ Data.Text.Internal.Text
                   Handlers.listaClassificacao5
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldClassificacao_estabtyp[0])) <Data.Text.Internal.Text>_N)) -}
79387cbe84e9f048f7e3dd5bcc95ffe6
  listaClassificacao5 ::
    Foundation.R:EntityFieldClassificacao_estabtyp
      Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Classificacao_estabNome_classificacao
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
75dda298f06ac7baaa3ec348db9851d8
  listaClassificacao6 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Classificacao_estab]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Classificacao_estab]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Classificacao_estab)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Classificacao_estab
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityClassificacao_estab
                   (Handlers.categs8 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
d32cc373e4fb55b95a4422cafffe416f
  listaClassificacao_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Classificacao_estab)))
  {- Unfolding: (\ @ site ->
                 Handlers.listaClassificacao6
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Classificacao_estab))
                   Handlers.listaClassificacao3) -}
834a6b48295e2f1d4ce0afca6146560d
  listaDia ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity Foundation.Dia_evento]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Dia_evento]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.listaDia2 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Dia_evento]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Dia_evento]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Dia_evento]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs2 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Dia_evento)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
                         Handlers.listaDia1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Dia_evento)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Dia_evento)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Dia_evento)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Dia_evento)>_N)))) -}
4e3482c8a93415f8b89802f8859fdf32
  listaDia1 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Dia_evento
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Dia_evento ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Dia_evento ds4 -> ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Dia_evento
                    ent)) -}
c3dfb93cd2a0bd6b3513298362c88e76
  listaDia2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Dia_evento]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Dia_evento)))
                   = (Handlers.listaDia_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Dia_evento))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Dia_evento))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Dia_evento))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Dia_evento))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Dia_evento]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Dia_evento)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Dia_evento)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Dia_evento]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Dia_evento]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Dia_evento]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Dia_evento]>_N)))) -}
c32e4dc51f2d3b75c2ce3f30388892c6
  listaDia3 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Dia_evento]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Dia_evento)
                   Handlers.listaDia4
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Dia_evento))) -}
c969c93e2666bab64592ea2ec521b0db
  listaDia4 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Dia_evento
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Dia_evento
                   @ Data.Text.Internal.Text
                   Handlers.listaDia5
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldDia_eventotyp[0])) <Data.Text.Internal.Text>_N)) -}
c0b2fa85e40d8936fe128e58181917b4
  listaDia5 ::
    Foundation.R:EntityFieldDia_eventotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Dia_eventoDc_dia
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
78959a936eabc9c9f1771472e01e7ae5
  listaDia6 ::
    [Database.Persist.Class.PersistEntity.Filter Foundation.Dia_evento]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Dia_evento]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Dia_evento)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Dia_evento
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityDia_evento
                   (Handlers.categs8 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
17c3c0ff6f9b9f1d6c097d65900bd3f3
  listaDia_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Dia_evento)))
  {- Unfolding: (\ @ site ->
                 Handlers.listaDia6
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Dia_evento))
                   Handlers.listaDia3) -}
ce3a1a5f7165a1b788116c36d4d309dd
  listaFaixapreco ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Faixa_preco]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Faixa_preco]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.listaFaixapreco2 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Faixa_preco]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Faixa_preco]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Faixa_preco]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs2 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Faixa_preco)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                         Handlers.listaFaixapreco1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Faixa_preco)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Faixa_preco)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Faixa_preco)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Faixa_preco)>_N)))) -}
13ecdee5228da962f0fcea36b0bf855e
  listaFaixapreco1 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Faixa_preco
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Faixa_preco ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Faixa_preco ds4 ds5 ds3 -> ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Faixa_preco
                    ent)) -}
10cd15b840181ebc14c6949559f66b86
  listaFaixapreco2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Faixa_preco]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Faixa_preco)))
                   = (Handlers.listaFaixapreco_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Faixa_preco))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Faixa_preco))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Faixa_preco))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Faixa_preco))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Faixa_preco]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Faixa_preco)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Faixa_preco)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Faixa_preco]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Faixa_preco]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Faixa_preco]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Faixa_preco]>_N)))) -}
396ef7f58ffd8f8cbbded6e571017675
  listaFaixapreco3 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Faixa_preco]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Faixa_preco)
                   Handlers.listaFaixapreco4
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Faixa_preco))) -}
dd1c7a53ba40e3a328cf6e243228a838
  listaFaixapreco4 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Faixa_preco
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Faixa_preco
                   @ Data.Text.Internal.Text
                   Handlers.listaFaixapreco5
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldFaixa_precotyp[0])) <Data.Text.Internal.Text>_N)) -}
db8aa0e724f21151b50ca4e53264fb06
  listaFaixapreco5 ::
    Foundation.R:EntityFieldFaixa_precotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Faixa_precoNome_faixa_preco
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
b14f80b4e14dadaf89470feb5aeb73c2
  listaFaixapreco6 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Faixa_preco]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Faixa_preco]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Faixa_preco)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Faixa_preco
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityFaixa_preco
                   (Handlers.categs8 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
050fe67f8c63e2c80b292301b1bd52cd
  listaFaixapreco_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Faixa_preco)))
  {- Unfolding: (\ @ site ->
                 Handlers.listaFaixapreco6
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Faixa_preco))
                   Handlers.listaFaixapreco3) -}
daff4d31b63f24b21d5675f5eb77f1f2
  listaSubcategoria ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Sub_categ_estab))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Sub_categ_estab]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Sub_categ_estab]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.listaSubcategoria2 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Sub_categ_estab]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Sub_categ_estab]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Sub_categ_estab]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Sub_categ_estab)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.categs2 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Sub_categ_estab)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key
                              Foundation.Sub_categ_estab)
                         Handlers.listaSubcategoria1
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Sub_categ_estab)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Sub_categ_estab)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Sub_categ_estab)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Sub_categ_estab)>_N)))) -}
969d68e80690ac3216d903aa54d4cd4a
  listaSubcategoria1 ::
    Database.Persist.Class.PersistEntity.Entity
      Foundation.Sub_categ_estab
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key
          Foundation.Sub_categ_estab)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Sub_categ_estab ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Sub_categ_estab ds4 ds5 -> ds4 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Sub_categ_estab
                    ent)) -}
5d4753124a2e091a43084219d5d985e3
  listaSubcategoria2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Sub_categ_estab]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Sub_categ_estab)))
                   = (Handlers.listaSubcategoria_m1 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Sub_categ_estab))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Sub_categ_estab))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Sub_categ_estab))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Sub_categ_estab))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Sub_categ_estab]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Sub_categ_estab)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Sub_categ_estab)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Sub_categ_estab]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Sub_categ_estab]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Sub_categ_estab]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Sub_categ_estab]>_N)))) -}
56077cc75fafe0a69c5b6812134828d7
  listaSubcategoria3 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Sub_categ_estab]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Sub_categ_estab)
                   Handlers.listaSubcategoria4
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Sub_categ_estab))) -}
a0e0375b2e546cbe14a907528641ff23
  listaSubcategoria4 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Sub_categ_estab
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Sub_categ_estab
                   @ Data.Text.Internal.Text
                   Handlers.listaSubcategoria5
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldSub_categ_estabtyp[0])) <Data.Text.Internal.Text>_N)) -}
9edb17ac398e0c4ab9a5a64469aef841
  listaSubcategoria5 ::
    Foundation.R:EntityFieldSub_categ_estabtyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.Sub_categ_estabNome_sub_categ
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
fa331fde5e94b4d4b05b505e86c05683
  listaSubcategoria6 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Sub_categ_estab]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Sub_categ_estab]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Sub_categ_estab)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Sub_categ_estab
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntitySub_categ_estab
                   (Handlers.categs8 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
29132e91b9b43f71bbd4eab88de50b7d
  listaSubcategoria_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Sub_categ_estab)))
  {- Unfolding: (\ @ site ->
                 Handlers.listaSubcategoria6
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Sub_categ_estab))
                   Handlers.listaSubcategoria3) -}
3381d57a4dd487c6880d583d19f7e691
  postCadcategoriaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadcategoriaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
1678f517e0fe1c3e30ce7f3d65824f11
  postCadcategoriaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadcategoriaR5
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Categoria_estab,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Categoria_estab,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess categoria
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Categoria_estab)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key
                                     Foundation.Categoria_estab)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadcategoriaR3 categoria))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCadcategoriaR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
d988948132314586a5b19e2604b73dc4
  postCadcategoriaR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadcategoriaR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
6b8d87dd22d66720c076062f9d16cb8e
  postCadcategoriaR3 ::
    Foundation.Categoria_estab
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Categoria_estab)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Categoria_estab
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityCategoria_estab) -}
703d27cecd71bd97828ab18334036b35
  postCadcategoriaR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.ErroR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
2eca369a004125c531a0384f05ecd028
  postCadcategoriaR5 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Categoria_estab,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Categoria_estab
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formCategoria1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Categoria_estab>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
5569f8d5afa9a739e730e18f26ba33f1
  postCaddiaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCaddiaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
f044fd233c312073d10fa851dd929ee3
  postCaddiaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCaddiaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Dia_evento,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Dia_evento,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess dia
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCaddiaR3 dia))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCaddiaR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
df3b1d6a332f6a6de20c13d3f436b76e
  postCaddiaR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadfaixaprecoR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
6bc68a65e290501e890bdc9170ef114d
  postCaddiaR3 ::
    Foundation.Dia_evento
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Dia_evento)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Dia_evento
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityDia_evento) -}
c484dd8b174495477b6dff7aa29f5fd5
  postCaddiaR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Dia_evento,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Dia_evento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formDia1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Dia_evento>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
8c1cd885c4c52b89efa6139d106b5cf1
  postCadestabR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadestabR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
4df42856bc0e106ed56c3e12f3e920c6
  postCadestabR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadestabR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Estabelecimento,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Estabelecimento,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess estab
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Estabelecimento)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key
                                     Foundation.Estabelecimento)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadestabR3 estab))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCadestabR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
ec4f8881ac0e5450348469f9ff6084f6
  postCadestabR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadestabR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
5b10e4eb1c4ce747623d051be74c8927
  postCadestabR3 ::
    Foundation.Estabelecimento
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Estabelecimento)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Estabelecimento
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityEstabelecimento) -}
551ad21bfc64ded0adba331b441ba7c6
  postCadestabR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Estabelecimento,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Estabelecimento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formEstabelecimento1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Estabelecimento>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
af3d2442c4e5682b8adc3b9cba3ed37d
  postCadfaixaprecoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadfaixaprecoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
e390e496dce81bdbfa487d07340ab0ea
  postCadfaixaprecoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadfaixaprecoR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Faixa_preco,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Faixa_preco,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess faixapreco
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadfaixaprecoR2 faixapreco))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCaddiaR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
da06565e78ec58cbcb4dbf2b64ef8e88
  postCadfaixaprecoR2 ::
    Foundation.Faixa_preco
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Faixa_preco)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Faixa_preco
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityFaixa_preco) -}
a4ef45b496aae8961e59ff4d7abefb2f
  postCadfaixaprecoR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Faixa_preco,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Faixa_preco
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formFaixapreco1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Faixa_preco>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
5f2c110ac263e9ac9c379aac3c062604
  postCadpessoaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadpessoaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
022e0bdc8dda7a4a4904f26c66961b26
  postCadpessoaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadpessoaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Pessoas,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Pessoas,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess pessoa
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Pessoas)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key Foundation.Pessoas)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadpessoaR3 pessoa))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCadpessoaR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
452b83733e19cafb2babdad4d17b98aa
  postCadpessoaR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadpessoaR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
37aa20ff3565dc15a40d6715ec575411
  postCadpessoaR3 ::
    Foundation.Pessoas
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Pessoas)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Pessoas
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityPessoas) -}
41aaa254fdfd921a7086abb4ec581a79
  postCadpessoaR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Pessoas,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Pessoas
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formPessoa1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Pessoas>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
0c07d60e7912105ce724b72910bdf790
  postCadsubcategR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadsubcategR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
a2028471e613c7f7b0305a4b21fb045c
  postCadsubcategR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadsubcategR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadcategoriaR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess subcategoria
                   -> case (Foundation.$fYesodPersistBalada3
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Balada>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Balada>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Balada>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistBalada2
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Sub_categ_estab)
                             (case ipv3 of wild3 { Foundation.Balada ds5 ds6 -> ds6 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key
                                     Foundation.Sub_categ_estab)
                                Foundation.$fYesodPersistBalada_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadsubcategR3 subcategoria))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      (Handlers.postCadsubcategR2
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Balada>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
867fc60a4ac58974070cf4db3fa4b124
  postCadsubcategR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Balada)
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Balada)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Balada>_N))
                   Foundation.CadsubcategR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteBalada[0])))) -}
7f37e9cfde5ce6ca7bc60c91a932a775
  postCadsubcategR3 ::
    Foundation.Sub_categ_estab
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key
            Foundation.Sub_categ_estab)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Sub_categ_estab
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   Foundation.$fYesodBalada_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntitySub_categ_estab) -}
5ef1a1583f7c5d0c00f362de94ba1669
  postCadsubcategR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Balada
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Sub_categ_estab,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Balada GHC.Types.IO)
                   @ Foundation.Sub_categ_estab
                   @ Foundation.Widget
                   Foundation.$fRenderMessageBaladaFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Balada>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodBalada_$s$fMonadHandlerHandlerT
                   Handlers.formSubcategoria1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Sub_categ_estab>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Balada>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
36664eeca5f984a883926ead937e1897
  postLoginR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postLoginR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Balada>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
518f3e4f9a070ce097724cfd011f7ec3
  postLoginR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Balada (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U)><L,U> -}
instance Yesod.Core.Class.Dispatch.YesodDispatch [Foundation.Balada]
  = Handlers.$fYesodDispatchBalada
"SPEC/Handlers $fApplicativeWidgetT @ Balada @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                  (Yesod.Core.Types.WidgetT
                                                                                     Foundation.Balada
                                                                                     GHC.Types.IO)
                                                                   $dMonad :: GHC.Base.Monad
                                                                                GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT @ Foundation.Balada
                                        @ GHC.Types.IO
                                        $dFunctor
                                        $dMonad
  = Handlers.$s$fApplicativeWidgetT
"SPEC/Handlers $fApplicativeWidgetT_$c*> @ Balada @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                       (Yesod.Core.Types.WidgetT
                                                                                          Foundation.Balada
                                                                                          GHC.Types.IO)
                                                                        $dMonad :: GHC.Base.Monad
                                                                                     GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c*> @ Foundation.Balada
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
"SPEC/Handlers $fApplicativeWidgetT_$c<* @ Balada @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                       (Yesod.Core.Types.WidgetT
                                                                                          Foundation.Balada
                                                                                          GHC.Types.IO)
                                                                        $dMonad :: GHC.Base.Monad
                                                                                     GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c<* @ Foundation.Balada
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<*
"SPEC/Handlers $fApplicativeWidgetT_$cpure @ Balada @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                         (Yesod.Core.Types.WidgetT
                                                                                            Foundation.Balada
                                                                                            GHC.Types.IO)
                                                                          $dMonad :: GHC.Base.Monad
                                                                                       GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$cpure @ Foundation.Balada
                                               @ GHC.Types.IO
                                               $dFunctor
                                               $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$cpure
"SPEC/Handlers $fMonadBasebWidgetT @ IO @ Balada @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                          GHC.Types.IO
                                                                       $dApplicative1 :: GHC.Base.Applicative
                                                                                           (Yesod.Core.Types.WidgetT
                                                                                              Foundation.Balada
                                                                                              GHC.Types.IO)
                                                                       $dMonad :: GHC.Base.Monad
                                                                                    GHC.Types.IO
                                                                       $dMonad1 :: GHC.Base.Monad
                                                                                     (Yesod.Core.Types.WidgetT
                                                                                        Foundation.Balada
                                                                                        GHC.Types.IO)
                                                                       $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                        GHC.Types.IO
                                                                                        GHC.Types.IO
  Yesod.Core.Types.$fMonadBasebWidgetT @ GHC.Types.IO
                                       @ Foundation.Balada
                                       @ GHC.Types.IO
                                       $dApplicative
                                       $dApplicative1
                                       $dMonad
                                       $dMonad1
                                       $dMonadBase
  = Handlers.$s$fMonadBasebWidgetT
"SPEC/Handlers $fMonadHandlerWidgetT @ Balada @ IO" [ALWAYS] forall $dMonadResource :: Control.Monad.Trans.Resource.Internal.MonadResource
                                                                                         (Yesod.Core.Types.WidgetT
                                                                                            Foundation.Balada
                                                                                            GHC.Types.IO)
                                                                    tup :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                             GHC.Types.IO
  Yesod.Core.Class.Handler.$fMonadHandlerWidgetT @ Foundation.Balada
                                                 @ GHC.Types.IO
                                                 $dMonadResource
                                                 tup
  = Handlers.$s$fMonadHandlerWidgetT
"SPEC/Handlers $fMonadIOWidgetT @ Balada @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                            (Yesod.Core.Types.WidgetT
                                                                               Foundation.Balada
                                                                               GHC.Types.IO)
                                                               $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                              GHC.Types.IO
  Yesod.Core.Types.$fMonadIOWidgetT @ Foundation.Balada
                                    @ GHC.Types.IO
                                    $dMonad
                                    $dMonadIO
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT
"SPEC/Handlers $fMonadResourceWidgetT @ Balada @ IO" [ALWAYS] forall $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                       (Yesod.Core.Types.WidgetT
                                                                                          Foundation.Balada
                                                                                          GHC.Types.IO)
                                                                     $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                    (Yesod.Core.Types.WidgetT
                                                                                       Foundation.Balada
                                                                                       GHC.Types.IO)
                                                                     $dApplicative :: GHC.Base.Applicative
                                                                                        (Yesod.Core.Types.WidgetT
                                                                                           Foundation.Balada
                                                                                           GHC.Types.IO)
                                                                     $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                      GHC.Types.IO
                                                                                      (Yesod.Core.Types.WidgetT
                                                                                         Foundation.Balada
                                                                                         GHC.Types.IO)
                                                                     $dApplicative1 :: GHC.Base.Applicative
                                                                                         GHC.Types.IO
                                                                     $dMonadIO1 :: Control.Monad.IO.Class.MonadIO
                                                                                     GHC.Types.IO
                                                                     $dMonadBase1 :: Control.Monad.Base.MonadBase
                                                                                       GHC.Types.IO
                                                                                       GHC.Types.IO
                                                                     $dMonadThrow1 :: Control.Monad.Catch.MonadThrow
                                                                                        GHC.Types.IO
  Yesod.Core.Types.$fMonadResourceWidgetT @ Foundation.Balada
                                          @ GHC.Types.IO
                                          $dMonadThrow
                                          $dMonadIO
                                          $dApplicative
                                          $dMonadBase
                                          $dApplicative1
                                          $dMonadIO1
                                          $dMonadBase1
                                          $dMonadThrow1
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT
"SPEC/Handlers $fMonadThrowWidgetT @ Balada @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                               (Yesod.Core.Types.WidgetT
                                                                                  Foundation.Balada
                                                                                  GHC.Types.IO)
                                                                  $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                    GHC.Types.IO
  Yesod.Core.Types.$fMonadThrowWidgetT @ Foundation.Balada
                                       @ GHC.Types.IO
                                       $dMonad
                                       $dMonadThrow
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT
"SPEC/Handlers $fMonadWidgetT @ Balada @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                (Yesod.Core.Types.WidgetT
                                                                                   Foundation.Balada
                                                                                   GHC.Types.IO)
                                                             $dMonad :: GHC.Base.Monad GHC.Types.IO
  Yesod.Core.Types.$fMonadWidgetT @ Foundation.Balada
                                  @ GHC.Types.IO
                                  $dApplicative
                                  $dMonad
  = Handlers.$s$fMonadBasebWidgetT_$s$fMonadWidgetT
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

